{"version":3,"sources":["webpack:///./src/app/components/setting/address-tabs/region/edit/edit-region.component.css","webpack:///./src/app/components/setting/address-tabs/region/edit/edit-region.component.html","webpack:///./src/app/components/setting/address-tabs/region/edit/edit-region.component.ts","webpack:///./src/app/components/setting/address-tabs/region/list/list-region.component.css","webpack:///./src/app/components/setting/address-tabs/region/list/list-region.component.html","webpack:///./src/app/components/setting/address-tabs/region/list/list-region.component.ts","webpack:///./src/app/components/setting/address-tabs/region/region-routing.module.ts","webpack:///./src/app/components/setting/address-tabs/region/region.component.css","webpack:///./src/app/components/setting/address-tabs/region/region.component.html","webpack:///./src/app/components/setting/address-tabs/region/region.component.ts","webpack:///./src/app/components/setting/address-tabs/region/region.module.ts"],"names":[],"mappings":";;;;;;;;;AAAA,0BAA0B,oBAAoB,KAAK,qBAAqB,uBAAuB,wBAAwB,yBAAyB,KAAK,sBAAsB,uBAAuB,uBAAuB,uBAAuB,KAAK,2BAA2B,6BAA6B,+BAA+B,4BAA4B,aAAa,mBAAmB,uBAAuB,0BAA0B,KAAK,C;;;;;;;;;;;ACA9b,yuBAAyuB,2BAA2B,gMAAgM,0CAA0C,sHAAsH,kCAAkC,kMAAkM,0CAA0C,uHAAuH,gDAAgD,WAAW,GAAG,qHAAqH,iDAAiD,0HAA0H,yCAAyC,gNAAgN,0CAA0C,8HAA8H,gDAAgD,WAAW,GAAG,4HAA4H,8CAA8C,6e;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA14E;AACI;AACT;AACjB;AACR;AACQ;AACO;AACd;AAE6B;AACY;AAOlF;IAYE,6BAAoB,cAA8B,EAC9B,MAAc,EACd,IAAgB,EAChB,MAAwB,EACxB,cAA6B,EAAU,MAAoB,EAC3D,MAAqB,EACrB,EAAe;QANf,mBAAc,GAAd,cAAc,CAAgB;QAC9B,WAAM,GAAN,MAAM,CAAQ;QACd,SAAI,GAAJ,IAAI,CAAY;QAChB,WAAM,GAAN,MAAM,CAAkB;QACxB,mBAAc,GAAd,cAAc,CAAe;QAAU,WAAM,GAAN,MAAM,CAAc;QAC3D,WAAM,GAAN,MAAM,CAAe;QACrB,OAAE,GAAF,EAAE,CAAa;QAbnC,qBAAqB;QACrB,gBAAW,GAAG,KAAK,CAAC;QAalB,IAAI,CAAC,OAAO,GAAW,EAAE,CAAC;QAC1B,sBAAsB;QACtB,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;IAC5B,CAAC;IAED,sBAAI,4CAAW;aAAf;YACE,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;QAC9C,CAAC;;;OAAA;IAED,sBAAI,qCAAI;aAAR;YACE,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;QAC3C,CAAC;;;OAAA;IAED,sBAAI,mDAAkB;aAAtB;YACE,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;QACrD,CAAC;;;OAAA;IAED,sCAAQ,GAAR;QACE,IAAM,EAAE,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QACrD,EAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;YACX,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB,IAAI,CAAC,KAAK,GAAG,qBAAqB,CAAC;YACnC,sBAAsB;YACtB,MAAM,CAAC;QACT,CAAC;QACD,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACP,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;QACrB,CAAC;IACH,CAAC;IAED,4CAAc,GAAd,UAAe,WAAW;QACxB;;;;;;;;aAQK;IACP,CAAC;IAED,uCAAS,GAAT,UAAU,EAAE;QAAZ,iBAYC;QAXC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;QAC7B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,cAAc;aAClC,SAAS,CAAC,EAAE,CAAC;aACb,SAAS,CAAC,gBAAM;YACb,KAAI,CAAC,OAAO,GAAG,MAAM,CAAC;YACtB,6BAA6B;YAC7B,KAAI,CAAC,UAAU,EAAE,CAAC;QACpB,CAAC,EACD,eAAK,IAAI,YAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAA9C,CAA8C,CAAC,CAAC;QAC7D,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;IAChC,CAAC;IAED,wCAAU,GAAV;QACE,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC;YACxB,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,IAAI,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,QAAQ,EAAE;YAChF,YAAY,EAAE,IAAI,CAAC,OAAO,CAAC,WAAW,IAAI,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,QAAQ,EAAE;YACzF,mBAAmB,EAAE,IAAI,CAAC,OAAO,CAAC,kBAAkB,IAAI,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,kBAAkB,CAAC,QAAQ,EAAE;SAC/G,CAAC,CAAC;QACH,WAAW;QAEX,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;IAC3B,CAAC;IAED,sCAAQ,GAAR;QACE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC/B,SAAS,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACpC,YAAY,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC;oBAClF,yDAAU,CAAC,OAAO,CAAC,uBAAuB,CAAC,CAAC,CAAC,CAAC;YAChD,mBAAmB,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC;oBACzF,yDAAU,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;SAC1C,CAAC,CAAC;IACL,CAAC;IAED;;;;;;;;;;;;QAYI;IAEJ,wCAAU,GAAV,UAAW,GAAQ,EAAE,GAAQ;QAC3B,IAAM,EAAE,GAAG,2EAAW,CAAC,GAAG,CAAC,CAAC;QAC5B,IAAM,EAAE,GAAG,2EAAW,CAAC,GAAG,CAAC,CAAC;QAC5B,MAAM,CAAC,EAAE,KAAK,EAAE,CAAC;IACnB,CAAC;IAEM,sCAAQ,GAAf;QAAA,iBAoBC;QAnBC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;YAC5B,MAAM,CAAC;QACT,CAAC;QAED,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;YACrB;;;;;;gBAMI;YACJ,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;QAC/B,CAAC;QACD,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,UAAU,CACnC,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC,SAAS,CAAC,UAAC,OAAe;YAChD,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;QAC9B,CAAC,EACD,aAAG,IAAI,YAAI,CAAC,WAAW,CAAC,GAAG,CAAC,EAArB,CAAqB,CAAC,CAAC;IAClC,CAAC;IAED,yCAAW,GAAX;QACE,kCAAkC;IACpC,CAAC;IAED,oCAAM,GAAN;QACE,yCAAyC;QACzC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;IACpC,CAAC;IAEO,2CAAa,GAArB,UAAsB,OAAgB;QACpC,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YACZ,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACzB,CAAC;QACD,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAC9B,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,4BAA4B,CAAC,CAAC;QAClD,yCAAyC;QACzC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;IACpC,CAAC;IAEO,yCAAW,GAAnB,UAAoB,GAAG;QACrB,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAC9B,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;QAC7C,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;IAChC,CAAC;IAEO,6CAAe,GAAvB;QACE,IAAM,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;QACzC,MAAM,CAAC;YACL,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ;YACxD,WAAW,EAAE,SAAS,CAAC,YAAY;YACnC,kBAAkB,EAAE,SAAS,CAAC,mBAAmB;SAClD,CAAC;IACJ,CAAC;IAxKD;QAFC,+DAAS,CAAC,MAAM,CAAC;kCAEN,uDAAY;2DAAC;IAHd,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;;;SAG5B,CAAC;yCAaoC,8DAAc;YACtB,sDAAM;YACR,+DAAU;YACR,kEAAgB;YACR,6DAAa,EAAkB,+EAAY;YACnD,wDAAa;YACjB,0DAAW;OAlBxB,mBAAmB,CA4K/B;IAAD,0BAAC;CAAA;AA5K+B;;;;;;;;;;;;ACjBhC,2BAA2B,2CAA2C,6BAA6B,kCAAkC,mCAAmC,KAAK,K;;;;;;;;;;;ACA7K,waAAwa,cAAc,wQAAwQ,iBAAiB,uRAAuR,wBAAwB,sRAAsR,oBAAoB,yTAAyT,mCAAmC,msBAAmsB,2BAA2B,oN;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAtxE;AAE2B;AACrD;AACA;AACO;AACd;AAC4D;AACrC;AACZ;AAOtD;IAYE,6BAAoB,IAAgB,EAC1B,aAA4B,EAC5B,MAAoB,EACpB,MAAqB,EAAS,MAAiB,EAC/C,MAAc,EAAU,KAAqB;QAJnC,SAAI,GAAJ,IAAI,CAAY;QAC1B,kBAAa,GAAb,aAAa,CAAe;QAC5B,WAAM,GAAN,MAAM,CAAc;QACpB,WAAM,GAAN,MAAM,CAAe;QAAS,WAAM,GAAN,MAAM,CAAW;QAC/C,WAAM,GAAN,MAAM,CAAQ;QAAU,UAAK,GAAL,KAAK,CAAgB;QAXvD,qBAAgB,GAAG,CAAC,UAAU,EAAE,aAAa,EAAE,oBAAoB,EAAE,SAAS,CAAC,CAAC;QAY9E,6DAA6D;QAC7D,IAAI,CAAC,UAAU,GAAG,IAAI,oEAAkB,EAAE,CAAC;IAC7C,CAAC;IAED,yCAAW,GAAX,UAAY,WAAmB;QAC7B,WAAW,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,CAAC,oBAAoB;QACtD,WAAW,GAAG,WAAW,CAAC,WAAW,EAAE,CAAC,CAAC,2CAA2C;QACpF,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC;QACrC,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC;YAC9B,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC;QACxC,CAAC;IACH,CAAC;IAED,sCAAQ,GAAR;QACE,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,wCAAU,GAAV;QAAA,iBAqBC;QApBC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;QAC7B,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE;aAC5B,SAAS,CAAC,gBAAM;YACf,KAAI,CAAC,YAAY,GAAG,MAAM,CAAC;YAC3B,EAAE,CAAC,CAAC,CAAC,KAAI,CAAC,YAAY,CAAC,CAAC,CAAC;gBACvB,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,+BAA+B,EAAE,OAAO,EAAE;oBAC1D,WAAW,EAAE,IAAI;iBAClB,CAAC,CAAC;YACL,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,KAAI,CAAC,UAAU,CAAC,IAAI,GAAG,KAAI,CAAC,YAAY,CAAC;YAC3C,CAAC;QACH,CAAC,EACC,aAAG;YACD,EAAE,CAAC,CAAC,CAAC,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;gBACzB,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,+DAA+D,CAAC,CAAC;YACrF,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;YAC/C,CAAC;QACH,CAAC,CAAC,CAAC;QACP,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;IAChC,CAAC;IAED,6CAAe,GAAf;QACE,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAC3C,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;IACnC,CAAC;IAED,wCAAU,GAAV,UAAW,WAAmB;QAC5B,EAAE,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;YAChB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,eAAe,EAAE,WAAW,CAAC,QAAQ,CAAC,EAAE,EAAE,UAAU,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;QAC5F,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC,CAAC;QAC7C,CAAC;IACH,CAAC;IAED,2CAAa,GAAb,UAAc,WAAmB;QAAjC,iBAyBC;QAxBC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,oHAAyB,EAChE;YACE,YAAY,EAAE,KAAK;SACpB,CAAC,CAAC;QAEL,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,cAAc,GAAG,kCAAkC,CAAC;QAE5F,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,gBAAM;YAClD,KAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;YAC7B,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;gBACX,KAAI,CAAC,aAAa,CAAC,YAAY,CAAC,WAAW,CAAC;qBACzC,SAAS,CAAC,iBAAO;oBAChB,KAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;oBAC9B,KAAI,CAAC,UAAU,CAAC,IAAI,GAAG,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,cAAI,IAAI,WAAI,KAAK,WAAW,EAApB,CAAoB,CAAC,CAAC;gBACnF,CAAC,EACC,eAAK;oBACH,2CAA2C;oBAC3C,KAAI,CAAC,MAAM,CAAC,KAAK,CACf,+DAA4D,mEAAS,CAAC,sBAAsB,CAAC,KAAK,CAAC,OAAG,EACtG,cAAc,CAAC,CAAC;gBACpB,CAAC,CAAC,CAAC;YACT,CAAC;YACD,KAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAChC,CAAC,CAAC,CAAC;IACL,CAAC;IA5FwB;QAAxB,+DAAS,CAAC,8DAAY,CAAC;kCAAY,8DAAY;0DAAC;IAC7B;QAAnB,+DAAS,CAAC,yDAAO,CAAC;kCAAO,yDAAO;qDAAC;IAJvB,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;;;SAG5B,CAAC;yCAa0B,+DAAU;YACX,6DAAa;YACpB,+EAAY;YACZ,wDAAa,EAAiB,2DAAS;YACvC,sDAAM,EAAiB,8DAAc;OAhB5C,mBAAmB,CAgG/B;IAAD,0BAAC;CAAA;AAhG+B;;;;;;;;;;;;;;;;;;;;;;;;;;AChBS;AACc;AACF;AACc;AACA;AAEnE,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,iEAAe,EAAE,QAAQ,EAAE;YAC9C,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,+EAAmB,EAAE;YAC5C,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,+EAAmB,EAAE;YAChD,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,+EAAmB,EAAE;SACrD;KACF;CACF,CAAC;AAMF;IAAA;IACA,CAAC;IADY,mBAAmB;QAJ/B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,mBAAmB,CAC/B;IAAD,0BAAC;CAAA;AAD+B;;;;;;;;;;;;ACpBhC,mB;;;;;;;;;;;ACAA,kD;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IACE;IAAgB,CAAC;IAEjB,kCAAQ,GAAR;IACA,CAAC;IAJU,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;;;SAGvB,CAAC;;OACW,eAAe,CAK3B;IAAD,sBAAC;CAAA;AAL2B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPa;AAEqB;AACK;AACA;AACd;AACQ;AAW7D;IAAA;IACA,CAAC;IADY,YAAY;QATxB,8DAAQ,CAAC;YACR,OAAO,EAAE;gBAEP,0EAAmB;gBACnB,0EAAY;aACb;YACD,YAAY,EAAE,CAAC,+EAAmB,EAAE,+EAAmB,EAAE,iEAAe,CAAC;YACzE,OAAO,EAAE,CAAC,+EAAmB,EAAE,+EAAmB,EAAE,iEAAe,CAAC;SACrE,CAAC;OACW,YAAY,CACxB;IAAD,mBAAC;CAAA;AADwB","file":"app-components-setting-address-tabs-address-module~app-components-setting-address-tabs-region-region~c004adf2.js","sourcesContent":["module.exports = \"/* div {\\r\\n  display: flex;\\r\\n} */\\r\\n\\r\\nmat-card {\\r\\n  max-width: 500px;\\r\\n  margin: 10px auto;\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\nmat-checkbox {\\r\\n  max-width: 500px;\\r\\n  margin: 2em auto;\\r\\n  text-align: left;\\r\\n}\\r\\n\\r\\n/*mat-form-field  {*/\\r\\n\\r\\n/*max-width: 400px;*/\\r\\n\\r\\n/*margin-right: 10px;*/\\r\\n\\r\\n/*font-size: 16px;*/\\r\\n\\r\\n/*}*/\\r\\n\\r\\n.row\\r\\n{\\r\\n  text-align: left;\\r\\n  margin-bottom: 15px;\\r\\n}\"","module.exports = \"<div [@fadeInOut] class=\\\"border\\\">\\r\\n\\r\\n  <mat-card>\\r\\n    <mat-progress-bar *ngIf=\\\"loadingIndicator\\\" mode=\\\"query\\\"></mat-progress-bar>\\r\\n    <mat-card-header>\\r\\n      <mat-card-title>\\r\\n        <!-- <mat-icon class=\\\"mat-button-icon\\\">person_add</mat-icon> Edit Customer -->\\r\\n      </mat-card-title>\\r\\n    </mat-card-header>\\r\\n    <br/>\\r\\n    <br/>\\r\\n\\r\\n    <mat-card-content>\\r\\n      <form #form=\\\"ngForm\\\" [formGroup]=\\\"regionsForm\\\" novalidate (ngSubmit)=\\\"onSubmit()\\\" fxLayout=\\\"column\\\"\\r\\n            autocomplete=\\\"off\\\">\\r\\n        <div fxLayout=\\\"column\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"2em\\\" class=\\\"row\\\">\\r\\n          <mat-form-field style=\\\"width: 150px\\\">\\r\\n            <mat-label>{{'region.Code' | translate}}</mat-label>\\r\\n            <input matInput formControlName=\\\"cRegionId\\\" required maxlength=\\\"2\\\" required/>\\r\\n            <mat-error *ngIf=\\\"Code.hasError('required')\\\">\\r\\n              {{'common.validation.Required' | translate}}\\r\\n            </mat-error>\\r\\n          </mat-form-field>\\r\\n          <mat-form-field>\\r\\n            <mat-label>{{'region.Description' | translate}}</mat-label>\\r\\n            <input matInput formControlName=\\\"cDescription\\\" required maxlength=\\\"15\\\"/>\\r\\n            <mat-error *ngIf=\\\"Description.hasError('required')\\\">\\r\\n              {{'common.validation.Required' | translate}}\\r\\n            </mat-error>\\r\\n            <mat-error *ngIf=\\\"Description.hasError('maxlength')\\\">\\r\\n              {{'common.validation.MaxLengthChar' | translate: {'max':'15'} }}\\r\\n            </mat-error>\\r\\n            <mat-error *ngIf=\\\"Description.hasError('pattern')\\\">\\r\\n              {{'common.validation.UseEthiopicOnly' | translate}}\\r\\n            </mat-error>\\r\\n          </mat-form-field>\\r\\n\\r\\n          <mat-form-field>\\r\\n            <mat-label>{{'region.DescriptionEnglish' | translate}}</mat-label>\\r\\n            <input matInput formControlName=\\\"cDescriptionEnglish\\\" required maxlength=\\\"20\\\"/>\\r\\n            <mat-error *ngIf=\\\"DescriptionEnglish.hasError('required')\\\">\\r\\n              {{'common.validation.Required' | translate}}\\r\\n            </mat-error>\\r\\n            <mat-error *ngIf=\\\"DescriptionEnglish.hasError('maxlength')\\\">\\r\\n              {{'common.validation.MaxLengthChar' | translate: {'max':'20'} }}\\r\\n            </mat-error>\\r\\n            <mat-error *ngIf=\\\"DescriptionEnglish.hasError('pattern')\\\">\\r\\n              {{'common.validation.UseLatinOnly' | translate}}\\r\\n            </mat-error>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n        <div mat-dialog-actions>\\r\\n          <button [disabled]=\\\"form.invalid\\\" mat-raised-button type=\\\"submit\\\" color=\\\"primary\\\">\\r\\n            Save\\r\\n          </button>\\r\\n          <button mat-raised-button (click)=\\\"onBack()\\\" color=\\\"warn\\\" type=\\\"button\\\">\\r\\n            Cancel\\r\\n          </button>\\r\\n        </div>\\r\\n      </form>\\r\\n    </mat-card-content>\\r\\n  </mat-card>\\r\\n</div>\\r\\n\"","import {Component, OnDestroy, OnInit, ViewChild} from '@angular/core';\r\nimport {FormBuilder, FormGroup, NgForm, Validators} from '@angular/forms';\r\nimport {AppConfiguration} from '../../../../../config/appconfig';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Subscription} from 'rxjs/index';\r\nimport {RegionService} from '../region.service';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {Region} from '../../../../../model/address';\r\nimport {determineId} from '../../../../../../@custor/helpers/compare';\r\nimport {ErrorMessage} from '../../../../../../@custor/services/errMessageService';\r\n\r\n@Component({\r\n  selector: 'app-edit-region',\r\n  templateUrl: './edit-region.component.html',\r\n  styleUrls: ['./edit-region.component.css']\r\n})\r\nexport class EditRegionComponent implements OnInit, OnDestroy {\r\n  @ViewChild('form')\r\n\r\n  regionsSub: Subscription;\r\n  title: string;\r\n  /*serviceId:number;*/\r\n  isNewRegion = false;\r\n  regions: Region;\r\n  regionsForm: FormGroup;\r\n  loadingIndicator: boolean;\r\n  private form: NgForm;\r\n\r\n  constructor(private activatedRoute: ActivatedRoute,\r\n              private router: Router,\r\n              private http: HttpClient,\r\n              private config: AppConfiguration,\r\n              private regionsService: RegionService, private errMsg: ErrorMessage,\r\n              private toastr: ToastrService,\r\n              private fb: FormBuilder) {\r\n    this.regions = <Region>{};\r\n    // initialize the form\r\n    this.initForm();\r\n    this.initStaticData('en');\r\n  }\r\n\r\n  get Description() {\r\n    return this.regionsForm.get('cDescription');\r\n  }\r\n\r\n  get Code() {\r\n    return this.regionsForm.get('cRegionId');\r\n  }\r\n\r\n  get DescriptionEnglish() {\r\n    return this.regionsForm.get('cDescriptionEnglish');\r\n  }\r\n\r\n  ngOnInit() {\r\n    const id = this.activatedRoute.snapshot.params['id'];\r\n    if (id < 1) {\r\n      this.isNewRegion = true;\r\n      this.title = 'Create a new Region';\r\n      /*this.getService();*/\r\n      return;\r\n    }\r\n    if (id) {\r\n      this.getRegion(id);\r\n    }\r\n  }\r\n\r\n  initStaticData(currentLang) {\r\n    /*let SecType: RegionType = new RegionType();\r\n    RegionTypes.forEach(pair => {\r\n      SecType = {\r\n        'Id': pair.Id.toString(),\r\n        'DescriptionEnglish': pair.DescriptionEnglish,\r\n        'Description': pair.Description\r\n      };\r\n      this.regionTypes.push(SecType);\r\n    });*/\r\n  }\r\n\r\n  getRegion(id) {\r\n    this.isNewRegion = false;\r\n    this.loadingIndicator = true;\r\n    this.regionsSub = this.regionsService\r\n      .getRegion(id)\r\n      .subscribe(result => {\r\n          this.regions = result;\r\n          // console.log(this.regions);\r\n          this.updateForm();\r\n        },\r\n        error => this.toastr.error(this.errMsg.getError(error)));\r\n    this.loadingIndicator = false;\r\n  }\r\n\r\n  updateForm() {\r\n    this.regionsForm.setValue({\r\n      cRegionId: this.regions.RegionId == null ? '' : this.regions.RegionId.toString(),\r\n      cDescription: this.regions.Description == null ? '' : this.regions.Description.toString(),\r\n      cDescriptionEnglish: this.regions.DescriptionEnglish == null ? '' : this.regions.DescriptionEnglish.toString()\r\n    });\r\n    // },4000);\r\n\r\n    this.isNewRegion = false;\r\n  }\r\n\r\n  initForm() {\r\n    this.regionsForm = this.fb.group({\r\n      cRegionId: ['', Validators.required],\r\n      cDescription: ['', Validators.compose([Validators.required, Validators.maxLength(15),\r\n        Validators.pattern('^([ \\u1200-\\u137F])+$')])],\r\n      cDescriptionEnglish: ['', Validators.compose([Validators.required, Validators.maxLength(20),\r\n        Validators.pattern('^[a-zA-Z /,]+$')])]\r\n    });\r\n  }\r\n\r\n  /* checkRecordExistance(): boolean {\r\n     const formModel = this.servicesForm.value;\r\n     this.regionsSub = this.regionsService\r\n       .getServices(formModel.cServiceNameEnglish, formModel.cServiceType)\r\n       .subscribe(result => {\r\n         this.regions = result\r\n       })\r\n     if (this.regions.ServiceId == null) {\r\n       return false;\r\n     } else {\r\n       return true;\r\n     }\r\n   }*/\r\n\r\n  compareIds(id1: any, id2: any): boolean {\r\n    const a1 = determineId(id1);\r\n    const a2 = determineId(id2);\r\n    return a1 === a2;\r\n  }\r\n\r\n  public onSubmit() {\r\n    if (!this.regionsForm.valid) {\r\n      return;\r\n    }\r\n\r\n    if (this.isNewRegion) {\r\n      /* if (this.checkRecordExistance()) {\r\n         this.toastr.show(\r\n           'Record Exist', 'message', {\r\n             closeButton: true\r\n           })\r\n         return;\r\n       }*/\r\n      this.loadingIndicator = true;\r\n    }\r\n    return this.regionsService.saveRegion(\r\n      this.getEditedRegion()).subscribe((regions: Region) => {\r\n        this.saveCompleted(regions);\r\n      },\r\n      err => this.handleError(err));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    //  this.regionsSub.unsubscribe();\r\n  }\r\n\r\n  onBack() {\r\n    //this.router.navigate(['regions/list']);\r\n    this.router.navigate(['address']);\r\n  }\r\n\r\n  private saveCompleted(regions?: Region) {\r\n    if (regions) {\r\n      this.regions = regions;\r\n    }\r\n    this.loadingIndicator = false;\r\n    this.toastr.success('Record saved successfully!');\r\n    //this.router.navigate(['regions/list']);\r\n    this.router.navigate(['address']);\r\n  }\r\n\r\n  private handleError(err) {\r\n    this.loadingIndicator = false;\r\n    this.toastr.error(this.errMsg.getError(err));\r\n    this.loadingIndicator = false;\r\n  }\r\n\r\n  private getEditedRegion(): Region {\r\n    const formModel = this.regionsForm.value;\r\n    return {\r\n      RegionId: this.isNewRegion ? '0' : this.regions.RegionId,\r\n      Description: formModel.cDescription,\r\n      DescriptionEnglish: formModel.cDescriptionEnglish,\r\n    };\r\n  }\r\n}\r\n","module.exports = \".border {\\r\\n//border: 1px solid rgb(250, 250, 250);\\r\\n  border: 1px solid #ccc;\\r\\n  border-top-left-radius: 6px;\\r\\n  border-top-right-radius: 6px;\\r\\n}\\r\\n\"","module.exports = \"<div [@fadeInOut] class=\\\"border\\\">\\r\\n  <div>\\r\\n    <mat-progress-bar *ngIf=\\\"loadingIndicator\\\" mode=\\\"query\\\"></mat-progress-bar>\\r\\n    <mat-table [dataSource]=\\\"dataSource\\\" matSort>\\r\\n\\r\\n      <ng-container matColumnDef=\\\"RegionId\\\">\\r\\n        <mat-header-cell *matHeaderCellDef mat-sort-header fxFlex=\\\"80px\\\">Id</mat-header-cell>\\r\\n        <mat-cell *matCellDef=\\\"let row\\\" fxFlex=\\\"80px\\\"> {{row.RegionId}}</mat-cell>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"Description\\\">\\r\\n        <mat-header-cell *matHeaderCellDef mat-sort-header fxFlex=\\\"180px\\\">Description</mat-header-cell>\\r\\n        <mat-cell *matCellDef=\\\"let row\\\" fxFlex=\\\"180px\\\"> {{row.Description}}</mat-cell>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"DescriptionEnglish\\\">\\r\\n        <mat-header-cell *matHeaderCellDef mat-sort-header fxFlex=\\\"180px\\\">Description English</mat-header-cell>\\r\\n        <mat-cell *matCellDef=\\\"let row\\\" fxFlex=\\\"180px\\\"> {{row.DescriptionEnglish}}</mat-cell>\\r\\n      </ng-container>\\r\\n      <!-- <ng-container matColumnDef=\\\"EconomicRegion\\\">\\r\\n         <mat-header-cell *matHeaderCellDef mat-sort-header fxFlex=\\\"100px\\\">Economic Region</mat-header-cell>\\r\\n         <mat-cell *matCellDef=\\\"let row\\\" fxFlex=\\\"100px\\\"> {{row.EconomicRegion}}</mat-cell>\\r\\n       </ng-container>-->\\r\\n      <ng-container matColumnDef=\\\"actions\\\">\\r\\n        <mat-header-cell *matHeaderCellDef fxFlex=\\\"100px\\\">\\r\\n          <button mat-button color=\\\"primary\\\" (click)=\\\"editRegion()\\\">\\r\\n            <mat-icon class=\\\"mat-button-icon\\\">add</mat-icon>\\r\\n            {{'common.commands.Add' | translate}}\\r\\n          </button>\\r\\n        </mat-header-cell>\\r\\n        <mat-header-cell *matHeaderCellDef fxFlex=\\\"100px\\\">\\r\\n        </mat-header-cell>\\r\\n        <mat-cell *matCellDef=\\\"let Regions\\\" fxFlex=\\\"100px\\\">\\r\\n          <button mat-icon-button (click)=\\\"editRegion(Regions)\\\" type=\\\"button\\\">\\r\\n            <mat-icon>edit</mat-icon>\\r\\n          </button>\\r\\n          <button mat-icon-button (click)=\\\"confirmDelete(Regions)\\\" type=\\\"button\\\">\\r\\n            <mat-icon color=\\\"warn\\\">delete</mat-icon>\\r\\n          </button>\\r\\n        </mat-cell>\\r\\n      </ng-container>\\r\\n\\r\\n      <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\r\\n      <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\">\\r\\n      </mat-row>\\r\\n    </mat-table>\\r\\n    <mat-paginator\\r\\n\\r\\n      #paginator\\r\\n      [pageSize]=\\\"7\\\"\\r\\n      [pageSizeOptions]=\\\"[5, 7,10, 20]\\\">\\r\\n    </mat-paginator>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Region } from '../../../../../model/address';\r\nimport { MatDialog, MatDialogRef, MatPaginator, MatSort, MatTableDataSource } from '@angular/material';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { RegionService } from '../region.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AngConfirmDialogComponent } from '@custor/components/confirm-dialog/confirm-dialog.component';\r\nimport { ErrorMessage } from '@custor/services/errMessageService';\r\nimport { Utilities } from '@custor/helpers/utilities';\r\n\r\n@Component({\r\n  selector: 'app-list-region',\r\n  templateUrl: './list-region.component.html',\r\n  styleUrls: ['./list-region.component.css']\r\n})\r\nexport class ListRegionComponent implements OnInit, AfterViewInit {\r\n  regionModels: Region[];\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  displayedColumns = ['RegionId', 'Description', 'DescriptionEnglish', 'actions'];\r\n\r\n  dataSource: MatTableDataSource<Region>;\r\n  loadingIndicator: boolean;\r\n  dialogRef: any;\r\n  confirmDialogRef: MatDialogRef<AngConfirmDialogComponent>;\r\n\r\n  constructor(private http: HttpClient,\r\n    private regionService: RegionService,\r\n    private errMsg: ErrorMessage,\r\n    private toastr: ToastrService, public dialog: MatDialog,\r\n    private router: Router, private route: ActivatedRoute) {\r\n    // Assign the data to the data source for the table to render\r\n    this.dataSource = new MatTableDataSource();\r\n  }\r\n\r\n  applyFilter(filterValue: string) {\r\n    filterValue = filterValue.trim(); // Remove whitespace\r\n    filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches\r\n    this.dataSource.filter = filterValue;\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getRegions();\r\n  }\r\n\r\n  getRegions() {\r\n    this.loadingIndicator = true;\r\n    this.regionService.getRegions()\r\n      .subscribe(result => {\r\n        this.regionModels = result;\r\n        if (!this.regionModels) {\r\n          this.toastr.error('No records were found to list', 'Error', {\r\n            closeButton: true,\r\n          });\r\n        } else {\r\n          this.dataSource.data = this.regionModels;\r\n        }\r\n      },\r\n        err => {\r\n          if (!this.errMsg.message) {\r\n            this.toastr.error('Error! Please check if the Web serviceprerequistie is running');\r\n          } else {\r\n            this.toastr.error(this.errMsg.getError(err));\r\n          }\r\n        });\r\n    this.loadingIndicator = false;\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  editRegion(regionModel: Region) {\r\n    if (regionModel) {\r\n      this.router.navigate(['/regions/edit', regionModel.RegionId], { relativeTo: this.route });\r\n    } else {\r\n      this.router.navigate(['/regions/edit', 0]);\r\n    }\r\n  }\r\n\r\n  confirmDelete(regionModel: Region) {\r\n    this.confirmDialogRef = this.dialog.open(AngConfirmDialogComponent,\r\n      {\r\n        disableClose: false\r\n      });\r\n\r\n    this.confirmDialogRef.componentInstance.confirmMessage = 'Are you sure you want to delete?';\r\n\r\n    this.confirmDialogRef.afterClosed().subscribe(result => {\r\n      this.loadingIndicator = true;\r\n      if (result) {\r\n        this.regionService.deleteRegion(regionModel)\r\n          .subscribe(results => {\r\n            this.loadingIndicator = false;\r\n            this.dataSource.data = this.dataSource.data.filter(item => item !== regionModel);\r\n          },\r\n            error => {\r\n              // tslint:disable-next-line:max-line-length\r\n              this.toastr.error(\r\n                `An error occured whilst deleting the Service.\\r\\nError: \"${Utilities.getHttpResponseMessage(error)}\"`,\r\n                'Delete Error');\r\n            });\r\n      }\r\n      this.loadingIndicator = false;\r\n    });\r\n  }\r\n}","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { RegionComponent } from './region.component';\r\nimport { EditRegionComponent } from './edit/edit-region.component';\r\nimport { ListRegionComponent } from './list/list-region.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '', component: RegionComponent, children: [\r\n      { path: '', component: ListRegionComponent },\r\n      { path: 'list', component: ListRegionComponent },\r\n      { path: 'edit/:id', component: EditRegionComponent }\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class RegionRoutingModule {\r\n}","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-region',\r\n  templateUrl: './region.component.html',\r\n  styleUrls: ['./region.component.css']\r\n})\r\nexport class RegionComponent implements OnInit {\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n}","import { NgModule } from '@angular/core';\r\n\r\nimport { RegionRoutingModule } from './region-routing.module';\r\nimport { ListRegionComponent } from './list/list-region.component';\r\nimport { EditRegionComponent } from './edit/edit-region.component';\r\nimport { RegionComponent } from './region.component';\r\nimport { SharedModule } from '@custor/modules/shared.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n\r\n    RegionRoutingModule,\r\n    SharedModule\r\n  ],\r\n  declarations: [ListRegionComponent, EditRegionComponent, RegionComponent],\r\n  exports: [ListRegionComponent, EditRegionComponent, RegionComponent]\r\n})\r\nexport class RegionModule {\r\n}"],"sourceRoot":""}