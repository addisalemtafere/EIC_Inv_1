{"version":3,"sources":["webpack:///./src/app/components/investor/company-clearance-form/company-clearance-form.component.html","webpack:///./src/app/components/investor/company-clearance-form/company-clearance-form.component.scss","webpack:///./src/app/components/investor/company-clearance-form/company-clearance-form.component.ts","webpack:///./src/app/components/investor/company-clearance-form/company-clearance.service.ts","webpack:///./src/app/components/investor/investor-tab/investor-tab-routing.module.ts","webpack:///./src/app/components/investor/investor-tab/investor-tab.component.html","webpack:///./src/app/components/investor/investor-tab/investor-tab.component.scss","webpack:///./src/app/components/investor/investor-tab/investor-tab.component.ts","webpack:///./src/app/components/investor/investor-tab/investor-tab.module.ts"],"names":[],"mappings":"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","file":"app-components-investor-investor-tab-investor-tab-module.js","sourcesContent":["module.exports = \"<div [@fadeInOut] class=\\\"page-content margin-2 mat-elevation-z8\\\">\\r\\n  <mat-progress-bar *ngIf=\\\"loadingIndicator\\\" mode=\\\"query\\\"></mat-progress-bar>\\r\\n  <form #form=\\\"ngForm\\\" [formGroup]=\\\"companyClearanceForm\\\" novalidate (ngSubmit)=\\\"onSubmit()\\\" fxLayout=\\\"column\\\"\\r\\n        autocomplete=\\\"off\\\">\\r\\n\\r\\n\\r\\n    <mat-divider></mat-divider>\\r\\n    <div id=\\\"divSole\\\" style=\\\"margin-top: 40px\\\">\\r\\n\\r\\n      <div fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"2em\\\" class=\\\"row\\\">\\r\\n        <div class=\\\"block full-width\\\">\\r\\n          <mat-form-field fxFlex=\\\"100\\\" class=\\\"full-width\\\">\\r\\n            <mat-label>Company Name English Option One</mat-label>\\r\\n            <input required matInput=\\\"\\\" formControlName=\\\"CompanyNameOneEnglish\\\">\\r\\n            <mat-error *ngIf=\\\"companyNameOneEnglish.hasError('required')\\\">\\r\\n              {{'common.validation.Required' | translate}}\\r\\n            </mat-error>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n        <div class=\\\"block full-width\\\">\\r\\n          <mat-form-field fxFlex=\\\"100\\\" class=\\\"full-width\\\">\\r\\n            <mat-label>Company Name Amharic Option One</mat-label>\\r\\n            <input required matInput=\\\"\\\" formControlName=\\\"CompanyNameOneAmharic\\\">\\r\\n            <mat-error *ngIf=\\\"companyNameOneAmharic.hasError('required')\\\">\\r\\n              {{'common.validation.Required' | translate}}\\r\\n            </mat-error>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"block full-width\\\" *ngIf=\\\"canViewTasks\\\">\\r\\n          <div mat-dialog-actions>\\r\\n\\r\\n            <button mat-raised-button (click)=\\\"onApproveNameOptionOne()\\\" color=\\\"primary\\\" type=\\\"button\\\">\\r\\n              {{'common.commands.Approve' | translate}}\\r\\n            </button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"2em\\\" class=\\\"row\\\">\\r\\n        <div class=\\\"block full-width\\\">\\r\\n          <mat-form-field fxFlex=\\\"100\\\" class=\\\"full-width\\\">\\r\\n            <mat-label>Company NameEnglish Option Two</mat-label>\\r\\n            <input required matInput=\\\"\\\" formControlName=\\\"CompanyNameTwoEnglish\\\">\\r\\n            <mat-error *ngIf=\\\"companyNameTwoEnglish.hasError('required')\\\">\\r\\n              {{'common.validation.Required' | translate}}\\r\\n            </mat-error>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n        <div class=\\\"block full-width\\\">\\r\\n          <mat-form-field fxFlex=\\\"100\\\" class=\\\"full-width\\\">\\r\\n            <mat-label>Company Name Amharic Option Two</mat-label>\\r\\n            <input required matInput=\\\"\\\" formControlName=\\\"CompanyNameTwoAmharic\\\">\\r\\n            <mat-error *ngIf=\\\"companyNameTwoAmharic.hasError('required')\\\">\\r\\n              {{'common.validation.Required' | translate}}\\r\\n            </mat-error>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"block full-width\\\" *ngIf=\\\"canViewTasks\\\">\\r\\n\\r\\n          <div mat-dialog-actions>\\r\\n            <button mat-raised-button (click)=\\\"onApproveNameOptionTwo()\\\" color=\\\"primary\\\" type=\\\"button\\\">\\r\\n              {{'common.commands.Approve' | translate}}\\r\\n            </button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"2em\\\" class=\\\"row\\\">\\r\\n        <div class=\\\"block full-width\\\">\\r\\n          <mat-form-field fxFlex=\\\"100\\\" class=\\\"full-width\\\">\\r\\n            <mat-label>Company NameEnglish Option Three</mat-label>\\r\\n            <input required matInput=\\\"\\\" formControlName=\\\"CompanyNameThreeEnglish\\\">\\r\\n            <mat-error *ngIf=\\\"companyNameThreeEnglish.hasError('required')\\\">\\r\\n              {{'common.validation.Required' | translate}}\\r\\n            </mat-error>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n        <div class=\\\"block full-width\\\">\\r\\n          <mat-form-field fxFlex=\\\"100\\\" class=\\\"full-width\\\">\\r\\n            <mat-label>Company Name Amharic Option Three</mat-label>\\r\\n            <input required matInput=\\\"\\\" formControlName=\\\"CompanyNameThreeAmharic\\\">\\r\\n            <mat-error *ngIf=\\\"companyNameThreeAmharic.hasError('required')\\\">\\r\\n              {{'common.validation.Required' | translate}}\\r\\n            </mat-error>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"block full-width\\\" *ngIf=\\\"canViewTasks\\\">\\r\\n\\r\\n          <button mat-raised-button (click)=\\\"onApproveNameOptionThree()\\\" color=\\\"primary\\\" type=\\\"button\\\">\\r\\n            {{'common.commands.Approve' | translate}}\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <mat-divider></mat-divider>\\r\\n    <div mat-dialog-actions style=\\\"margin: 20px; text-align: center\\\">\\r\\n      <button mat-raised-button type=\\\"submit\\\" color=\\\"primary\\\" style=\\\"margin-right: 10px\\\">\\r\\n        {{'common.commands.Save' | translate}}\\r\\n      </button>\\r\\n      <button mat-raised-button (click)=\\\"onBack()\\\" color=\\\"warn\\\" type=\\\"button\\\">\\r\\n        {{'common.commands.Cancel' | translate}}\\r\\n      </button>\\r\\n    </div>\\r\\n    <!--<pre>{{companyClearanceForm.value | json}}</pre>-->\\r\\n  </form>\\r\\n</div>\\r\\n\"","module.exports = \"/* div {\\r\\n  display: flex;\\r\\n} */\\n.page-content {\\n  margin-bottom: 30px;\\n  background-color: white; }\\nmat-card {\\n  max-width: 100%;\\n  margin: 10px auto;\\n  text-align: center; }\\nmat-checkbox {\\n  max-width: 500px;\\n  text-align: left;\\n  margin-top: -40px;\\n  font-size: small;\\n  vertical-align: bottom; }\\nmat-label {\\n  font-size: smaller; }\\nmat-form-field {\\n  max-width: 130px;\\n  margin-right: 10px;\\n  font-size: small; }\\nmat-divider {\\n  margin-bottom: 10px;\\n  border-top-color: #00bcd4; }\\nh4 {\\n  margin-bottom: 0px;\\n  font-size: medium;\\n  color: #00bcd4;\\n  margin-top: 10px; }\\n.row {\\n  text-align: left;\\n  margin-bottom: 15px; }\\n.customer-radio-group {\\n  display: inherit;\\n  flex-direction: row; }\\n.customer-radio-button {\\n  margin: 5px; }\\n.inputfile {\\n  width: 0.1px;\\n  height: 0.1px;\\n  opacity: 0;\\n  overflow: hidden;\\n  position: absolute;\\n  z-index: -1; }\\n.inputfile + label {\\n  font-size: 12px;\\n  color: steelblue;\\n  background-color: white;\\n  display: inline-block;\\n  cursor: pointer; }\\n.inputfile:focus + label,\\n.inputfile + label:hover {\\n  color: goldenrod; }\\n\"","import {AfterContentChecked, AfterViewInit, Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {DataSharingService} from '../../../Services/data-sharing.service';\r\nimport {ConfigurationService} from '@custor/services/configuration.service';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {AppConfiguration} from '../../../config/appconfig';\r\nimport {CompanyClearanceService} from './company-clearance.service';\r\nimport {FormService} from '@custor/validation/custom/form';\r\nimport {CompanyClearanceModel} from './CompanyClearance.Model';\r\nimport {ErrorMessage} from '@custor/services/errMessageService';\r\nimport {Subscription} from 'rxjs';\r\nimport {fadeInOut} from '@custor/services/animations';\r\nimport {InvestorService} from '../investor.service';\r\nimport {Permission} from '../../../model/security/permission.model';\r\nimport {AccountService} from '@custor/services/security/account.service';\r\n\r\n@Component({\r\n  selector: 'app-company-clearance-form',\r\n  templateUrl: './company-clearance-form.component.html',\r\n  styleUrls: ['./company-clearance-form.component.scss'],\r\n  animations: [fadeInOut]\r\n})\r\nexport class CompanyClearanceFormComponent implements OnInit, AfterViewInit, OnDestroy, AfterContentChecked {\r\n\r\n  loadingIndicator: boolean;\r\n  companyClearanceForm: FormGroup;\r\n  public editMode: boolean;\r\n  companyClearanceSub: Subscription;\r\n  companyClearance: CompanyClearanceModel;\r\n  private InvestorId: any;\r\n\r\n  constructor(private activatedRoute: ActivatedRoute,\r\n              private router: Router,\r\n              private errMsg: ErrorMessage,\r\n              public accountService: AccountService,\r\n              private formService: FormService,\r\n              public dataSharing: DataSharingService,\r\n              public companyClearanceService: CompanyClearanceService,\r\n              private investorService: InvestorService,\r\n              private configService: ConfigurationService,\r\n              private toastr: ToastrService,\r\n              private appConfig: AppConfiguration,\r\n              private fb: FormBuilder) {\r\n\r\n  }\r\n\r\n  get companyNameOneEnglish() {\r\n    return this.companyClearanceForm.get('CompanyNameOneEnglish');\r\n  }\r\n\r\n  get companyNameOneAmharic() {\r\n    return this.companyClearanceForm.get('CompanyNameOneAmharic');\r\n  }\r\n\r\n  get companyNameTwoEnglish() {\r\n    return this.companyClearanceForm.get('CompanyNameTwoEnglish');\r\n  }\r\n\r\n  get companyNameTwoAmharic() {\r\n    return this.companyClearanceForm.get('CompanyNameTwoAmharic');\r\n  }\r\n\r\n  get companyNameThreeEnglish() {\r\n    return this.companyClearanceForm.get('CompanyNameThreeEnglish');\r\n  }\r\n\r\n  get companyNameThreeAmharic() {\r\n    return this.companyClearanceForm.get('CompanyNameThreeAmharic');\r\n  }\r\n\r\n  get canViewTasks() {\r\n    return this.accountService.userHasPermission(Permission.viewServiceList);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.InvestorId = this.activatedRoute.snapshot.params['InvestorId'];\r\n    this.initForm();\r\n\r\n    if (this.InvestorId < 1) {\r\n      this.editMode = false;\r\n      return;\r\n    }\r\n    if (this.InvestorId) {\r\n      this.getCompanyClearance(this.InvestorId);\r\n    }\r\n  }\r\n\r\n  initForm() {\r\n    this.companyClearanceForm = this.fb.group({\r\n      CompanyClearanceId: [''],\r\n      InvestorId: this.InvestorId,\r\n      CompanyNameOneEnglish: ['', Validators.required],\r\n      CompanyNameOneAmharic: ['', Validators.required],\r\n\r\n      CompanyNameTwoEnglish: ['', Validators.required],\r\n      CompanyNameTwoAmharic: ['', Validators.required],\r\n      CompanyNameThreeEnglish: ['', Validators.required],\r\n      CompanyNameThreeAmharic: ['', Validators.required],\r\n    });\r\n  }\r\n\r\n  getCompanyClearance(id) {\r\n    this.loadingIndicator = true;\r\n    this.companyClearanceSub = this.companyClearanceService\r\n      .getCompanyClearanceByInvestorId(id)\r\n      .subscribe(result => {\r\n          this.companyClearance = result;\r\n\r\n\r\n          if (result == null) {\r\n            this.editMode = false;\r\n          }\r\n          else {\r\n            this.editMode = true;\r\n            this.updateForm();\r\n          }\r\n        },\r\n        error => this.toastr.error(error));\r\n    this.loadingIndicator = false;\r\n  }\r\n\r\n  updateForm() {\r\n    this.companyClearanceForm.patchValue({\r\n      CompanyNameOneEnglish: this.companyClearance.CompanyNameOneEnglish || '',\r\n      CompanyNameOneAmharic: this.companyClearance.CompanyNameOneAmharic || '',\r\n      CompanyNameTwoEnglish: this.companyClearance.CompanyNameTwoEnglish || '',\r\n      CompanyNameTwoAmharic: this.companyClearance.CompanyNameTwoAmharic || '',\r\n      CompanyNameThreeEnglish: this.companyClearance.CompanyNameThreeEnglish || '',\r\n      CompanyNameThreeAmharic: this.companyClearance.CompanyNameThreeAmharic || ''\r\n    });\r\n  }\r\n\r\n  public onSubmit() {\r\n    if (!this.companyClearanceForm.valid) {\r\n      // console.log('error!!');\r\n      return;\r\n    }\r\n    this.loadingIndicator = true;\r\n    if (!this.editMode) {\r\n      return this.companyClearanceService.create(this.getEditedCompanyNames())\r\n        .subscribe((result: CompanyClearanceModel) => {\r\n            this.toastr.success(\"successfully saved\");\r\n\r\n          },\r\n          error => this.toastr.error(this.errMsg.getError(error)));\r\n    }\r\n    else {\r\n      // Todo  Id is correct\r\n      this.companyClearanceService.update(this.companyClearanceForm.value,\r\n        1)\r\n        .subscribe(result => {\r\n\r\n        }, error => this.toastr.error(this.errMsg.getError(error)));\r\n    }\r\n    this.editMode = true;\r\n  }\r\n\r\n  onBack() {\r\n    window.history.back();\r\n  }\r\n\r\n  onApproveNameOptionOne() {\r\n    if (this.companyNameOneAmharic.value == '' && this.companyNameOneEnglish.value == '') {\r\n      this.toastr.error('Name must be inserted');\r\n      return;\r\n    }\r\n\r\n    this.companyClearance = this.getEditedCompanyNames();\r\n    this.companyClearance.IsCompanyNameOneApproved = true;\r\n    this.companyClearance.IsCompanyNameTwoApproved = false;\r\n    this.companyClearance.IsCompanyNameThreeApproved = false;\r\n\r\n    this.loadingIndicator = true;\r\n    return this.companyClearanceService.saveFinalApprovedName(this.companyClearance)\r\n      .subscribe((comp: CompanyClearanceModel) => {\r\n          //this.saveCompleted();\r\n        },\r\n        error => this.toastr.error(this.errMsg.getError(error)));\r\n  }\r\n\r\n\r\n  onApproveNameOptionTwo() {\r\n    if (this.companyNameTwoAmharic.value == '' && this.companyNameTwoEnglish.value == '') {\r\n      this.toastr.error('Name must be inserted');\r\n      return;\r\n    }\r\n\r\n    this.companyClearance = this.getEditedCompanyNames();\r\n    this.companyClearance.IsCompanyNameOneApproved = false;\r\n    this.companyClearance.IsCompanyNameTwoApproved = true;\r\n    this.companyClearance.IsCompanyNameThreeApproved = false;\r\n\r\n    this.loadingIndicator = true;\r\n    return this.companyClearanceService.saveFinalApprovedName(this.companyClearance)\r\n      .subscribe((comp: CompanyClearanceModel) => {\r\n          //this.saveCompleted();\r\n        },\r\n        error => this.toastr.error(this.errMsg.getError(error)));\r\n  }\r\n\r\n  onApproveNameOptionThree() {\r\n\r\n    if (this.companyNameThreeAmharic.value == '' && this.companyNameThreeEnglish.value == '') {\r\n      this.toastr.error('Name must be inserted');\r\n      return;\r\n    }\r\n\r\n    this.companyClearance = this.getEditedCompanyNames();\r\n    this.companyClearance.IsCompanyNameThreeApproved = false;\r\n    this.companyClearance.IsCompanyNameThreeApproved = false;\r\n    this.companyClearance.IsCompanyNameThreeApproved = true;\r\n\r\n    this.loadingIndicator = true;\r\n    return this.companyClearanceService.saveFinalApprovedName(this.companyClearance)\r\n      .subscribe((comp: CompanyClearanceModel) => {\r\n          //this.saveCompleted();\r\n        },\r\n        error => this.toastr.error(this.errMsg.getError(error)));\r\n  }\r\n\r\n\r\n  ngAfterContentChecked(): void {\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n  }\r\n\r\n  private getEditedCompanyNames(): CompanyClearanceModel {\r\n    const formModel = this.companyClearanceForm.value;\r\n    return {\r\n      CompanyClearanceId: 0,\r\n      InvestorId: this.activatedRoute.snapshot.params['InvestorId'],\r\n      CompanyNameOneAmharic: formModel.CompanyNameOneAmharic,\r\n      CompanyNameOneEnglish: formModel.CompanyNameOneEnglish,\r\n      CompanyNameTwoEnglish: formModel.CompanyNameOneEnglish,\r\n      CompanyNameTwoAmharic: formModel.CompanyNameTwoAmharic,\r\n      CompanyNameThreeEnglish: formModel.CompanyNameThreeEnglish,\r\n      CompanyNameThreeAmharic: formModel.CompanyNameThreeAmharic,\r\n      IsCompanyNameOneApproved: false,\r\n      IsCompanyNameTwoApproved: false,\r\n      IsCompanyNameThreeApproved: false,\r\n      IsActive: true\r\n    };\r\n  }\r\n\r\n  // /*  onSubmit() {\r\n  //     const InvestorId = this.activatedRoute.snapshot.params['InvestorId'];\r\n  //     this.formService.markFormGroupTouched(this.companyClearanceForm);\r\n  //     if (this.companyClearanceForm.valid) {\r\n  //       if (!this.editMode) {\r\n  //         this.companyClearanceForm.removeControl('CompanyClearanceId');\r\n  //         this.companyClearanceService.create(this.companyClearanceForm.value)\r\n  //           .subscribe((result: CompanyClearanceModel) => {\r\n  //             this.toastr.success(\"successfully saved\");\r\n  //           }, error => this.toastr.error(this.errMsg.getError(error)));\r\n  //         this.companyClearanceForm.addControl('CompanyClearanceId', new FormControl(''));\r\n  //\r\n  //       } else {\r\n  //         // Todo  Id is correct\r\n  //         this.companyClearanceService.update(this.companyClearanceForm.value,\r\n  //           1)\r\n  //           .subscribe(result => {\r\n  //\r\n  //           }, error => this.toastr.error(this.errMsg.getError(error)));\r\n  //       }\r\n  //     } else {\r\n  //     }\r\n  //   }*/\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {BaseService} from \"../../../Services/Base.service\";\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {AppConfiguration} from \"../../../config/appconfig\";\r\nimport {ErrorMessage} from \"@custor/services/errMessageService\";\r\nimport {CompanyClearanceModel} from \"./CompanyClearance.Model\";\r\nimport {catchError} from 'rxjs/operators';\r\nimport {Observable} from 'rxjs/internal/Observable';\r\nimport {AssociateModel} from '../../../model/associate.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CompanyClearanceService extends BaseService<CompanyClearanceModel> {\r\n\r\n\r\n  constructor(\r\n    protected http: HttpClient,\r\n    protected appConfig: AppConfiguration,\r\n    protected errMsg: ErrorMessage) {\r\n    super(http, appConfig.urls.url('CompanyClearances'), errMsg);\r\n  }\r\n\r\n\r\n  getCompanyClearanceByInvestorId(id: number): Observable<CompanyClearanceModel> {\r\n    return this.httpClient.get<CompanyClearanceModel>(this.appConfig.urls.url('CompanyClearanceByInvestorId') + '/' + id).pipe(\r\n      catchError(this.errMsg.parseObservableResponseError));\r\n  }\r\n\r\n  saveFinalApprovedName(resource: CompanyClearanceModel): Observable<CompanyClearanceModel> {\r\n    return this.httpClient.put(this.appConfig.urls.url('SaveFinalApprovedName'), resource).pipe(\r\n      catchError(this.errMsg.parseObservableResponseError));\r\n  }\r\n\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\n\r\nimport {InvestorTabComponent} from './investor-tab.component';\r\n\r\nconst route: Routes = [\r\n  {\r\n    path: '',\r\n    component: InvestorTabComponent\r\n  }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(route)],\r\n  exports: [RouterModule]\r\n})\r\nexport class InvestorTabRoutingModule {\r\n}\r\n","module.exports = \"<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" fxLayoutGap=\\\"0\\\">\\r\\n  <div class=\\\"block\\\" fxFlex=\\\"\\\">\\r\\n    <app-page-header title=\\\"customerRegistration\\\" icon=\\\"people\\\"></app-page-header>\\r\\n\\r\\n  </div>\\r\\n  <div id=\\\"title1\\\" class=\\\"block\\\" fxFlex=\\\"50\\\">\\r\\n    <span style=\\\"text-transform: capitalize;\\\" class=\\\"page-title\\\">User Name: {{userName}}</span>\\r\\n\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n<mat-tab-group [selectedIndex]=\\\"registrationIndex\\\">\\r\\n\\r\\n  <!--<mat-tab label=\\\"Service Info\\\">-->\\r\\n  <!--<ng-template matTabContent>-->\\r\\n  <!--<mat-card class=\\\"margin-2\\\">-->\\r\\n\\r\\n  <!--<mat-card-content>-->\\r\\n  <!--<mat-checkbox (change)=\\\"isExisting()\\\" color=\\\"primary\\\">are You existing customer?</mat-checkbox>-->\\r\\n  <!--</mat-card-content>-->\\r\\n\\r\\n  <!--</mat-card>-->\\r\\n  <!--</ng-template>-->\\r\\n  <!--</mat-tab>-->\\r\\n  <mat-tab label=\\\"Service Info\\\">\\r\\n\\r\\n    <ng-template matTabContent>\\r\\n      <!--<mat-card class=\\\"margin-2\\\">-->\\r\\n\\r\\n      <!--<mat-card-content>-->\\r\\n      <!--<mat-checkbox (change)=\\\"isExisting()\\\" color=\\\"primary\\\">are You existing customer?</mat-checkbox>-->\\r\\n      <!--</mat-card-content>-->\\r\\n\\r\\n      <!--</mat-card>-->\\r\\n\\r\\n      <app-service-info></app-service-info>\\r\\n    </ng-template>\\r\\n  </mat-tab>\\r\\n\\r\\n  <mat-tab label=\\\"Investor\\\">\\r\\n    <ng-template matTabContent>\\r\\n      <app-edit-investor></app-edit-investor>\\r\\n    </ng-template>\\r\\n  </mat-tab>\\r\\n  <mat-tab label=\\\"Manager\\\" [disabled]=\\\"investor.InvestorId==0\\\">\\r\\n    <ng-template matTabContent>\\r\\n      <app-associate-form></app-associate-form>\\r\\n    </ng-template>\\r\\n  </mat-tab>\\r\\n  <mat-tab label=\\\"Company Clearance\\\" [disabled]=\\\"investor.InvestorId==0\\\"\\r\\n           *ngIf=\\\"!isNew\\\">\\r\\n    <ng-template matTabContent>\\r\\n      <app-company-clearance-form></app-company-clearance-form>\\r\\n    </ng-template>\\r\\n  </mat-tab>\\r\\n  <mat-tab label=\\\"Document\\\" [disabled]=\\\"investor.InvestorId==0\\\" *ngIf=\\\"isNew\\\">\\r\\n    <ng-template matTabContent>\\r\\n      <mat-card *ngIf=\\\"!isInvestor\\\" class=\\\"margin-2 simple-card\\\">\\r\\n        <mat-card-header>\\r\\n          <mat-card-subtitle class=\\\"sub-title\\\"></mat-card-subtitle>\\r\\n          <button class=\\\"margin-10 certificate-title\\\" mat-raised-button=\\\"\\\"\\r\\n                  (click)=\\\"addMessage()\\\" color=\\\"primary\\\">\\r\\n            Add Message\\r\\n          </button>\\r\\n        </mat-card-header>\\r\\n      </mat-card>\\r\\n      <app-service-prerequisite></app-service-prerequisite>\\r\\n    </ng-template>\\r\\n  </mat-tab>\\r\\n\\r\\n  <mat-tab *ngIf=\\\"!isInvestor\\\" [disabled]=\\\"investor.InvestorId==0\\\"\\r\\n           label=\\\"Payment\\\">\\r\\n    <ng-template matTabContent>\\r\\n      <app-payment></app-payment>\\r\\n    </ng-template>\\r\\n  </mat-tab>\\r\\n  <mat-tab *ngIf=\\\"!isInvestor\\\" [disabled]=\\\"investor.InvestorId==0\\\"\\r\\n           label=\\\"Certificate\\\">\\r\\n    <ng-template matTabContent>\\r\\n      <app-registration-certificate></app-registration-certificate>\\r\\n\\r\\n    </ng-template>\\r\\n  </mat-tab>\\r\\n  <mat-tab *ngIf=\\\"isInvestor\\\" [disabled]=\\\"investor.InvestorId==0\\\"\\r\\n           label=\\\"Confirmation\\\">\\r\\n    <ng-template matTabContent>\\r\\n      <app-service-confirmation></app-service-confirmation>\\r\\n    </ng-template>\\r\\n  </mat-tab>\\r\\n\\r\\n</mat-tab-group>\\r\\n\\r\\n\"","module.exports = \".mat-horizontal-stepper-header-container {\\n  background-color: whitesmoke !important; }\\n\\n.alert-success {\\n  background-color: #dff0d8;\\n  border-color: #d6e9c6;\\n  color: #3c763d; }\\n\\n.border {\\n  border: 1px solid #ccc;\\n  border-top-left-radius: 6px;\\n  border-top-right-radius: 6px; }\\n\\n.appGuid > ol, li, .alert-info {\\n  font-family: \\\"Helvetica Neue\\\", Helvetica, Arial, sans-serif, \\\"Noto Sans Ethiopic\\\";\\n  font-size: 13px;\\n  line-height: 1.428571429;\\n  color: #333;\\n  padding: 10px;\\n  text-align: justify !important; }\\n\\n.service > ol > li, span {\\n  font-family: \\\"Helvetica Neue\\\", Helvetica, Arial, sans-serif, \\\"Noto Sans Ethiopic\\\";\\n  font-size: 13px;\\n  line-height: 1.428571429;\\n  color: #333;\\n  padding: 10px;\\n  text-align: justify !important; }\\n\\n.footerButton {\\n  border-bottom-left-radius: 6px;\\n  border: 1px solid #ccc;\\n  border-top: none;\\n  border-bottom-right-radius: 6px;\\n  background-color: #fafafa; }\\n\\n.agree {\\n  color: white;\\n  font-weight: bold; }\\n\\n.alert-info {\\n  background-color: #d9edf7;\\n  border-color: #bce8f1;\\n  color: #31708f;\\n  margin: 20px; }\\n\\n.header-description {\\n  font-family: \\\"Helvetica Neue\\\", Helvetica, Arial, sans-serif, \\\"Noto Sans Ethiopic\\\";\\n  font-size: 13px;\\n  line-height: 32px;\\n  color: #333;\\n  padding: 10px;\\n  text-align: justify !important; }\\n\\n.hdr-brk {\\n  padding: 5px 0;\\n  background: #fff;\\n  border-bottom: 1px solid #ccc;\\n  line-height: 1; }\\n\\n.hdr-brk, .hm-bg-cnt .hm-bg-slick .lbl {\\n  font-size: 16px; }\\n\\n.bld {\\n  font-weight: 700; }\\n\\n.hdr-brk {\\n  padding: 5px 0;\\n  background: #fff;\\n  border-bottom: 1px solid #ccc;\\n  line-height: 1; }\\n\"","import {AfterContentChecked, Component, OnInit} from '@angular/core';\r\nimport {FormGroup} from '@angular/forms';\r\nimport {DataSharingService} from '../../../Services/data-sharing.service';\r\nimport {Subscription} from 'rxjs';\r\nimport {AccountService} from '@custor/services/security/account.service';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {NotificationComponent} from '../../project-profile/notification/notification.component';\r\nimport {MatDialog, MatDialogConfig} from '@angular/material';\r\nimport {Investor} from '../../../model/investor';\r\nimport {InvestorService} from '../investor.service';\r\n\r\n@Component({\r\n  selector: 'app-investor-tab',\r\n  templateUrl: './investor-tab.component.html',\r\n  styleUrls: ['./investor-tab.component.scss']\r\n})\r\nexport class InvestorTabComponent implements OnInit, AfterContentChecked {\r\n  public isLinear = false;\r\n  firstFormGroup: FormGroup;\r\n  secondFormGroup: FormGroup;\r\n  isEditable = false;\r\n  public selectedIndex = 0;\r\n  public title: string;\r\n  public projectName: string;\r\n  public investorName: string;\r\n  public isInvestor: boolean;\r\n  public userName: string;\r\n  public registrationIndex: any;\r\n  public isExistingCustomer: boolean;\r\n  public InvestorId: any;\r\n\r\n  public investor: Investor;\r\n  public isNew = false;\r\n  private isNewListener: number;\r\n  private isNewFirst: number;\r\n  private isNewListener2: number;\r\n  private ServiceApplicationId: any;\r\n  private subscription: Subscription;\r\n\r\n  constructor(private accountService: AccountService,\r\n              public router: Router,\r\n              private investorService: InvestorService,\r\n              public dialog: MatDialog,\r\n              public route: ActivatedRoute,\r\n              public dataSharing: DataSharingService) {\r\n    this.investor = new Investor();\r\n  }\r\n\r\n  ngOnInit() {\r\n    console.log(this.investor)\r\n\r\n    this.subscription = this.dataSharing.steeperIndex\r\n      .subscribe(index => {\r\n        this.registrationIndex = index;\r\n      });\r\n    this.getUserType();\r\n\r\n    this.title = localStorage.getItem('title');\r\n    this.projectName = localStorage.getItem('projectName');\r\n    this.investorName = localStorage.getItem('investorName');\r\n    this.ServiceApplicationId = this.route.snapshot.params['ServiceApplicationId'];\r\n    this.InvestorId = this.route.snapshot.params['InvestorId'] || this.route.snapshot.params['investorId'];\r\n\r\n    if (this.InvestorId != 0) {\r\n      this.getInvestor();\r\n    }\r\n    this.userName = this.accountService.currentUser.FullName;\r\n    // this.isNewFirst = this.route.snapshot.params['IsExistingCustomer'];\r\n    this.isNewListener = this.route.snapshot.params['IsExistingCustomer'];\r\n\r\n  }\r\n\r\n  getUserType() {\r\n    this.isInvestor = this.accountService.getUserType();\r\n  }\r\n\r\n  addMessage() {\r\n    const dialogConfig = new MatDialogConfig();\r\n\r\n    dialogConfig.data = {\r\n      ServiceApplicationId: this.ServiceApplicationId,\r\n    };\r\n    this.dialog.open(NotificationComponent, dialogConfig);\r\n\r\n\r\n  }\r\n\r\n  getInvestor() {\r\n    this.InvestorId = this.route.snapshot.params['InvestorId'] || this.route.snapshot.params['investorId'];\r\n\r\n    this.investorService.getInvestor(this.InvestorId)\r\n      .subscribe((result: Investor) => {\r\n        this.investor = result;\r\n\r\n        this.isNew = result.IsExistingCustomer;\r\n\r\n        this.isNewListener = (this.isNew == true) ? 1 : 0\r\n\r\n        const ServiceApplicationId1 = this.route.snapshot.params['ServiceApplicationId'];\r\n        const InvestorId1 = this.route.snapshot.params['InvestorId'] || this.route.snapshot.params['investorId'];\r\n        this.router.navigate(['investor-tab/1235/' + ServiceApplicationId1 + '/' + InvestorId1 + '/' + this.isNewListener]);\r\n\r\n      });\r\n  }\r\n\r\n  ngAfterContentChecked(): void {\r\n\r\n    this.isNewFirst = this.route.snapshot.params['IsExistingCustomer'];\r\n\r\n    if (this.isNewListener != this.isNewFirst) {\r\n      // this.isNewFirst = this.isNewListener;\r\n      this.isNewListener = this.isNewFirst;\r\n      this.getInvestor();\r\n\r\n    }\r\n  }\r\n\r\n\r\n}\r\n\r\n","import {CommonModule} from '@angular/common';\r\nimport {SharedModule} from '@custor/modules/shared.module';\r\nimport {NgModule} from '@angular/core';\r\nimport {InvestorTabComponent} from './investor-tab.component';\r\nimport {InvestorTabRoutingModule} from './investor-tab-routing.module';\r\nimport {InvestorModule} from '../investor.module';\r\nimport {AssociateModule} from '../associate/associate.module';\r\nimport {ServiceInfoModule} from \"../../project-profile/service-info/serviceInfo.module\";\r\nimport {OfficerModule} from \"../../officer-Task/officer.module\";\r\nimport {ServiceConfirmationModule} from \"../../project-profile/service-confirmation/ServiceConfirmation.module\";\r\nimport {CompanyClearanceFormComponent} from \"../company-clearance-form/company-clearance-form.component\";\r\nimport {RegistrationCertificateComponent} from \"../../registration/registration-certificate/registration-certificate.component\";\r\n\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    InvestorTabRoutingModule,\r\n    InvestorModule,\r\n    AssociateModule,\r\n    OfficerModule,\r\n    ServiceConfirmationModule,\r\n    ServiceInfoModule,\r\n    // RegistrationModule\r\n  //\r\n\r\n\r\n  ],\r\n  declarations: [\r\n    InvestorTabComponent,\r\n    CompanyClearanceFormComponent,\r\n    RegistrationCertificateComponent\r\n  ],\r\n  exports: [InvestorTabComponent]\r\n})\r\nexport class InvestorTabModule {\r\n}\r\n"],"sourceRoot":""}