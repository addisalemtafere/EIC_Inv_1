{"version":3,"sources":["webpack:///./src/app/Services/project-renewal.service.ts","webpack:///./src/app/components/project-profile/project-renewal-tab/project-renewal-tab.component.html","webpack:///./src/app/components/project-profile/project-renewal-tab/project-renewal-tab.component.scss","webpack:///./src/app/components/project-profile/project-renewal-tab/project-renewal-tab.component.ts","webpack:///./src/app/components/project-profile/project-renewal-tab/project-renewal/project-renewal.component.html","webpack:///./src/app/components/project-profile/project-renewal-tab/project-renewal/project-renewal.component.scss","webpack:///./src/app/components/project-profile/project-renewal-tab/project-renewal/project-renewal.component.ts","webpack:///./src/app/components/project-profile/project-renewal-tab/projectRenewal-routing.ts","webpack:///./src/app/components/project-profile/project-renewal-tab/projectRenewal.module.ts"],"names":[],"mappings":"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","file":"app-components-project-profile-project-renewal-tab-projectRenewal-module.js","sourcesContent":["import {Injectable} from '@angular/core';\r\nimport {BaseService} from './Base.service';\r\nimport {ProjectRenewalModel} from '../model/ProjectRenewal.model';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {AppConfiguration} from '../config/appconfig';\r\nimport {ErrorMessage} from '@custor/services/errMessageService';\r\nimport {Observable} from 'rxjs/internal/Observable';\r\nimport {ServiceApplicationModel} from '../model/ServiceApplication.model';\r\nimport {ProjectModel} from '../model/project.model';\r\nimport {catchError} from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProjectRenewalService extends BaseService<ProjectRenewalModel> {\r\n  constructor(\r\n    protected http: HttpClient,\r\n    protected appConfig: AppConfiguration,\r\n    protected  errMsg: ErrorMessage) {\r\n    super(http, appConfig.urls.url('projectRenewals'), errMsg);\r\n  }\r\n\r\n  getRenewalByServiceApplicationId(id: number): Observable<ServiceApplicationModel> {\r\n    return this.httpClient.get<ServiceApplicationModel>(this.appConfig.urls.url('ServiceApplicationWithRenewal') + '/' + id).pipe(\r\n      catchError(this.errMsg.parseObservableResponseError));\r\n  }\r\n}\r\n","module.exports = \"<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" fxLayoutGap=\\\"0\\\">\\r\\n  <div class=\\\"block\\\" fxFlex=\\\"\\\">\\r\\n    <app-page-header title=\\\"projectrenewal\\\" icon=\\\"\\\"></app-page-header>\\r\\n\\r\\n  </div>\\r\\n  <div id=\\\"title1\\\" class=\\\"block\\\" fxFlex=\\\"50\\\">\\r\\n    <span class=\\\"page-title\\\">{{title}}</span>\\r\\n    <span class=\\\"slideBorder\\\">/</span>\\r\\n    <span class=\\\"page-title\\\">{{investorName}}</span>\\r\\n    <span class=\\\"slideBorder\\\">/</span>\\r\\n    <span class=\\\"page-title\\\">{{projectName}}</span>\\r\\n\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n<mat-tab-group [selectedIndex]=\\\"renewalIndex\\\">\\r\\n  <!--<mat-tab label=\\\"Service List\\\" *ngIf=\\\"isInvestor\\\">-->\\r\\n  <!--<ng-template matTabContent >-->\\r\\n  <!--<app-project-list></app-project-list>-->\\r\\n  <!--</ng-template>-->\\r\\n  <!--</mat-tab>-->\\r\\n  <mat-tab label=\\\"Service Info\\\">\\r\\n    <ng-template matTabContent>\\r\\n      <app-service-info></app-service-info>\\r\\n    </ng-template>\\r\\n  </mat-tab>\\r\\n\\r\\n  <mat-tab *ngIf=\\\"!isInvestor\\\" label=\\\"After Care Recommendation\\\">\\r\\n    <ng-template matTabContent>\\r\\n      <app-aftercare-recommendation></app-aftercare-recommendation>\\r\\n    </ng-template>\\r\\n  </mat-tab>\\r\\n  <mat-tab label=\\\"Project Renewal\\\">\\r\\n    <ng-template matTabContent>\\r\\n      <app-project-renewal></app-project-renewal>\\r\\n    </ng-template>\\r\\n  </mat-tab>\\r\\n  <mat-tab label=\\\"Document\\\">\\r\\n    <ng-template matTabContent>\\r\\n      <mat-card *ngIf=\\\"!isInvestor\\\" class=\\\"margin-2 simple-card\\\">\\r\\n        <mat-card-header>\\r\\n          <mat-card-subtitle class=\\\"sub-title\\\"></mat-card-subtitle>\\r\\n          <button class=\\\"margin-10 certificate-title\\\" mat-raised-button=\\\"\\\"\\r\\n                  (click)=\\\"addMessage()\\\" color=\\\"primary\\\">\\r\\n            Add Message\\r\\n          </button>\\r\\n        </mat-card-header>\\r\\n      </mat-card>\\r\\n      <app-service-prerequisite></app-service-prerequisite>\\r\\n    </ng-template>\\r\\n  </mat-tab>\\r\\n\\r\\n  <mat-tab *ngIf=\\\"!isInvestor\\\" label=\\\"Payment\\\">\\r\\n    <ng-template matTabContent>\\r\\n      <app-payment></app-payment>\\r\\n    </ng-template>\\r\\n  </mat-tab>\\r\\n  <mat-tab *ngIf=\\\"!isInvestor\\\" label=\\\"Certificate\\\">\\r\\n    <ng-template matTabContent>\\r\\n      <app-certificate></app-certificate>\\r\\n    </ng-template>\\r\\n  </mat-tab>\\r\\n  <mat-tab *ngIf=\\\"isInvestor\\\" label=\\\"Confirmation\\\">\\r\\n    <ng-template matTabContent>\\r\\n      <app-service-confirmation></app-service-confirmation>\\r\\n    </ng-template>\\r\\n  </mat-tab>\\r\\n  <!--Fire Make this Comment-->\\r\\n  <!--<mat-tab *ngIf=\\\"!isInvestor\\\" label=\\\"Letter\\\">-->\\r\\n  <!--<ng-template matTabContent>-->\\r\\n  <!--<app-letter></app-letter>-->\\r\\n  <!--</ng-template>-->\\r\\n  <!--</mat-tab>-->\\r\\n</mat-tab-group>\\r\\n\\r\\n\"","module.exports = \"\"","import {Component, OnInit} from '@angular/core';\r\nimport {AccountService} from '@custor/services/security/account.service';\r\nimport {DataSharingService} from '../../../Services/data-sharing.service';\r\nimport {Subscription} from 'rxjs';\r\nimport {NotificationComponent} from '../notification/notification.component';\r\nimport {MatDialog, MatDialogConfig} from '@angular/material';\r\nimport {ActivatedRoute} from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-project-renewal-tab',\r\n  templateUrl: './project-renewal-tab.component.html',\r\n  styleUrls: ['./project-renewal-tab.component.scss']\r\n})\r\nexport class ProjectRenewalTabComponent implements OnInit {\r\n  public isInvestor: boolean;\r\n  public title: string | null;\r\n  private subscription: Subscription;\r\n  public renewalIndex: any;\r\n  public projectName: string | null;\r\n  public investorName: string | null;\r\n  private ServiceApplicationId: any;\r\n  private userName: string;\r\n\r\n  constructor(public accountService: AccountService,\r\n              public dialog: MatDialog,\r\n              public route: ActivatedRoute,\r\n              private dataSharing: DataSharingService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getUserType();\r\n    this.subscription = this.dataSharing.renewalIndex\r\n      .subscribe(index => {\r\n        this.renewalIndex = index;\r\n        // // console.log(index)\r\n        // this.move(this.steeperIndex);\r\n      });\r\n\r\n\r\n    this.title = localStorage.getItem('title');\r\n    this.projectName = localStorage.getItem('projectName');\r\n    this.investorName = localStorage.getItem('investorName');\r\n    this.ServiceApplicationId = this.route.snapshot.params['ServiceApplicationId'];\r\n\r\n    this.userName = this.accountService.currentUser.FullName;\r\n  }\r\n\r\n  getUserType() {\r\n    this.isInvestor = this.accountService.getUserType();\r\n  }\r\n\r\n  addMessage() {\r\n    const dialogConfig = new MatDialogConfig();\r\n\r\n    dialogConfig.data = {\r\n      ServiceApplicationId: this.ServiceApplicationId,\r\n      title: 'Angular For Beginners'\r\n    };\r\n    // this.dialog.open(NotificationComponent);\r\n    this.dialog.open(NotificationComponent, dialogConfig);\r\n\r\n\r\n  }\r\n}\r\n\r\n\r\n","module.exports = \"<form style=\\\"padding: 2px\\\" (ngSubmit)=\\\"onSubmit()\\\" [formGroup]=\\\"projectRenewalForm\\\" novalidate>\\r\\n\\r\\n  <mat-card>\\r\\n    <mat-card-subtitle class=\\\"sub-title\\\">\\r\\n      Project Renewal\\r\\n      <mat-divider></mat-divider>\\r\\n    </mat-card-subtitle>\\r\\n    <mat-card-content>\\r\\n      <div fxLayout=\\\"row wrap\\\"\\r\\n           fxLayoutAlign=\\\"start center\\\"\\r\\n           class=\\\"content\\\"\\r\\n           fxLayout.lt-sm=\\\"column\\\"\\r\\n           fxLayoutGap=\\\"2em\\\">\\r\\n\\r\\n        <!--<div class=\\\"block\\\" fxFlex=\\\"\\\" *ngIf=\\\"!isInvestor\\\">-->\\r\\n        <!--<mat-form-field class=\\\"full-width\\\">-->\\r\\n        <!--<mat-label>Project Name</mat-label>-->\\r\\n        <!--<mat-select formControlName=\\\"ProjectId\\\">-->\\r\\n        <!--<mat-option *ngFor=\\\"let project of projectList\\\" [value]=\\\"project.ProjectId\\\">-->\\r\\n        <!--{{project.ProjectName}}-->\\r\\n        <!--</mat-option>-->\\r\\n        <!--</mat-select>-->\\r\\n        <!--</mat-form-field>-->\\r\\n        <!--</div>-->\\r\\n\\r\\n        <div class=\\\"blocks\\\" fxFlex>\\r\\n          <mat-form-field>\\r\\n            <input placeholder=\\\"Renewal Date * :\\\"\\r\\n                   formControlName=\\\"RenewalDate\\\"\\r\\n                   matInput\\r\\n                   [matDatepicker]=\\\"RenewalDate\\\">\\r\\n            <mat-datepicker-toggle matSuffix [for]=\\\"RenewalDate\\\"></mat-datepicker-toggle>\\r\\n            <mat-datepicker #RenewalDate>\\r\\n            </mat-datepicker>\\r\\n            <!--<mat-error align=\\\"start\\\" *ngIf=\\\"formErrors.StartDate\\\">{{ formErrors.StartDate }}</mat-error>-->\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n        <!--<div class=\\\"block\\\" fxFlex>-->\\r\\n        <!--<mat-form-field>-->\\r\\n        <!--<input placeholder=\\\"Expected Start Date * :\\\"-->\\r\\n        <!--matInput-->\\r\\n        <!--formControlName=\\\"ExpectedStartDate\\\"-->\\r\\n        <!--[matDatepicker]=\\\"ExpectedStartDate\\\">-->\\r\\n        <!--<mat-datepicker-toggle matSuffix [for]=\\\"ExpectedStartDate\\\">-->\\r\\n        <!--</mat-datepicker-toggle>-->\\r\\n        <!--<mat-datepicker #ExpectedStartDate></mat-datepicker>-->\\r\\n        <!--&lt;!&ndash;<mat-error align=\\\"start\\\" *ngIf=\\\"formErrors.terminationDate\\\">{{ formErrors.terminationDate }}</mat-error>&ndash;&gt;-->\\r\\n        <!--</mat-form-field>-->\\r\\n        <!--</div>-->\\r\\n        <!--<div class=\\\"blocks\\\" fxFlex>-->\\r\\n        <!--&lt;!&ndash;<mat-label>Start Date :</mat-label>&ndash;&gt;-->\\r\\n        <!--<mat-form-field>-->\\r\\n        <!--<input formControlName=\\\"ApprovedDate\\\"-->\\r\\n        <!--matInput-->\\r\\n        <!--placeholder=\\\"Approved Date * :\\\"-->\\r\\n        <!--[matDatepicker]=\\\"ApprovedDate\\\">-->\\r\\n        <!--<mat-datepicker-toggle matSuffix [for]=\\\"ApprovedDate\\\">-->\\r\\n        <!--</mat-datepicker-toggle>-->\\r\\n        <!--<mat-datepicker #ApprovedDate></mat-datepicker>-->\\r\\n        <!--&lt;!&ndash;<mat-error align=\\\"start\\\" *ngIf=\\\"formErrors.operationDate\\\">{{ formErrors.operationDate }}</mat-error>&ndash;&gt;-->\\r\\n        <!--</mat-form-field>-->\\r\\n        <!--</div>-->\\r\\n        <div class=\\\"blocks\\\" fxFlex>\\r\\n          <mat-form-field>\\r\\n            <input placeholder=\\\"Renewed From * :\\\"\\r\\n                   formControlName=\\\"RenewedFrom\\\"\\r\\n                   matInput\\r\\n                   RenewedFrom\\r\\n                   [matDatepicker]=\\\"RenewedFrom\\\">\\r\\n            <mat-datepicker-toggle matSuffix [for]=\\\"RenewedFrom\\\"></mat-datepicker-toggle>\\r\\n            <mat-datepicker #RenewedFrom></mat-datepicker>\\r\\n            <!--<mat-error align=\\\"start\\\" *ngIf=\\\"formErrors.StartDate\\\">{{ formErrors.StartDate }}</mat-error>-->\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n        <div class=\\\"block\\\" fxFlex>\\r\\n          <mat-form-field>\\r\\n            <input placeholder=\\\"Renewed To * :\\\"\\r\\n                   matInput\\r\\n                   formControlName=\\\"RenewedTo\\\"\\r\\n                   [matDatepicker]=\\\"RenewedTo\\\">\\r\\n            <mat-datepicker-toggle matSuffix [for]=\\\"RenewedTo\\\"></mat-datepicker-toggle>\\r\\n            <mat-datepicker #RenewedTo></mat-datepicker>\\r\\n            <!--<mat-error align=\\\"start\\\" *ngIf=\\\"formErrors.terminationDate\\\">{{ formErrors.terminationDate }}</mat-error>-->\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"start center\\\" class=\\\"content\\\"\\r\\n           fxLayout.lt-sm=\\\"column\\\" fxLayoutGap=\\\"2em\\\">\\r\\n\\r\\n        <!--<div class=\\\"blocks\\\" fxFlex>-->\\r\\n        <!--<mat-form-field>-->\\r\\n        <!--<input placeholder=\\\"Renewed From * :\\\"-->\\r\\n        <!--formControlName=\\\"RenewedFrom\\\"-->\\r\\n        <!--matInput-->\\r\\n        <!--RenewedFrom-->\\r\\n        <!--[matDatepicker]=\\\"RenewedFrom\\\">-->\\r\\n        <!--<mat-datepicker-toggle matSuffix [for]=\\\"RenewedFrom\\\"></mat-datepicker-toggle>-->\\r\\n        <!--<mat-datepicker #RenewedFrom></mat-datepicker>-->\\r\\n        <!--&lt;!&ndash;<mat-error align=\\\"start\\\" *ngIf=\\\"formErrors.StartDate\\\">{{ formErrors.StartDate }}</mat-error>&ndash;&gt;-->\\r\\n        <!--</mat-form-field>-->\\r\\n        <!--</div>-->\\r\\n\\r\\n        <div class=\\\"block\\\" fxFlex=\\\"50\\\">\\r\\n          <mat-form-field class=\\\"full-width\\\" floatPlaceholder=\\\"auto\\\">\\r\\n            <input matInput\\r\\n                   placeholder=\\\"Remark\\\"\\r\\n                   type=\\\"text\\\">\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\">\\r\\n        <div mat-dialog-actions fxLayoutGap=\\\"3em\\\">\\r\\n          <button\\r\\n            [disabled]=\\\"!projectRenewalForm.valid\\\"\\r\\n            type=\\\"submit\\\"\\r\\n            mat-raised-button=\\\"\\\"\\r\\n            color=\\\"primary\\\">\\r\\n            <mat-icon class=\\\"mat-18\\\">done</mat-icon>\\r\\n            <!--<span class=\\\"agree\\\">Save</span>-->\\r\\n\\r\\n            {{editMode ? 'Update' : 'Save'}}\\r\\n          </button>\\r\\n          <button *ngIf=\\\"isInvestor\\\" mat-raised-button (click)=\\\"approve()\\\" color=\\\"primary\\\" type=\\\"button\\\">\\r\\n            <mat-icon class=\\\"mat-18\\\">done_all</mat-icon>\\r\\n            <span>Save</span>\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </mat-card-content>\\r\\n  </mat-card>\\r\\n  <!--<pre>-->\\r\\n  <!--{{projectRenewalForm.value | json}}-->\\r\\n  <!--</pre>-->\\r\\n</form>\\r\\n\\r\\n<div *ngIf=\\\"loading\\\" class=\\\"loadme-circleBounce\\\">\\r\\n  <div class=\\\"loadme-circleBounce1\\\"></div>\\r\\n  <div class=\\\"loadme-circleBounce2\\\"></div>\\r\\n</div>\\r\\n\"","module.exports = \"\"","import {AfterContentChecked, Component, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormControl, FormGroup} from '@angular/forms';\r\nimport {ProjectRenewalService} from '../../../../Services/project-renewal.service';\r\nimport {MatSnackBar} from '@angular/material';\r\nimport {DataSharingService} from '../../../../Services/data-sharing.service';\r\nimport {ProjectModel} from '../../../../model/project.model';\r\nimport {ProjectProfileService} from '../../../../Services/project-profile.service';\r\nimport {AccountService} from '@custor/services/security/account.service';\r\nimport {ActivatedRoute, Params} from '@angular/router';\r\nimport {ErrorMessage} from '@custor/services/errMessageService';\r\nimport {ToastrService} from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-project-renewal',\r\n  templateUrl: './project-renewal.component.html',\r\n  styleUrls: ['./project-renewal.component.scss']\r\n})\r\nexport class ProjectRenewalComponent implements OnInit {\r\n  projectRenewalForm: FormGroup;\r\n  loading = false;\r\n  public projectList: ProjectModel[];\r\n  public isInvestor: boolean;\r\n  public editMode = false;\r\n  private ServiceApplicationId: number;\r\n  private InvestorId: any;\r\n  private approval = false;\r\n  private ServiceId: any;\r\n  private ProjectId: any;\r\n\r\n  constructor(public fb: FormBuilder,\r\n              public snackbar: MatSnackBar,\r\n              private accountService: AccountService,\r\n              private projetServices: ProjectProfileService,\r\n              public dataSharing: DataSharingService,\r\n              public route: ActivatedRoute,\r\n              public errMsg: ErrorMessage,\r\n              public toastr: ToastrService,\r\n              public projectRenewalService: ProjectRenewalService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.ServiceId = this.route.snapshot.params['ServiceId'] || this.route.snapshot.params['serviceId'];\r\n    this.InvestorId = this.route.snapshot.params['InvestorId'] || this.route.snapshot.params['investorId'];\r\n    this.ProjectId = this.route.snapshot.params['ProjectId'] || this.route.snapshot.params['projectId'];\r\n    this.ServiceApplicationId = this.route.snapshot.params['ServiceApplicationId'] || this.route.snapshot.params['serviceApplicationId'];\r\n\r\n    this.initForm();\r\n    this.getAllProjects();\r\n    this.isInvestor = !this.accountService.getUserType();\r\n    this.route.params\r\n      .subscribe((params: Params) => {\r\n        // console.log(this.ServiceApplicationId);\r\n        if (this.ServiceApplicationId > 1) {\r\n          this.getServiceApplicationRenewal();\r\n          this.approval = true;\r\n        }\r\n      });\r\n  }\r\n\r\n  initForm() {\r\n    this.projectRenewalForm = this.fb.group({\r\n      RenewalDate: new FormControl(),\r\n      RenewedTo: new FormControl(),\r\n      RenewedFrom: new FormControl(),\r\n      ProjectId: this.ProjectId,\r\n      InvestorId: this.InvestorId,\r\n      ServiceId: this.ServiceId,\r\n      ServiceApplicationId: this.ServiceApplicationId\r\n    });\r\n  }\r\n\r\n  getAllProjects() {\r\n    this.projetServices\r\n      .getProjectOnlyByInvestorId(this.InvestorId)\r\n      .subscribe(result => {\r\n        this.projectList = result;\r\n      });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.projectRenewalService\r\n      .create(this.projectRenewalForm.value)\r\n      .subscribe(response => {\r\n        this.dataSharing.renewalIndex.next(2);\r\n      });\r\n  }\r\n\r\n\r\n  notification(message: string) {\r\n    this.toastr.success(` Succesfully ${message} Data.!`, 'Success');\r\n\r\n    this.loading = false;\r\n    this.snackbar.open(` Succesfully ${message} Data.!`, 'Close', {\r\n      duration: 3000,\r\n    });\r\n  }\r\n\r\n  approve() {\r\n    this.projectRenewalService\r\n      .create(this.projectRenewalForm.value)\r\n      .subscribe(result => {\r\n        this.toastr.success('Renewal  successfully approved', 'Success');\r\n      });\r\n  }\r\n\r\n  private getServiceApplicationRenewal() {\r\n    this.projectRenewalService\r\n      .getRenewalByServiceApplicationId(this.ServiceApplicationId)\r\n      .subscribe(result => {\r\n        this.editMode = true;\r\n        this.projectRenewalForm.patchValue(result.ProjectRenewal[0]);\r\n      }, error => this.errMsg.getError(error));\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {ProjectRenewalTabComponent} from './project-renewal-tab.component';\r\n\r\nconst route: Routes = [\r\n  {path: '', component: ProjectRenewalTabComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(route)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ProjectRenewalRouting {\r\n}","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {SharedModule} from '@custor/modules/shared.module';\r\nimport {ProjectRenewalComponent} from './project-renewal/project-renewal.component';\r\nimport {ProjectRenewalRouting} from './projectRenewal-routing';\r\nimport {OfficerModule} from '../../officer-Task/officer.module';\r\nimport {ProjectRenewalTabComponent} from './project-renewal-tab.component';\r\nimport {ServiceConfirmationModule} from '../service-confirmation/ServiceConfirmation.module';\r\nimport {ServiceInfoModule} from '../service-info/serviceInfo.module';\r\nimport {LetterModule} from '../letter/letter.module';\r\nimport {AftercareRecommModule} from '../aftercare-recomendation/AftercareRecommModule';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    ProjectRenewalRouting,\r\n    OfficerModule,\r\n    ServiceConfirmationModule,\r\n    ServiceInfoModule,\r\n    LetterModule,\r\n    AftercareRecommModule\r\n  ],\r\n  declarations: [\r\n    ProjectRenewalComponent,\r\n    ProjectRenewalTabComponent],\r\n  exports: [ProjectRenewalComponent]\r\n})\r\nexport class ProjectRenewalModule {\r\n}\r\n"],"sourceRoot":""}