{"version":3,"sources":["webpack:///./src/app/components/project-profile/project-input/project-utility-list/project-utility-list.component.html","webpack:///./src/app/components/project-profile/project-input/project-utility-list/project-utility-list.component.scss","webpack:///./src/app/components/project-profile/project-input/project-utility-list/project-utility-list.component.ts","webpack:///./src/app/components/project-profile/project-input/raw-material-form/raw-material-form.component.html","webpack:///./src/app/components/project-profile/project-input/raw-material-form/raw-material-form.component.scss","webpack:///./src/app/components/project-profile/project-input/raw-material-form/raw-material-form.component.ts","webpack:///./src/app/components/project-profile/project-input/utility-routing.module.ts","webpack:///./src/app/components/project-profile/project-input/utility.module.ts"],"names":[],"mappings":"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","file":"app-components-project-profile-project-input-utility-module~components-project-profile-project-modul~5dbdef15.js","sourcesContent":["module.exports = \"<table style=\\\"height: 320px;display: block;overflow: auto;\\\" class=\\\"scrollbar table full-width\\\">\\r\\n  <thead>\\r\\n  <th>No</th>\\r\\n  <th>Electric Power</th>\\r\\n  <th>Water</th>\\r\\n  <th>Other Utility</th>\\r\\n  <th>Land Industrial</th>\\r\\n  <th>Land Agricultural</th>\\r\\n  <th>Land Service</th>\\r\\n  <th>Remark</th>\\r\\n\\r\\n  </thead>\\r\\n  <tbody style=\\\"overflow: auto;\\\">\\r\\n  <tr class=\\\"planned\\\" >\\r\\n    <td></td>\\r\\n    <td>{{plannedUtilityList?.ElectricPower}}</td>\\r\\n    <td>{{plannedUtilityList?.Water}}</td>\\r\\n    <td>{{plannedUtilityList?.OtherUtility}}</td>\\r\\n    <td>{{plannedUtilityList?.LandIndustrial}}</td>\\r\\n    <td>{{plannedUtilityList?.LandAgricultural}}</td>\\r\\n    <td>{{plannedUtilityList?.LandService}}</td>\\r\\n    <td>{{plannedUtilityList?.Remark}}</td>\\r\\n  </tr>\\r\\n  <tr *ngFor=\\\"let utility of utilityList;let i=index;\\\">\\r\\n    <td>{{i+1}}</td>\\r\\n    <td>{{utility.ElectricPower}}</td>\\r\\n    <td>{{utility.Water}}</td>\\r\\n    <td>{{utility.OtherUtility}}</td>\\r\\n    <td>{{utility.LandIndustrial}}</td>\\r\\n    <td>{{utility.LandAgricultural}}</td>\\r\\n    <td>{{utility.LandService}}</td>\\r\\n    <td>{{utility.Remark}}</td>\\r\\n  </tr>\\r\\n  </tbody>\\r\\n</table>\\r\\n\"","module.exports = \".table td {\\n  padding: 4px 25px 4px 5px;\\n  font-size: 13px;\\n  border-top: 1px solid #FAFAFA; }\\n\\n.table th {\\n  padding: 4px 25px 4px 5px;\\n  font-size: 13px;\\n  border-top: 1px solid #FAFAFA; }\\n\\ntable tbody tr:nth-child(2) td {\\n  border: 1px solid #0d8055;\\n  background-color: #0d8055;\\n  color: white;\\n  font-weight: bolder; }\\n\"","import {Component, OnInit} from '@angular/core';\r\nimport {ProjectRequirementService} from '../../../../Services/project-requirement.service';\r\nimport {ProjectRequirementModel} from '../../../../model/ProjectRequirement.model';\r\nimport {ActivatedRoute} from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-project-utility-list',\r\n  templateUrl: './project-utility-list.component.html',\r\n  styleUrls: ['./project-utility-list.component.scss']\r\n})\r\nexport class ProjectUtilityListComponent implements OnInit {\r\n  public utilityList: ProjectRequirementModel[];\r\n  public plannedUtilityList: ProjectRequirementModel;\r\n  private ProjectId: any;\r\n\r\n  constructor(public utilityService: ProjectRequirementService,\r\n              private route: ActivatedRoute) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.ProjectId = this.route.snapshot.params['ProjectId'];\r\n\r\n    this.getUtility();\r\n    this.getPlannedUtility();\r\n  }\r\n\r\n  getUtility() {\r\n    this.utilityService.getAll()\r\n      .subscribe(result => {\r\n        this.utilityList = result;\r\n      });\r\n  }\r\n\r\n  getPlannedUtility() {\r\n    this.utilityService.RequirementByProject(this.ProjectId)\r\n      .subscribe(result => {\r\n        this.plannedUtilityList = result[0];\r\n      });\r\n  }\r\n}\r\n","module.exports = \"<!--<mat-card-subtitle class=\\\"sub-title\\\">-->\\r\\n<!--Project Raw Material-->\\r\\n<!--<mat-divider></mat-divider>-->\\r\\n<!--</mat-card-subtitle>-->\\r\\n<mat-card class=\\\"margin-2\\\">\\r\\n  <form [formGroup]=\\\"pRawMaterialForm\\\" novalidate>\\r\\n    <div style=\\\"margin-bottom: 40px;\\\" *ngIf=\\\"ServiceId=='1234'\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\"\\r\\n         fxLayoutGap=\\\"2em\\\">\\r\\n      <div class=\\\"block\\\" fxFlex=\\\"\\\" style=\\\"margin-left: 20px\\\">\\r\\n        <mat-form-field>\\r\\n          <mat-label>Quarter</mat-label>\\r\\n          <mat-select formControlName=\\\"Quarter\\\" required>\\r\\n            <mat-option *ngFor=\\\"let row of Quarter\\\" [value]=\\\"row.Id\\\">\\r\\n              <span>{{row.DescriptionEnglish}}</span>\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n\\r\\n      </div>\\r\\n      <div class=\\\"block\\\" fxFlex>\\r\\n        <mat-form-field>\\r\\n          <input placeholder=\\\"Registration Year* :\\\"\\r\\n                 matInput\\r\\n                 formControlName=\\\"RegistrationYear\\\"\\r\\n                 [matDatepicker]=\\\"RegistrationYear\\\">\\r\\n          <mat-datepicker-toggle matSuffix [for]=\\\"RegistrationYear\\\"></mat-datepicker-toggle>\\r\\n          <mat-datepicker #RegistrationYear></mat-datepicker>\\r\\n          <!--<mat-error align=\\\"start\\\" *ngIf=\\\"formErrors.RegistrationYear\\\" class=\\\"form__error\\\">-->\\r\\n            <!--{{ formErrors.RegistrationYear }}-->\\r\\n          <!--</mat-error>-->\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <!--<div class=\\\"block\\\" fxFlex=\\\"\\\">-->\\r\\n      <!---->\\r\\n      <!--<mat-form-field>-->\\r\\n      <!--<input #OSF type=\\\"number\\\" formControlName=\\\"CapitalRegistrationDatetime\\\" matInput-->\\r\\n      <!--placeholder=\\\"Capital Registration Datetime * :\\\">-->\\r\\n      <!---->\\r\\n      <!--</mat-form-field>-->\\r\\n      <!--</div>-->\\r\\n      <div class=\\\"block\\\" fxFlex=\\\"\\\">\\r\\n\\r\\n        <mat-form-field>\\r\\n          <mat-select [disabled]=\\\"true\\\" formControlName=\\\"ProjectStatus\\\" required>\\r\\n            <option value=\\\"0\\\">--Select--</option>\\r\\n            <label>Project Status</label>\\r\\n            <mat-option *ngFor=\\\"let status of projectStatus\\\" [value]=\\\"status.Id\\\">\\r\\n              <span>{{status.DescriptionEnglish}}</span>\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    </div>\\r\\n    <mat-card-subtitle class=\\\"sub-title\\\">\\r\\n      Detail\\r\\n      <mat-divider></mat-divider>\\r\\n    </mat-card-subtitle>\\r\\n\\r\\n\\r\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" fxLayoutGap=\\\"2em\\\">\\r\\n      <mat-card style=\\\"    border: none;box-shadow: none!important;\\\" class=\\\"padding-0\\\" fxFlex=\\\"90%\\\">\\r\\n        <mat-card-content>\\r\\n          <div fxLayout=\\\"row\\\">\\r\\n\\r\\n\\r\\n            <div fxFlex=\\\"\\\" class=\\\"block\\\">\\r\\n              <mat-form-field>\\r\\n                <mat-label>Raw Material Type * :</mat-label>\\r\\n                <input id=\\\"\\\" type=\\\"text\\\" matInput formControlName=\\\"RawMaterialType\\\">\\r\\n                <mat-error></mat-error>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"block\\\" fxFlex=\\\"30%\\\">\\r\\n\\r\\n              <mat-radio-group formControlName=\\\"IsForeign\\\" align=\\\"center\\\">\\r\\n                <mat-radio-button value=\\\"false\\\">Local</mat-radio-button> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\r\\n                <mat-radio-button value=\\\"true\\\">Foreign</mat-radio-button>\\r\\n              </mat-radio-group>\\r\\n\\r\\n\\r\\n            </div>\\r\\n\\r\\n\\r\\n            <div class=\\\"block\\\" fxFlex=\\\"\\\">\\r\\n              <mat-form-field class=\\\"full-width\\\">\\r\\n                      <textarea placeholder=\\\"Remark :\\\" formControlName=\\\"Remark\\\" matInput rows=\\\"2\\\">\\r\\n                </textarea>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n\\r\\n\\r\\n            <div fxFlex=\\\"15\\\" class=\\\"block\\\">\\r\\n              <a class=\\\"custom-button pointer\\\" color=\\\"primary\\\" (click)=\\\"onSubmitRawMaterial()\\\">\\r\\n                <mat-icon color=\\\"primary\\\" class=\\\"mat-18\\\">done</mat-icon>\\r\\n                <span>Add</span>\\r\\n              </a>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n        </mat-card-content>\\r\\n      </mat-card>\\r\\n\\r\\n    </div>\\r\\n  </form>\\r\\n</mat-card>\\r\\n\\r\\n\\r\\n<mat-card class=\\\"margin-2 padding-0\\\">\\r\\n  <!--<mat-card-header>-->\\r\\n  <!--<mat-card-subtitle class=\\\"sub-title\\\">-->\\r\\n  <!--List of Raw Material-->\\r\\n  <!--&lt;!&ndash;<mat-divider></mat-divider>&ndash;&gt;-->\\r\\n  <!--</mat-card-subtitle>-->\\r\\n  <!--</mat-card-header>-->\\r\\n  <mat-card-content *ngIf=\\\"projectInputData.length>0\\\">\\r\\n    <div class=\\\"spinner-container\\\" *ngIf=\\\"loading \\\">\\r\\n      <mat-progress-bar mode=\\\"query\\\"></mat-progress-bar>\\r\\n    </div>\\r\\n    <mat-table style=\\\"border:1px solid #f1f1f1;\\\"\\r\\n               class=\\\"full-width\\\" #table [dataSource]=\\\"dataSource\\\">\\r\\n      <ng-container style=\\\"width: 10px !important;\\\" matColumnDef=\\\"No\\\">\\r\\n        <mat-header-cell style=\\\"width: 10px !important;\\\" *matHeaderCellDef>#</mat-header-cell>\\r\\n        <mat-cell style=\\\"width: 10px !important;\\\" *matCellDef=\\\"let projectInputData;let i=index;\\\">\\r\\n          {{i+1}}\\r\\n        </mat-cell>\\r\\n      </ng-container>\\r\\n\\r\\n      <ng-container matColumnDef=\\\"RawMaterialType\\\">\\r\\n        <mat-header-cell *matHeaderCellDef>Raw Material Type</mat-header-cell>\\r\\n        <mat-cell *matCellDef=\\\"let projectInputData\\\"> {{projectInputData.RawMaterialType}}\\r\\n        </mat-cell>\\r\\n      </ng-container>\\r\\n\\r\\n      <ng-container matColumnDef=\\\"IsForeign\\\">\\r\\n        <mat-header-cell *matHeaderCellDef>IsForeign</mat-header-cell>\\r\\n        <mat-cell *matCellDef=\\\"let projectInputData\\\"> {{projectInputData.IsForeign}}\\r\\n        </mat-cell>\\r\\n      </ng-container>\\r\\n\\r\\n      <ng-container matColumnDef=\\\"Remark\\\">\\r\\n        <mat-header-cell *matHeaderCellDef> Remark</mat-header-cell>\\r\\n        <mat-cell *matCellDef=\\\"let projectInputData\\\"> {{projectInputData.Remark }}\\r\\n        </mat-cell>\\r\\n      </ng-container>\\r\\n\\r\\n      <ng-container matColumnDef=\\\"Action\\\">\\r\\n        <mat-header-cell *matHeaderCellDef>Action</mat-header-cell>\\r\\n        <mat-cell *matCellDef=\\\"let projectInputData;let i=index;\\\">\\r\\n          <div>\\r\\n            <a class=\\\"pointer\\\" mat-min-fab matTooltip=\\\"Click here to edit the Share\\\"\\r\\n               (click)=\\\"onEditInput(i,projectInputData.ProjectInputId)\\\">\\r\\n              <mat-icon color=\\\"primary\\\" class=\\\"mat-18\\\">edit</mat-icon>\\r\\n              Edit\\r\\n            </a>\\r\\n            <a class=\\\"pointer\\\" mat-min-fab color=\\\"warn\\\" matTooltip=\\\"Click here to delete the dhare\\\"\\r\\n               (click)=\\\"deleteInput(i,projectInputData.ProjectInputId)\\\">\\r\\n              <mat-icon color=\\\"warn\\\">delete</mat-icon>\\r\\n              Delete\\r\\n            </a>\\r\\n          </div>\\r\\n        </mat-cell>\\r\\n      </ng-container>\\r\\n      <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\">\\r\\n      </mat-header-row>\\r\\n      <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\">\\r\\n      </mat-row>\\r\\n    </mat-table>\\r\\n  </mat-card-content>\\r\\n\\r\\n</mat-card>\\r\\n\"","module.exports = \"mat-header-row {\\n  background-color: whitesmoke;\\n  border-top: 1px solid #f1f1f1;\\n  border-bottom: 1px solid #f1f1f1 !important; }\\n\\nmat-radio-button {\\n  margin-top: 20px !important; }\\n\\nmat-header-row {\\n  min-height: 30px; }\\n\"","import {AfterContentChecked, Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {ActivatedRoute, Params} from '@angular/router';\r\nimport {Subscription} from 'rxjs/Subscription';\r\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {FormService} from '@custor/validation/custom/form';\r\nimport {ProjectProfileService} from '../../../../Services/project-profile.service';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {MatSnackBar, MatTableDataSource} from '@angular/material';\r\nimport {ProjectInputService} from '../../../../Services/project-input.service';\r\nimport {ErrorMessage} from '@custor/services/errMessageService';\r\nimport {ProjectRequirementService} from '../../../../Services/project-requirement.service';\r\nimport {ProjectInputModel} from '../../../../model/ProjectInput.model';\r\nimport {DataSharingService} from '../../../../Services/data-sharing.service';\r\nimport {ProjectStatusModel, QuarterModel} from '../../../../model/lookupData';\r\nimport {ProjectStatus, Quarter} from '@custor/const/consts';\r\n\r\n@Component({\r\n  selector: 'app-raw-material-form',\r\n  templateUrl: './raw-material-form.component.html',\r\n  styleUrls: ['./raw-material-form.component.scss']\r\n})\r\nexport class RawMaterialFormComponent implements OnInit, AfterContentChecked {\r\n  //\r\n  pRawMaterialForm: FormGroup;\r\n  editModeInput = false;\r\n  rawInputId: number;\r\n  loading = false;\r\n  subscription: Subscription;\r\n  projectInputData: ProjectInputModel[] = [];\r\n  projectId: any;\r\n  public dataSource: any;\r\n  displayedColumns = ['No', 'RawMaterialType', 'Remark', 'Action'];\r\n  inputEditIndex: number;\r\n  public stepperIndex: number;\r\n  public projectStatus: ProjectStatusModel[] = [];\r\n  public Quarter: QuarterModel[] = [];\r\n  public ServiceId: string;\r\n  private InvestorId: any;\r\n  private workFlowId: any;\r\n  private ServiceApplicationId: any;\r\n\r\n  constructor(private formBuilder: FormBuilder,\r\n              private errMsg: ErrorMessage,\r\n              public route: ActivatedRoute,\r\n              public projectProfileService: ProjectProfileService,\r\n              private toastr: ToastrService,\r\n              private snackbar: MatSnackBar,\r\n              private formService: FormService,\r\n              private dataSharing: DataSharingService,\r\n              private dataSharingService: DataSharingService,\r\n              private pRequirementService: ProjectRequirementService,\r\n              private pInputService: ProjectInputService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initForm();\r\n    this.ServiceId = this.route.snapshot.params['ServiceId'];\r\n    this.InvestorId = this.route.snapshot.params['InvestorId'];\r\n    this.workFlowId = this.route.snapshot.params['workFlowId'];\r\n    this.ServiceApplicationId = this.route.snapshot.params['ServiceApplicationId'];\r\n    this.projectId = this.route.snapshot.params['ProjectId'];\r\n\r\n    if (this.ServiceId === '1234') {\r\n      this.getProjectStatus(this.route.snapshot.params['ProjectId']);\r\n    }\r\n    if (this.projectId > 1) {\r\n      this.getProjectRawMaterial();\r\n\r\n    }\r\n    this.initStaticData('en');\r\n    // this.route.params\r\n    //   .subscribe((params: Params) => {\r\n    //     this.projectId = +params['id'];\r\n    //\r\n    //   });\r\n  }\r\n\r\n\r\n  getProjectRawMaterial() {\r\n    this.pInputService.InputsByProject(this.projectId).subscribe(result => {\r\n      if (typeof (result) !== 'undefined') {\r\n        this.projectInputData = result;\r\n        this.dataSource = new MatTableDataSource<ProjectInputModel>(this.projectInputData);\r\n      }\r\n    }, error => this.errMsg.getError(error));\r\n  }\r\n\r\n  onSubmit() {\r\n    this.formService.markFormGroupTouched(this.pRawMaterialForm);\r\n\r\n\r\n  }\r\n\r\n  initForm() {\r\n    this.pRawMaterialForm = this.formBuilder.group({\r\n      ProjectInputId: new FormControl(''),\r\n      ProjectId: new FormControl(this.projectId),\r\n      RawMaterialType: new FormControl('', [Validators.required]),\r\n      IsForeign: new FormControl('', [Validators.required]),\r\n      Remark: new FormControl('', [Validators.minLength(2)]),\r\n      Quarter: [''],\r\n      RegistrationYear: [''],\r\n      ProjectStatus: [''],\r\n    });\r\n\r\n  }\r\n\r\n  onSubmitRawMaterial() {\r\n    if (!this.editModeInput) {\r\n      this.pInputService.create(this.getInputData())\r\n        .subscribe((result: ProjectInputModel) => {\r\n          this.notification('Saved');\r\n          // setTimeout(() => this.dataSharing.steeperIndex.next(3), 0);\r\n          setTimeout(() => this.dataSharing.currentIndex.next(4), 0);\r\n          this.projectInputData.push(result);\r\n          this.dataSource = new MatTableDataSource<ProjectInputModel>(this.projectInputData);\r\n          this.pRawMaterialForm.reset();\r\n          if (this.ServiceId === '1234') {\r\n            this.getProjectStatus(this.route.snapshot.params['ProjectId']);\r\n          }\r\n        }, error => this.toastr.error(this.errMsg.getError(error)));\r\n    } else {\r\n      this.pInputService.update(this.pRawMaterialForm.value, this.projectInputData[this.inputEditIndex].ProjectInputId)\r\n        .subscribe(result => {\r\n          this.toastr.success('Successfully Updated', 'Sucess');\r\n          this.projectInputData[this.inputEditIndex] = result;\r\n          this.dataSource = new MatTableDataSource<ProjectInputModel>(this.projectInputData);\r\n          this.pRawMaterialForm.reset();\r\n\r\n        }, error => this.toastr.error(this.errMsg.getError(error)));\r\n    }\r\n  }\r\n\r\n\r\n  notification(message: string) {\r\n    this.toastr.success(` Succesfully ${message} Data.!`, 'Success');\r\n  }\r\n\r\n\r\n  deleteInput(index: number, id: number) {\r\n    this.pInputService.delete(id)\r\n      .subscribe(() => {\r\n        this.notification('Deleted');\r\n        this.projectInputData.splice(index, 1);\r\n        this.dataSource = new MatTableDataSource<ProjectInputModel>(this.projectInputData);\r\n      });\r\n  }\r\n\r\n  onEditInput(index: number) {\r\n    this.editModeInput = true;\r\n    this.inputEditIndex = index;\r\n    this.pRawMaterialForm.patchValue(this.projectInputData[index]);\r\n    this.pRawMaterialForm.patchValue({\r\n      IsForeign: this.projectInputData[index].IsForeign.toString()\r\n    });\r\n  }\r\n\r\n\r\n  getInputData(): ProjectInputModel {\r\n    return {\r\n      ProjectId: this.projectId,\r\n      RawMaterialType: this.pRawMaterialForm.get('RawMaterialType').value,\r\n      IsForeign: this.pRawMaterialForm.get('IsForeign').value,\r\n      Remark: this.pRawMaterialForm.get('Remark').value,\r\n      Quarter: this.pRawMaterialForm.get('Quarter').value,\r\n      RegistrationYear: this.pRawMaterialForm.get('RegistrationYear').value,\r\n      ProjectStatus: this.pRawMaterialForm.get('ProjectStatus').value,\r\n    };\r\n  }\r\n\r\n  ngAfterContentChecked(): void {\r\n    // this.pRawMaterialForm.patchValue({\r\n    //   ProjectId: localStorage.getItem('ProjectId')\r\n    // });\r\n\r\n    // this.pRawMaterialForm.patchValue({\r\n    //   workFlowId: localStorage.getItem('workFlowId')\r\n    // });\r\n  }\r\n\r\n  next() {\r\n    this.dataSharing.steeperIndex.next(this.stepperIndex);\r\n    this.dataSharing.steeperIndex.next(4);\r\n\r\n  }\r\n\r\n  initStaticData(currentLang) {\r\n\r\n    let projectStatus1: ProjectStatusModel = new ProjectStatusModel();\r\n    ProjectStatus.forEach(pair => {\r\n      projectStatus1 = {\r\n        'Id': pair.Id.toString(),\r\n        'DescriptionEnglish': pair.DescriptionEnglish,\r\n        'Description': pair.Description\r\n      };\r\n      this.projectStatus.push(projectStatus1);\r\n    });\r\n\r\n    let Quarter1: QuarterModel = new QuarterModel();\r\n    Quarter.forEach(pair => {\r\n      Quarter1 = {\r\n        'Id': pair.Id.toString(),\r\n        'DescriptionEnglish': pair.DescriptionEnglish,\r\n        'Description': pair.Description\r\n      };\r\n      this.Quarter.push(Quarter1);\r\n    });\r\n\r\n  }\r\n\r\n\r\n  private getProjectStatus(projectId: any) {\r\n    this.projectProfileService.getProjectStatus(projectId)\r\n      .subscribe(result => {\r\n        this.pRawMaterialForm.patchValue({\r\n          ProjectStatus: result.toString()\r\n        });\r\n      });\r\n  }\r\n}\r\n\r\n","import {RouterModule, Routes} from '@angular/router';\r\nimport {ProjectUtilityListComponent} from './project-utility-list/project-utility-list.component';\r\nimport {NgModule} from '@angular/core';\r\n\r\nconst utilityRoute: Routes = [\r\n  {path: '', component: ProjectUtilityListComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(utilityRoute)],\r\n  exports: [RouterModule]\r\n})\r\nexport class UtilityRoutingModule {\r\n\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {SharedModule} from '@custor/modules/shared.module';\r\nimport {UtilityRoutingModule} from './utility-routing.module';\r\nimport {ProjectUtilityListComponent} from './project-utility-list/project-utility-list.component';\r\nimport {RawMaterialFormComponent} from './raw-material-form/raw-material-form.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    UtilityRoutingModule\r\n  ],\r\n  declarations: [ProjectUtilityListComponent, RawMaterialFormComponent],\r\n  exports: [ProjectUtilityListComponent, RawMaterialFormComponent]\r\n})\r\nexport class UtilityModule {\r\n\r\n}\r\n"],"sourceRoot":""}