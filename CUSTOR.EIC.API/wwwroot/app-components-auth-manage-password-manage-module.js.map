{"version":3,"sources":["webpack:///./src/app/components/auth/manage-password/manage-routing.module.ts","webpack:///./src/app/components/auth/manage-password/manage.component.html","webpack:///./src/app/components/auth/manage-password/manage.component.scss","webpack:///./src/app/components/auth/manage-password/manage.component.ts","webpack:///./src/app/components/auth/manage-password/manage.module.ts"],"names":[],"mappings":"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","file":"app-components-auth-manage-password-manage-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ManagePasswordComponent } from './manage.component';\r\n\r\nconst route: Routes = [\r\n  { path: '', component: ManagePasswordComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(route)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ManagePasswordRoutingModule {\r\n}","module.exports = \"<div class=\\\"page-content\\\" style=\\\" margin:auto;width:500px;padding-top: 20px\\\">\\r\\n  <div style=\\\"margin: 30px;\\\">\\r\\n    <mat-toolbar color=\\\"primary\\\">\\r\\n      <mat-toolbar-row>\\r\\n        <span style=\\\"margin-top:9px; margin-right: 5px\\\"><mat-icon>lock</mat-icon></span>\\r\\n        <span>{{dialogTitle}}</span>\\r\\n        <span class=\\\"toolbar-spacer\\\"></span>\\r\\n        <div class=\\\"header-actions\\\">\\r\\n          <!-- <button mat-icon-button><mat-icon>more_vertical</mat-icon></button> -->\\r\\n        </div>\\r\\n      </mat-toolbar-row>\\r\\n    </mat-toolbar>\\r\\n    <mat-card>\\r\\n      <mat-card-header>\\r\\n        <!-- <div mat-card-avatar class=\\\"example-header-image\\\"></div>\\r\\n        <mat-card-title>Title1</mat-card-title>\\r\\n        <mat-card-subtitle>Title 2</mat-card-subtitle> -->\\r\\n      </mat-card-header>\\r\\n\\r\\n      <mat-card-content>\\r\\n        <form #form=\\\"ngForm\\\" [formGroup]=\\\"userProfileForm\\\" novalidate (ngSubmit)=\\\"save()\\\" fxLayout=\\\"column\\\"\\r\\n              fxLayoutGap=\\\"1em\\\" autocomplete=\\\"off\\\">\\r\\n\\r\\n          <div fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"1em\\\">\\r\\n            <mat-form-field fxFlex>\\r\\n              <mat-label>{{'users.editor.Email' | translate}}</mat-label>\\r\\n              <input matInput formControlName=\\\"email\\\" required/>\\r\\n              <mat-error *ngIf=\\\"email.hasError('required')\\\">\\r\\n                {{'users.editor.EmailRequired' | translate}}\\r\\n              </mat-error>\\r\\n              <mat-error *ngIf=\\\"!email.hasError('required') && email.hasError('email')\\\">\\r\\n                {{'users.editor.InvalidEmail' | translate}}\\r\\n              </mat-error>             \\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"1em\\\">\\r\\n            <mat-form-field fxFlex>\\r\\n              <mat-label>{{'users.editor.UserName' | translate}}</mat-label>\\r\\n              <input matInput formControlName=\\\"userName\\\" autocomplete=\\\"off\\\" required/>\\r\\n              <mat-error *ngIf=\\\"userName.hasError('required')\\\">\\r\\n                {{'users.editor.UserNameRequired' | translate}}\\r\\n              </mat-error>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"1em\\\"> \\r\\n            <mat-form-field fxFlex *ngIf=\\\"showOldPassword\\\">\\r\\n              <mat-label>{{oldPasswordCaption}}</mat-label>\\r\\n              <input matInput type=\\\"password\\\" formControlName=\\\"oldPassword\\\" autocomplete=\\\"off\\\" />\\r\\n              <mat-error *ngIf=\\\"oldPassword.hasError('required')\\\">\\r\\n                Old Password is Required\\r\\n              </mat-error>\\r\\n            </mat-form-field>\\r\\n          </div> \\r\\n          <div formGroupName=\\\"password\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"1em\\\">\\r\\n\\r\\n            <div fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"1em\\\">\\r\\n              <mat-form-field>\\r\\n                <mat-label>{{'users.editor.NewPassword' | translate}}</mat-label>\\r\\n                <input matInput type=\\\"password\\\" formControlName=\\\"newPassword\\\" autocomplete=\\\"off\\\" required/>\\r\\n                <mat-error *ngIf=\\\"newPassword.hasError('required')\\\">\\r\\n                  {{'users.editor.NewPasswordRequired' | translate}}\\r\\n                </mat-error>\\r\\n                <mat-error *ngIf=\\\"!newPassword.hasError('required') && newPassword.hasError('pattern')\\\">\\r\\n                  {{'users.editor.NewPasswordRules' | translate}}\\r\\n                </mat-error>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n            <div fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"1em\\\">\\r\\n\\r\\n              <mat-form-field fxFlex>\\r\\n                <mat-label>{{'users.editor.ConfirmPassword' | translate}}</mat-label>\\r\\n                <input matInput type=\\\"password\\\" formControlName=\\\"confirmPassword\\\" required/>\\r\\n                <mat-error *ngIf=\\\"confirmPassword.hasError('required')\\\">\\r\\n                  {{'users.editor.ConfirmationPasswordRequired' | translate}}\\r\\n                </mat-error>\\r\\n                <mat-error *ngIf=\\\"!confirmPassword.hasError('required') && confirmPassword.hasError('notEqual')\\\">\\r\\n                  Test\\r\\n                  {{'users.editor.PasswordMismatch' | translate}}\\r\\n                </mat-error>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div>&nbsp;</div>\\r\\n        </form>\\r\\n      </mat-card-content>\\r\\n      <div style=\\\"text-align: center\\\">\\r\\n        <button mat-raised-button color=\\\"primary\\\" (click)=\\\"save()\\\">{{actionCaption}}\\r\\n        </button>\\r\\n      </div>\\r\\n    </mat-card>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"\"","import {Component, Input, OnDestroy, OnInit, ViewChild} from '@angular/core';\r\nimport {FormBuilder, FormGroup, NgForm, Validators} from '@angular/forms';\r\n\r\nimport {Subject} from 'rxjs/Subject';\r\nimport {Subscription} from 'rxjs/Subscription';\r\n\r\nimport {AppTranslationService} from '../../../../@custor/services/translation.service';\r\nimport {AccountService} from '../../../../@custor/services/security/account.service';\r\nimport {ToastrService} from 'ngx-toastr';\r\n\r\nimport {User} from '../../../model/security/user.model';\r\nimport {UserEdit} from '../../../model/security/user-edit.model';\r\nimport {Role} from '../../../model/security/role.model';\r\nimport {EqualValidator} from '../../../../@custor/validation/equal.validator';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-manage-password',\r\n  templateUrl: './manage.component.html',\r\n  styleUrls: ['./manage.component.scss']\r\n})\r\nexport class ManagePasswordComponent implements OnDestroy, OnInit {\r\n  @ViewChild('form')\r\n  private form: NgForm;\r\n  isNewUser = true;\r\n  showOldPassword = false;\r\n  isChangePassword = false;\r\n  private passwordWatcher: Subscription;\r\n  private onUserSaved = new Subject<User>();\r\n  @Input() dialogTitle: string;\r\n  @Input() oldPasswordCaption: string;\r\n  @Input() actionCaption: string;\r\n  @Input() user: User = new User();\r\n  @Input() roles: Role[] = [];\r\n  @Input() isEditMode = false;\r\n\r\n  userProfileForm: FormGroup;\r\n  userSaved$ = this.onUserSaved.asObservable();\r\n\r\n  constructor(private alertService: ToastrService,\r\n              private translationService: AppTranslationService,\r\n              private accountService: AccountService,\r\n              private formBuilder: FormBuilder, private router: Router, private activatedRoute: ActivatedRoute) {\r\n    this.buildForm();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.passwordWatcher.unsubscribe();\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    const id = this.activatedRoute.snapshot.params['id'];\r\n    // console.debug(id);\r\n    if (id === '1') { // 0=reset, 1=change\r\n      this.isChangePassword = true;\r\n      this.dialogTitle = 'Change Password';\r\n      this.actionCaption = 'Change Password';\r\n      this.oldPasswordCaption = 'Old Password';\r\n      this.showOldPassword = true;\r\n      // this.oldPassword.setValidators([Validators.required, Validators.pattern(/(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[\\W]).{8,}/)]);\r\n    } else {\r\n      this.isChangePassword = false;\r\n      this.dialogTitle = 'Reset Password';\r\n      this.actionCaption = 'Reset Password';\r\n      this.oldPasswordCaption = 'Old Password - Not Required';\r\n      this.showOldPassword = false;\r\n    }\r\n    if (!this.isChangePassword) {\r\n      const cOldPassword = this.userProfileForm.get('oldPassword');\r\n      cOldPassword.clearValidators();\r\n    }\r\n  }\r\n\r\n  formControlValueChanged() {\r\n    if (this.isChangePassword)\r\n      this.addOldPasswordValidator();\r\n  }\r\n\r\n  private buildForm() {\r\n    this.userProfileForm = this.formBuilder.group({\r\n      userName: ['', Validators.required],\r\n      email: ['', [Validators.required, Validators.email]],\r\n      oldPassword: ['', [Validators.required, Validators.pattern(/(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[\\W]).{8,}/)]],\r\n      password: this.formBuilder.group({\r\n        newPassword: ['', [Validators.required, Validators.pattern(/(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[\\W]).{8,}/)]],\r\n        confirmPassword: ['', [Validators.required, EqualValidator('newPassword')]],\r\n      })\r\n    });\r\n    this.passwordWatcher = this.newPassword.valueChanges.subscribe(() =>\r\n      this.confirmPassword.updateValueAndValidity());\r\n\r\n    // this.formControlValueChanged();\r\n  }\r\n\r\n  public beginEdit() {\r\n    this.isEditMode = true;\r\n    this.isChangePassword = false;\r\n  }\r\n\r\n  public save() {\r\n    if (!this.form.submitted) {\r\n      // Causes validation to update.\r\n      this.form.onSubmit(null);\r\n      return;\r\n    }\r\n\r\n    if (!this.userProfileForm.valid) {\r\n      this.alertService.error(this.translationService.getTranslation('form.ErrorMessage'),\r\n        this.translationService.getTranslation('form.ErrorCaption'));\r\n      return;\r\n    }\r\n\r\n    const editedUser = this.getEditedUser();\r\n    // console.log(editedUser);\r\n    this.accountService.resetAccount(editedUser).subscribe(\r\n      response => this.saveCompleted(),\r\n      error => this.saveFailed(error));\r\n  }\r\n\r\n\r\n  private getEditedUser(): UserEdit {\r\n    const formModel = this.userProfileForm.value;\r\n    const tempRole: string[] = ['DummyRole']; // not required here\r\n    return {\r\n      Id: '0', // not required\r\n      Tin: '', // not required\r\n      UserName: formModel.userName,\r\n      FullName: '', // not required\r\n      FriendlyName: '', // not required\r\n      Email: formModel.email,\r\n      PhoneNumber: '', // not required\r\n      Roles: tempRole, // not required\r\n      CurrentPassword: this.isChangePassword ? formModel.oldPassword : 'resetme',\r\n      NewPassword: formModel.password.newPassword,\r\n      ConfirmPassword: formModel.password.confirmPassword,\r\n      IsEnabled: true, // to be further checked\r\n      IsLockedOut: false, // to be further checked\r\n      SiteCode: ''// not required\r\n    };\r\n  }\r\n\r\n  private saveCompleted(user?: User) {\r\n    if (user) {\r\n      this.user = user;\r\n    }\r\n    this.alertService.success('Your account has been registered successfully.', 'Success');\r\n    this.onUserSaved.next(this.user);\r\n    this.router.navigate(['/confirm']);\r\n  }\r\n\r\n  private saveFailed(error: any) {\r\n    this.alertService.error('One or more errors occured whilst saving your changes:',\r\n      'Save Error');\r\n    this.alertService.error(null, error);\r\n  }\r\n\r\n  validateMinMax(min, max) {\r\n    return ['', [\r\n      Validators.required,\r\n      Validators.minLength(min),\r\n      Validators.maxLength(max),\r\n      Validators.pattern('[0-9]+')  //  digits only\r\n    ]];\r\n  }\r\n\r\n  private addOldPasswordValidator() {\r\n    this.oldPassword.setValidators([Validators.required, Validators.pattern(/(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[\\W]).{8,}/)]);\r\n  }\r\n\r\n  get userName() {\r\n    return this.userProfileForm.get('userName');\r\n  }\r\n\r\n  get email() {\r\n    return this.userProfileForm.get('email');\r\n  }\r\n\r\n  get password() {\r\n    return this.userProfileForm.get('password');\r\n  }\r\n\r\n  get oldPassword() {\r\n    return this.userProfileForm.get('oldPassword');\r\n  }\r\n\r\n  get newPassword() {\r\n    return this.password.get('newPassword');\r\n  }\r\n\r\n  get confirmPassword() {\r\n    return this.password.get('confirmPassword');\r\n  }\r\n\r\n  get assignedRoles() {\r\n    return this.userProfileForm.get('roles');\r\n  }\r\n\r\n\r\n  get floatLabels(): string {\r\n    return this.isEditMode ? 'auto' : 'always';\r\n  }\r\n\r\n\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {SharedModule} from '@custor/modules/shared.module';\r\nimport {ManagePasswordRoutingModule} from './manage-routing.module';\r\nimport {ManagePasswordComponent} from './manage.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    CommonModule,\r\n    ManagePasswordRoutingModule\r\n  ],\r\n  declarations: [ManagePasswordComponent]\r\n})\r\nexport class ManagePasswordModule {\r\n}"],"sourceRoot":""}