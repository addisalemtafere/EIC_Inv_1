{"version":3,"sources":["webpack:///./src/app/components/incentive/balance/balance-routing.module.ts","webpack:///./src/app/components/incentive/balance/balance.component.html","webpack:///./src/app/components/incentive/balance/balance.component.scss","webpack:///./src/app/components/incentive/balance/balance.component.ts","webpack:///./src/app/components/incentive/balance/balance.module.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAuC;AACc;AACA;AAErD,IAAM,MAAM,GAAW;IACrB,EAAC,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,mEAAgB,EAAC;CACxC,CAAC;AAMF;IAAA;IAEA,CAAC;IAFY,oBAAoB;QAJhC,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,oBAAoB,CAEhC;IAAD,2BAAC;CAAA;AAFgC;;;;;;;;;;;;ACZjC,oXAAoX,KAAK,OAAO,+oBAA+oB,YAAY,mBAAmB,KAAK,8SAA8S,wCAAwC,iRAAiR,uEAAuE,wRAAwR,qCAAqC,qQAAqQ,sDAAsD,iQAAiQ,YAAY,+eAA+e,kCAAkC,gLAAgL,yBAAyB,qZAAqZ,oCAAoC,mOAAmO,+BAA+B,kOAAkO,iCAAiC,gOAAgO,sCAAsC,2PAA2P,yBAAyB,s8BAAs8B,YAAY,qBAAqB,KAAK,gSAAgS,uBAAuB,sPAAsP,mBAAmB,2OAA2O,qBAAqB,uPAAuP,yDAAyD,oSAAoS,oBAAoB,qMAAqM,2BAA2B,mR;;;;;;;;;;;ACA54O,kCAAkC,qBAAqB,EAAE,OAAO,+BAA+B,EAAE,cAAc,8DAA8D,mBAAmB,uBAAuB,4BAA4B,uBAAuB,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAzJ;AACzC;AACI;AACrC;AAC0B;AACR;AAEc;AACR;AACD;AACoD;AAC7D;AACoC;AAExC;AACJ;AAC6B;AAO5E;IAiDE,0BAAoB,oBAA2C,EAC3C,MAAoB,EACpB,2BAAsD,EACtD,MAAc,EACf,MAAiB,EAChB,kBAA6C,EAC7C,WAA+B,EAC/B,KAAqB,EACrB,cAA8B,EAC9B,OAAuB,EACvB,KAAoB,EACpB,aAAmC,EACnC,WAAwB,EACxB,WAAwB;QAbxB,yBAAoB,GAApB,oBAAoB,CAAuB;QAC3C,WAAM,GAAN,MAAM,CAAc;QACpB,gCAA2B,GAA3B,2BAA2B,CAA2B;QACtD,WAAM,GAAN,MAAM,CAAQ;QACf,WAAM,GAAN,MAAM,CAAW;QAChB,uBAAkB,GAAlB,kBAAkB,CAA2B;QAC7C,gBAAW,GAAX,WAAW,CAAoB;QAC/B,UAAK,GAAL,KAAK,CAAgB;QACrB,mBAAc,GAAd,cAAc,CAAgB;QAC9B,YAAO,GAAP,OAAO,CAAgB;QACvB,UAAK,GAAL,KAAK,CAAe;QACpB,kBAAa,GAAb,aAAa,CAAsB;QACnC,gBAAW,GAAX,WAAW,CAAa;QACxB,gBAAW,GAAX,WAAW,CAAa;QAvD5C,gBAAW,GAAmB,EAAE,CAAC;QACjC,qBAAgB,GAAG;YACjB,IAAI,EAAE,aAAa,EAAE,QAAQ,EAAE,UAAU,EAAE,eAAe,EAAE,SAAS;SACtE,CAAC;QACF,4BAAuB,GAAG;YACxB,IAAI,EAAE,mBAAmB,EAAE,YAAY,EAAE,gBAAgB,EAAC,OAAO,EAAE,QAAQ;SAC5E,CAAC;QAEF,WAAM,GAAkB,EAAE,CAAC;QAI3B,0CAA0C;QACjC,YAAO,GAAG,UAAU,CAAC;QACrB,aAAQ,GAAG,CAAC,CAAC;QACb,YAAO,GAAG,CAAC,CAAC,CAAC,MAAM;QAClB,iBAAY,GAAG,IAAI,0DAAY,EAAE,CAAC;QAI5C,cAAS,GAAG,KAAK,CAAC;QAGX,aAAQ,GAAmC,EAAE,CAAC;QAGrD,aAAQ,GAAG,KAAK,CAAC;QAEjB,YAAO,GAAG,KAAK,CAAC;QAKT,eAAU,GAAG,KAAK,CAAC;QACnB,cAAS,GAAe,EAAE,CAAC;QAClC,eAAU,GAAG,KAAK,CAAC;IAqBnB,CAAC;IAED,mCAAQ,GAAR;QACE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC;QAC/C,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,+DAA+D;QAC9D,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;QACzD,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,sBAAsB,CAAC,CAAC;QAC/E,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;QAC1D,4CAA4C;QAC1C,qDAAqD;QACrD,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACzC,IAAI;QACJ,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAExC,CAAC;IAED,iDAAsB,GAAtB,UAAuB,MAAM,EAAE,IAAmC;QAChE,qBAAqB;QACrB,IAAM,EAAE,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC;QAE/B,IAAI,CAAC,oBAAoB,CAAC,8BAA8B,CAAC,IAAI,CAAC,yBAAyB,CAAC;aACrF,SAAS,CAAC,gBAAM;YACf,uBAAuB;QACzB,CAAC,CAAC,CAAC;QACL,EAAE,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;YACnB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,6BAA6B,CAAC,CAAC;QAEpD,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;YAC3B,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,sCAAsC,CAAC,CAAC;QAC7D,CAAC;IAEH,CAAC;IAED,mCAAQ,GAAR;QAAA,iBA0BC;QAzBC,IAAI,CAAC,kBAAkB,CAAC,aAAa,CAAC,2BAA2B,CAAC,CAAC;QACnE,IAAI,CAAC,WAAW,CAAC,oBAAoB,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;QAC/D,EAAE,CAAC,CAAC,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAC;YAClC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACnB,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC;qBAC5D,SAAS,CAAC,UAAC,MAAoC;oBAC9C,KAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,2BAA2B,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC,CAAC,CAAC;oBACrF,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;oBAC3B,KAAI,CAAC,iBAAiB,CAAC,KAAI,CAAC,oBAAoB,CAAC,CAAC;oBAClD,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;oBAC3B,yFAAyF;oBACzF,4BAA4B;gBAC9B,CAAC,EAAE,eAAK,IAAI,YAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAA7C,CAA6C,CAAC,CAAC;YAC/D,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,yBAAyB,CAAC;qBAC5H,SAAS,CAAC,gBAAM;oBACf,KAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;oBAC7B,KAAI,CAAC,QAAQ,CAAC,KAAI,CAAC,gBAAgB,CAAC,GAAG,MAAM,CAAC;oBAC9C,KAAI,CAAC,UAAU,GAAG,IAAI,oEAAkB,CAA+B,KAAI,CAAC,QAAQ,CAAC,CAAC;oBACtF,KAAI,CAAC,OAAO,EAAE,CAAC;gBACjB,CAAC,EAAE,eAAK,IAAI,YAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAA7C,CAA6C,CAAC,CAAC;YAC/D,CAAC;QACH,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,kBAAkB,EAAE,IAAI,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;QACnG,CAAC;IACH,CAAC;IAED,kCAAO,GAAP;QACE,IAAI,CAAC,kBAAkB,CAAC,KAAK,EAAE,CAAC;IAClC,CAAC;IAED,iCAAM,GAAN,UAAO,KAAa;QAClB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;QACrB,sBAAsB;QAEtB,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAC9B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QACxC,IAAI,CAAC,kBAAkB,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACvD,CAAC;IAED,sCAAW,GAAX,UAAY,yBAAuD;QACjE,IAAI,CAAC,uCAAuC,CAAC,yBAAyB,CAAC,oBAAoB,CAAC,CAAC;IAC/F,CAAC;IAED,kCAAO,GAAP;QACE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;IACtB,CAAC;IAED,iCAAM,GAAN,UAAO,KAAa,EAAE,EAAU;QAAhC,iBAOC;QANC,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,EAAE,CAAC;aACjC,SAAS,CAAC;YACT,KAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;YAC7B,KAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;YAC/B,KAAI,CAAC,UAAU,GAAG,IAAI,oEAAkB,CAA+B,KAAI,CAAC,QAAQ,CAAC,CAAC;QACxF,CAAC,CAAC,CAAC;IACP,CAAC;IAED,4CAAiB,GAAjB,UAAkB,SAAc;QAAhC,iBASC;QARC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,oBAAoB,CAAC,4BAA4B,CAAC,SAAS,CAAC;aAC9D,SAAS,CAAC,gBAAM;YACf,KAAI,CAAC,QAAQ,GAAG,MAAM,CAAC;YACvB,KAAI,CAAC,iBAAiB,GAAG,IAAI,oEAAkB,CAA+B,KAAI,CAAC,QAAQ,CAAC,CAAC;YAC7F,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,KAAI,CAAC,iBAAiB,CAAC,SAAS,GAAG,KAAI,CAAC,SAAS,CAAC;QACpD,CAAC,EAAE,eAAK,IAAI,YAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,EAA3B,CAA2B,CAAC,CAAC;IAC7C,CAAC;IAEH,sCAAsC;IACtC,2BAA2B;IAC3B,wEAAwE;IACxE,+BAA+B;IAC/B,kCAAkC;IAClC,iGAAiG;IACjG,gCAAgC;IAChC,sDAAsD;IACtD,kDAAkD;IAClD,MAAM;IAEJ,kEAAuC,GAAvC,UAAwC,oBAAyB;QAAjE,iBAeC;QAdC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,oBAAoB,CAAC,uCAAuC,CAAC,oBAAoB,CAAC;aACpF,SAAS,CAAC,gBAAM;YACf,KAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,uBAAuB,CAAC;YAC/C,EAAE,CAAC,CAAC,KAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;gBAC7B,KAAI,CAAC,UAAU,GAAG,IAAI,CAAC;gBACvB,KAAI,CAAC,UAAU,GAAG,IAAI,oEAAkB,CAA+B,MAAM,CAAC,uBAAuB,CAAC,CAAC;gBACvG,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,KAAI,CAAC,UAAU,CAAC,SAAS,GAAG,KAAI,CAAC,SAAS,CAAC;YAC7C,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,KAAI,CAAC,UAAU,GAAG,KAAK,CAAC;YAC1B,CAAC;QAEH,CAAC,EAAE,eAAK,IAAI,YAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,EAA3B,CAA2B,CAAC,CAAC;IAC7C,CAAC;IAED,iCAAM,GAAN,UAAO,CAAS,EAAE,KAAe;QAAjC,iBA0BC;QAzBC,uBAAuB;QACvB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC,CAAC,cAAc;QAChC,4CAA4C;QAC5C,4CAA4C;QAC5C,EAAE,CAAC,CAAC,KAAK,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YAC7D,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC;gBAC3B,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI;gBACnB,QAAQ,EAAE,KAAK,CAAC,CAAC,CAAC;aAEnB,CAAC,CAAC;YACH,IAAI,CAAC,oBAAoB;iBACtB,cAAc,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC;iBACtC,SAAS,CAAC,gBAAM;gBACf,KAAI,CAAC,QAAQ,GAAG,MAAM,CAAC;gBACvB,KAAI,CAAC,UAAU,GAAG,IAAI,oEAAkB,CAA+B,MAAM,CAAC,CAAC;gBAC/E,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;gBACrB,8CAA8C;gBAE9C,KAAI,CAAC,QAAQ,GAAG,MAAM,CAAC;gBACvB,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACvB,CAAC,EAAE,eAAK,IAAI,YAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAA7C,CAA6C,CAAC,CAAC;YAC7D,kEAAkE;QACpE,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,wBAAwB,EAAE,OAAO,CAAC,CAAC;QACtD,CAAC;IACH,CAAC;IAED,0CAAe,GAAf;QACE,IAAM,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;QAE1C,IAAM,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;QAChC,qCAAqC;QACrC,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAE,SAAS,CAAC,IAAI,CAAC,CAAC;QACxC,QAAQ,CAAC,MAAM,CAAC,sBAAsB,EAAE,IAAI,CAAC,oBAAoB,CAAC,CAAC;QACnE,QAAQ,CAAC,MAAM,CAAC,UAAU,EAAE,SAAS,CAAC,QAAQ,CAAC,CAAC;QAChD,QAAQ,CAAC,MAAM,CAAC,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QAC7C,QAAQ,CAAC,MAAM,CAAC,qBAAqB,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAC/D,MAAM,CAAC,QAAQ,CAAC;IAClB,CAAC;IAED,0CAA0C;IAC1C,yBAAyB;IACzB,kHAAkH;IAClH,8BAA8B;IAC9B,sFAAsF;IACtF,4BAA4B;IAC5B,EAAE;IACF,EAAE;IACF,QAAQ;IACR,IAAI;IAEJ,IAAI;IACJ,0CAAe,GAAf;QACE,8CAA8C;IAChD,CAAC;IAED,gCAAK,GAAL;QACE,IAAI,CAAC,kBAAkB,CAAC,KAAK,EAAE,CAAC;IAClC,CAAC;IAED,mDAAwB,GAAxB;QAAA,iBAOC;QANC,IAAI,CAAC,2BAA2B,CAAC,mCAAmC,CAClE,IAAI,CAAC,oBAAoB,CAAC;aACzB,SAAS,CAAC,gBAAM;YACf,uBAAuB;YACvB,KAAI,CAAC,KAAK,CAAC,OAAO,CAAC,2GAA2G,CAAC,CAAC;QAClI,CAAC,CAAC,CAAC;IACP,CAAC;IAED,uCAAY,GAAZ,UAAa,OAAe;QAC1B,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,kBAAgB,OAAO,YAAS,EAAE,SAAS,CAAC,CAAC;IAElE,CAAC;IAGD,kCAAkC;IAClC,EAAE;IACF,EAAE;IAEF,sCAAW,GAAX;QACE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC;IACtD,CAAC;IAED,yCAAc,GAAd,UAAe,WAAW;QAA1B,iBAWC;QATC,IAAI,IAAI,GAAa,IAAI,2DAAQ,EAAE,CAAC;QACpC,+DAAS,CAAC,OAAO,CAAC,cAAI;YACpB,IAAI,GAAG;gBACL,IAAI,EAAE,IAAI,CAAC,EAAE,CAAC,QAAQ,EAAE;gBACxB,oBAAoB,EAAE,IAAI,CAAC,kBAAkB;gBAC7C,aAAa,EAAE,IAAI,CAAC,WAAW;aAChC,CAAC;YACF,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC5B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,sCAAW,GAAX,UAAY,WAAmB;QAC7B,WAAW,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,CAAC,oBAAoB;QACtD,WAAW,GAAG,WAAW,CAAC,WAAW,EAAE,CAAC,CAAC,2CAA2C;QACpF,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;QAC3D,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC;YAC9B,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC;QACxC,CAAC;IACH,CAAC;IAEO,mCAAQ,GAAhB;QACE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACzC,IAAI,EAAE,IAAI,0DAAW,EAAE;YACvB,QAAQ,EAAE,IAAI,0DAAW,CAAC,IAAI,CAAC;SAChC,CAAC,CAAC;IACL,CAAC;IAEO,uCAAY,GAApB,UAAqB,KAAK;QACxB,wBAAwB;QACxB,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YACjC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,uCAAuC,GAAG,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,CAAC;YACrF,iGAAiG;YACjG,MAAM,CAAC;QACT,CAAC;QACD,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;QACjC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,KAAK,CAAC,CAAC;IAClC,CAAC;IAEO,+CAAoB,GAA5B,UAA6B,KAAK;QAChC,gCAAgC;QAChC,IAAM,UAAU,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;aACzC,GAAG,CAAC,UAAU,CAAC;YACd,MAAM,CAAC,CAAC,CAAC,iBAAiB,EAAE,CAAC,IAAI,EAAE,CAAC;QACtC,CAAC,CAAC,CAAC;QAEL,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YACtC,qBAAqB;YACrB,IAAM,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;YAC1E,6BAA6B;YAC7B,IAAM,MAAM,GAAG,UAAU,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;YACxC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;gBACZ,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,gDAAgD,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;gBACnF,8FAA8F;YAEhG,CAAC;YACD,kBAAkB;YAClB,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QACjC,CAAC;IACH,CAAC;IAEO,0CAAe,GAAvB,UAAwB,IAAI;QAC1B,IAAM,YAAY,GAAG,IAAI,CAAC,IAAI,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,CAAC;QAC9C,IAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,+BAA+B;QAClF,EAAE,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;YACxB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,qBAAqB;gBACpC,IAAI,CAAC,IAAI,GAAG,8BAA8B;gBAC1C,IAAI,CAAC,OAAO,GAAG,OAAO,GAAG,IAAI,GAAG,MAAM,CAAC,CAAC;YAC1C,iIAAiI;QACnI,CAAC;IACH,CAAC;IAEO,kCAAO,GAAf;QACE,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAC/C,yBAAyB,EAAE,IAAI,0DAAW,EAAE;YAC5C,kBAAkB,EAAE,CAAC;YACrB,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,oBAAoB,EAAE,IAAI,CAAC,oBAAoB;YAC/C,WAAW,EAAE,IAAI,0DAAW,EAAE;YAC9B,MAAM,EAAE,IAAI,0DAAW,EAAE;YACzB,QAAQ,EAAE,IAAI,0DAAW,EAAE;YAC3B,aAAa,EAAE,IAAI,0DAAW,EAAE;SACjC,CAAC,CAAC;IACL,CAAC;IA/VwB;QAAxB,+DAAS,CAAC,8DAAY,CAAC;kCAAY,8DAAY;uDAAC;IAGxC;QAAR,2DAAK,EAAE;;uDAAmB;IAClB;QAAR,2DAAK,EAAE;;uDAAmB;IAElB;QAAR,2DAAK,EAAE;;qDAAsB;IACrB;QAAR,2DAAK,EAAE;;sDAAc;IACb;QAAR,2DAAK,EAAE;;qDAAa;IACX;QAAT,4DAAM,EAAE;;0DAAmC;IAEpB;QAAvB,+DAAS,CAAC,WAAW,CAAC;kCAAY,wDAAU;uDAAC;IACxB;QAArB,+DAAS,CAAC,SAAS,CAAC;kCAAU,wDAAU;qDAAC;IA1B/B,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;;;SAGxB,CAAC;yCAkD0C,mGAAqB;YACnC,+EAAY;YACS,8HAAyB;YAC9C,uDAAM;YACP,2DAAS;YACI,8HAAyB;YAChC,iFAAkB;YACxB,+DAAc;YACL,wFAAc;YACrB,wEAAc;YAChB,wDAAa;YACL,4FAAoB;YACtB,0DAAW;YACX,0EAAW;OA9DjC,gBAAgB,CA8W5B;IAAD,uBAAC;CAAA;AA9W4B;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvBU;AACM;AACc;AACG;AACT;AAC2D;AACxC;AAiBxE;IAAA;IAEA,CAAC;IAFY,aAAa;QAfzB,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0EAAY;gBACZ,4EAAoB;gBACpB,0HAAyB;gBACzB,kFAAY;aACb;YACD,YAAY,EAAE;gBACZ,mEAAgB;aACjB;YACD,OAAO,EAAE;gBACP,mEAAgB;aACjB;SACF,CAAC;OACW,aAAa,CAEzB;IAAD,oBAAC;CAAA;AAFyB","file":"app-components-incentive-balance-balance-module.js","sourcesContent":["import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {BalanceComponent} from './balance.component';\r\n \r\nconst routes: Routes = [\r\n  {path: '', component: BalanceComponent} \r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class BalanceRoutingModule {\r\n\r\n}\r\n","module.exports = \"<!--<app-page-header icon=\\\"dashboard\\\" title=\\\"dashboard\\\"></app-page-header>-->\\r\\n\\r\\n<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" fxLayoutGap=\\\"2em\\\">\\r\\n  <div *ngIf=\\\"errors.length>0\\\" class=\\\"alert-info\\\" fxLayout=\\\" row wrap\\\" fxLayoutAlign=\\\"center\\\">\\r\\n    <ol type=\\\"i\\\">\\r\\n      <li class=\\\"mat-error\\\" *ngFor=\\\"let error of errors;\\\">{{error}}</li>\\r\\n    </ol>\\r\\n  </div>\\r\\n</div>\\r\\n<mat-card class=\\\"margin-2 padding-0\\\" fxFlex=\\\"80\\\">\\r\\n  <mat-card-header>\\r\\n    <mat-card-subtitle class=\\\"sub-title\\\">List of Incentive Request\\r\\n    </mat-card-subtitle>\\r\\n  </mat-card-header>\\r\\n  <mat-card-content>\\r\\n    <div class=\\\"spinner-container\\\" *ngIf=\\\"loading \\\">\\r\\n      <mat-progress-bar mode=\\\"query\\\"></mat-progress-bar>\\r\\n    </div>\\r\\n    <mat-table #table [dataSource]=\\\"bomListDataSource\\\">\\r\\n      <ng-container matColumnDef=\\\"No\\\">\\r\\n        <mat-header-cell [fxFlex]=\\\"6\\\" *matHeaderCellDef>No</mat-header-cell>\\r\\n        <mat-cell [fxFlex]=\\\"6\\\" *matCellDef=\\\"let itemList;let i=index;\\\">\\r\\n          {{i+1}}\\r\\n        </mat-cell>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"IncentiveCategory\\\">\\r\\n        <mat-header-cell *matHeaderCellDef fxFlex=\\\"20\\\">Incentive Category</mat-header-cell>\\r\\n        <mat-cell *matCellDef=\\\"let IncentiveRequestItemModes\\\" fxFlex=\\\"20\\\">\\r\\n          {{IncentiveRequestItemModes.Description }}\\r\\n        </mat-cell>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"UploadDate\\\">\\r\\n        <mat-header-cell *matHeaderCellDef fxFlex=\\\"8\\\">Upload Date</mat-header-cell>\\r\\n        <mat-cell *matCellDef=\\\"let IncentiveRequestItemModes\\\" fxFlex=\\\"8\\\"> {{IncentiveRequestItemModes.UploadDate |\\r\\n          date:'MM/dd/yyyy'}}\\r\\n        </mat-cell>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"UploadQuantity\\\">\\r\\n        <mat-header-cell *matHeaderCellDef fxFlex=\\\"8\\\">Upload Quantity</mat-header-cell>\\r\\n        <mat-cell *matCellDef=\\\"let IncentiveRequestItemModes\\\" fxFlex=\\\"8\\\">{{IncentiveRequestItemModes.Quantity }}\\r\\n        </mat-cell>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"Phase\\\">\\r\\n        <mat-header-cell *matHeaderCellDef fxFlex=\\\"8\\\">Phase</mat-header-cell>\\r\\n        <mat-cell *matCellDef=\\\"let IncentiveRequestItemModes\\\" fxFlex=\\\"8\\\">{{IncentiveRequestItemModes.Phase |  lookupPhasePipe:1}}\\r\\n        </mat-cell>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"Action\\\">\\r\\n        <mat-header-cell fxFlex=\\\"\\\" *matHeaderCellDef>Action</mat-header-cell>\\r\\n        <mat-cell fxFlex=\\\"\\\" *matCellDef=\\\"let IncentiveRequestItemModes;let i=index;\\\">\\r\\n          <!--<span *ngIf=\\\"!isInvestor\\\">-->\\r\\n          <a class=\\\"pointer custom-button\\\" matTooltip=\\\"Click here to show detail the incentive request\\\"\\r\\n             (click)=\\\"showDetails(IncentiveRequestItemModes)\\\">\\r\\n            Show Balance\\r\\n          </a>\\r\\n          <!--</span>-->\\r\\n        </mat-cell>\\r\\n      </ng-container>\\r\\n\\r\\n      <mat-header-row *matHeaderRowDef=\\\"displayedGroupedColumns\\\">\\r\\n      </mat-header-row>\\r\\n      <mat-row *matRowDef=\\\"let row; columns: displayedGroupedColumns;\\\">\\r\\n      </mat-row>\\r\\n    </mat-table>\\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n\\r\\n<span *ngIf=\\\"showDetail\\\">\\r\\n<mat-card class=\\\"margin-2\\\" style=\\\"box-shadow: none;padding: 15px !important;border: 1px solid #dddddd\\\"\\r\\n          *ngIf=\\\"addshow || editMode\\\">\\r\\n  <form [formGroup]=\\\"billOfMaterialForm\\\" novalidate>\\r\\n    <mat-card-content>\\r\\n      <div fxLayout.xs=\\\"row wrap\\\"\\r\\n           fxLayoutAlign.xs=\\\"start center\\\"\\r\\n           fxLayoutGap=\\\"2em\\\">\\r\\n        <div class=\\\"block\\\" fxLayoutGap=\\\"2em\\\">\\r\\n          <mat-form-field [fxFlex]=\\\"20\\\">\\r\\n            <mat-label>{{'balalnce.Description' | translate}}</mat-label>\\r\\n            <input type=\\\"text\\\" matInput required\\r\\n                   formControlName=\\\"Description\\\">\\r\\n          </mat-form-field>\\r\\n          <mat-form-field [fxFlex]=\\\"20\\\">\\r\\n            <mat-label>{{'balalnce.HsCode' | translate}}</mat-label>\\r\\n            <input type=\\\"text\\\" matInput required\\r\\n                   formControlName=\\\"HsCode\\\">\\r\\n\\r\\n          </mat-form-field>\\r\\n          <mat-form-field [fxFlex]=\\\"20\\\">\\r\\n            <mat-label>{{'balalnce.Quantity' | translate}}</mat-label>\\r\\n            <input type=\\\"text\\\" matInput required\\r\\n                   formControlName=\\\"Quantity\\\">\\r\\n          </mat-form-field>\\r\\n          <mat-form-field [fxFlex]=\\\"20\\\">\\r\\n            <mat-label>{{'balalnce.MesurmentUnit' | translate}}</mat-label>\\r\\n            <mat-select formControlName=\\\"MesurmentUnit\\\" required>\\r\\n              <option value=\\\"0\\\">--Select--</option>\\r\\n              <mat-option *ngFor=\\\"let unit of unitTypes\\\" [value]=\\\"unit.Id\\\">\\r\\n                <span>{{unit.DescriptionEnglish}}</span>\\r\\n              </mat-option>\\r\\n            </mat-select>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n    </mat-card-content>\\r\\n  </form>\\r\\n</mat-card>\\r\\n<mat-card class=\\\"margin-2\\\">\\r\\n\\r\\n  <mat-card-content>\\r\\n      <div style=\\\"margin-left: 40px\\\">\\r\\n          <h2>Duty Free Items Balance</h2>\\r\\n        </div>\\r\\n\\r\\n    <div fxFlex=\\\"100%\\\" *ngIf=\\\"itemList.length>0\\\">\\r\\n\\r\\n      <mat-form-field>\\r\\n        <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\r\\n      </mat-form-field>\\r\\n      <div class=\\\"spinner-container\\\" *ngIf=\\\"loading\\\">\\r\\n        <mat-progress-bar mode=\\\"query\\\"></mat-progress-bar>\\r\\n      </div>\\r\\n      <mat-table #table [dataSource]=\\\"dataSource\\\">\\r\\n        <ng-container matColumnDef=\\\"No\\\">\\r\\n          <mat-header-cell [fxFlex]=\\\"6\\\" *matHeaderCellDef>No</mat-header-cell>\\r\\n          <mat-cell [fxFlex]=\\\"6\\\" *matCellDef=\\\"let itemList;let i=index;\\\">\\r\\n            {{i+1}}\\r\\n          </mat-cell>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"Description\\\">\\r\\n          <mat-header-cell fxFlex=\\\"30\\\" *matHeaderCellDef>Description</mat-header-cell>\\r\\n          <mat-cell fxFlex=\\\"30\\\" *matCellDef=\\\"let itemList\\\">\\r\\n            {{itemList?.Description}}\\r\\n          </mat-cell>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"HsCode\\\">\\r\\n          <mat-header-cell *matHeaderCellDef>HsCode</mat-header-cell>\\r\\n          <mat-cell *matCellDef=\\\"let itemList\\\">\\r\\n            {{itemList?.HsCode }}\\r\\n          </mat-cell>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"Quantity\\\">\\r\\n          <mat-header-cell *matHeaderCellDef>Quantity</mat-header-cell>\\r\\n          <mat-cell *matCellDef=\\\"let itemList\\\"> {{itemList?.Quantity }}\\r\\n          </mat-cell>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"MesurmentUnit\\\">\\r\\n          <mat-header-cell *matHeaderCellDef>Measurment Unit</mat-header-cell>\\r\\n          <mat-cell *matCellDef=\\\"let itemList\\\"> {{itemList?.MesurmentUnit |\\r\\n            filterPipe: 10}}\\r\\n          </mat-cell>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"Balance\\\">\\r\\n          <mat-header-cell *matHeaderCellDef>\\r\\n            <span> Balance</span>\\r\\n          </mat-header-cell>\\r\\n          <mat-cell *matCellDef=\\\"let itemList\\\">\\r\\n            {{itemList?.Balance }}\\r\\n          </mat-cell>\\r\\n        </ng-container>\\r\\n\\r\\n\\r\\n        <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\">\\r\\n        </mat-header-row>\\r\\n        <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\">\\r\\n        </mat-row>\\r\\n      </mat-table>\\r\\n\\r\\n      <mat-paginator\\r\\n\\r\\n        #paginator\\r\\n        [pageSize]=\\\"8\\\"\\r\\n        [pageSizeOptions]=\\\"[8, 10, 20]\\\">\\r\\n      </mat-paginator>\\r\\n    </div>\\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n</span>\\r\\n\\r\\n\"","module.exports = \"mat-header-row {\\n  min-height: 42px; }\\n\\na {\\n  cursor: pointer !important; }\\n\\nmat-card {\\n  transition: box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);\\n  display: block;\\n  position: relative;\\n  padding: 0px !important;\\n  border-radius: 2px; }\\n\"","import {AfterViewInit, Component, ElementRef, EventEmitter, Input, OnInit, Output, ViewChild} from '@angular/core';\r\nimport {DataSharingService} from '../../../Services/data-sharing.service';\r\nimport {MatDialog, MatPaginator, MatTableDataSource} from '@angular/material';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {FormBuilder, FormControl, FormGroup} from '@angular/forms';\r\nimport {FormService} from '@custor/validation/custom/form';\r\nimport {ServiceModel} from '../../../model/Service.model';\r\nimport {AccountService} from '@custor/services/security/account.service';\r\nimport {ServiceService} from '../../../Services/service.service';\r\nimport {ErrorMessage} from '@custor/services/errMessageService';\r\nimport {ServiceapplicationService} from '../../setting/services-tabs/serviceApplication/serviceapplication.service';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {BillOfMaterialService} from '../../../Services/incentive/bill-of-material.service';\r\nimport {IncentiveBoMRequestItemModel} from '../../../model/incentive/IncentiveBoMRequestItem.model';\r\nimport {UnitType} from '../../../model/lookupData';\r\nimport {UnitTypes} from '@custor/const/consts';\r\nimport {ConfigurationService} from '@custor/services/configuration.service';\r\n\r\n@Component({\r\n  selector: 'app-balance',\r\n  templateUrl: './balance.component.html',\r\n  styleUrls: ['./balance.component.scss']\r\n})\r\nexport class BalanceComponent implements OnInit, AfterViewInit {\r\n\r\n  dataSource: any;\r\n  bomListDataSource: any;\r\n  loading: boolean;\r\n  searchForm: FormGroup;\r\n  documentForm: FormGroup;\r\n  serviceList: ServiceModel[] = [];\r\n  displayedColumns = [\r\n    'No', 'Description', 'HsCode', 'Quantity', 'MesurmentUnit', 'Balance'\r\n  ];\r\n  displayedGroupedColumns = [\r\n    'No', 'IncentiveCategory', 'UploadDate', 'UploadQuantity','Phase', 'Action'\r\n  ];\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  errors: Array<string> = [];\r\n\r\n  @Input() projectId: number;\r\n  @Input() sectionId: number;\r\n  // @Input() fileExt = 'JPG, GIF, PNG,Pdf';\r\n  @Input() fileExt = 'xlsx,xls';\r\n  @Input() maxFiles = 5;\r\n  @Input() maxSize = 2; // 5MB\r\n  @Output() uploadStatus = new EventEmitter();\r\n\r\n  @ViewChild('fileInput') fileInput: ElementRef;\r\n  @ViewChild('content') content: ElementRef;\r\n  isOfficer = false;\r\n  formErrors: {};\r\n  public assigned: boolean;\r\n  public itemList: IncentiveBoMRequestItemModel[] = [];\r\n  billOfMaterialForm: FormGroup;\r\n\r\n  editMode = false;\r\n\r\n  addshow = false;\r\n  productEditIndex: number;\r\n\r\n  productEdit: IncentiveBoMRequestItemModel;\r\n  public stepperIndex: number;\r\n  public isInvestor = false;\r\n  public unitTypes: UnitType[] = [];\r\n  showDetail = false;\r\n  private currentCategoryId: any;\r\n  private ServiceApplicationId: any;\r\n  private ServiceId: any;\r\n  private ProjectId: any;\r\n  private currentLang: string;\r\n\r\n  constructor(private billOfMaterilService: BillOfMaterialService,\r\n              private errMsg: ErrorMessage,\r\n              private serviceApplicationsServices: ServiceapplicationService,\r\n              private router: Router,\r\n              public dialog: MatDialog,\r\n              private serviceApplication: ServiceapplicationService,\r\n              private dataSharing: DataSharingService,\r\n              private route: ActivatedRoute,\r\n              private accountService: AccountService,\r\n              private service: ServiceService,\r\n              private toast: ToastrService,\r\n              private configService: ConfigurationService,\r\n              private formBuilder: FormBuilder,\r\n              private formService: FormService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.currentLang = this.configService.language;\r\n    this.getUserType();\r\n    this.initForm();\r\n    this.addForm();\r\n    // this.currentCategoryId = this.route.snapshot.params['type'];\r\n     this.ServiceId = this.route.snapshot.params['serviceId'];\r\n     this.ServiceApplicationId = this.route.snapshot.params['serviceApplicationId'];\r\n     this.ProjectId = this.route.snapshot.params['projectId'];\r\n    // if (this.currentCategoryId === '10778') {\r\n      // this.getBillOfMaterial(this.ServiceApplicationId);\r\n      this.getBillOfMaterial(this.ProjectId);\r\n    // }\r\n    this.initStaticData(this.currentLang);\r\n\r\n  }\r\n\r\n  onMangerControlChanged($event, data?: IncentiveBoMRequestItemModel) {\r\n    // console.log(data);\r\n    const id = $event.source.value;\r\n\r\n    this.billOfMaterilService.finalForApprovalBillOfMaterial(data.IncentiveBoMRequestItemId)\r\n      .subscribe(result => {\r\n        // console.log(result);\r\n      });\r\n    if ($event.checked) {\r\n      this.toast.success('Item approved  successfully');\r\n\r\n    } else if (!$event.checked) {\r\n      this.toast.success('Item approved cancelled successfully');\r\n    }\r\n\r\n  }\r\n\r\n  onSubmit() {\r\n    this.billOfMaterialForm.removeControl('IncentiveBoMRequestItemId');\r\n    this.formService.markFormGroupTouched(this.billOfMaterialForm);\r\n    if (this.billOfMaterialForm.valid) {\r\n      if (!this.editMode) {\r\n        this.billOfMaterilService.create(this.billOfMaterialForm.value)\r\n          .subscribe((result: IncentiveBoMRequestItemModel) => {\r\n            this.billOfMaterialForm.addControl('IncentiveBoMRequestItemId', new FormControl(''));\r\n            this.notification('saved');\r\n            this.getBillOfMaterial(this.ServiceApplicationId);\r\n            this.itemList.push(result);\r\n            // this.dataSource = new MatTableDataSource<IncentiveBoMRequestItemModel>(this.itemList);\r\n            // this.getBillOfMaterial();\r\n          }, error => this.toast.error(this.errMsg.getError(error)));\r\n      } else {\r\n        this.billOfMaterilService.update(this.billOfMaterialForm.value, this.itemList[this.productEditIndex].IncentiveBoMRequestItemId)\r\n          .subscribe(result => {\r\n            this.notification('updated');\r\n            this.itemList[this.productEditIndex] = result;\r\n            this.dataSource = new MatTableDataSource<IncentiveBoMRequestItemModel>(this.itemList);\r\n            this.onClear();\r\n          }, error => this.toast.error(this.errMsg.getError(error)));\r\n      }\r\n    } else {\r\n      this.formErrors = this.formService.validateForm(this.billOfMaterialForm, this.formErrors, false);\r\n    }\r\n  }\r\n\r\n  onClear() {\r\n    this.billOfMaterialForm.reset();\r\n  }\r\n\r\n  onEdit(index: number) {\r\n    this.editMode = true;\r\n    // console.log(index);\r\n\r\n    this.productEditIndex = index;\r\n    this.productEdit = this.itemList[index];\r\n    this.billOfMaterialForm.patchValue(this.productEdit);\r\n  }\r\n\r\n  showDetails(incentiveRequestItemModes: IncentiveBoMRequestItemModel) {\r\n    this.getBillOfMaterialByServiceApplicationId(incentiveRequestItemModes.ServiceApplicationId);\r\n  }\r\n\r\n  addItem() {\r\n    this.addshow = true;\r\n  }\r\n\r\n  delete(index: number, id: number) {\r\n    this.billOfMaterilService.delete(id)\r\n      .subscribe(() => {\r\n        this.notification('Deleted');\r\n        this.itemList.splice(index, 1);\r\n        this.dataSource = new MatTableDataSource<IncentiveBoMRequestItemModel>(this.itemList);\r\n      });\r\n  }\r\n\r\n  getBillOfMaterial(ProjectId: any) {\r\n    this.loading = true;\r\n    this.billOfMaterilService.getBillOfMaterialByProjectId(ProjectId)\r\n      .subscribe(result => {\r\n        this.itemList = result;\r\n        this.bomListDataSource = new MatTableDataSource<IncentiveBoMRequestItemModel>(this.itemList);\r\n        this.loading = false;\r\n        this.bomListDataSource.paginator = this.paginator;\r\n      }, error => this.errMsg.getError(error));\r\n  }\r\n\r\n// getBillOfMaterial(ProjectId: any) {\r\n//     this.loading = true;\r\n//     this.billOfMaterilService.getBillOfMaterialByProjectId(ProjectId)\r\n//       .subscribe(result => {\r\n//         this.itemList = result;\r\n//         this.dataSource = new MatTableDataSource<IncentiveBoMRequestItemModel>(this.itemList);\r\n//         this.loading = false;\r\n//         this.dataSource.paginator = this.paginator;\r\n//       }, error => this.errMsg.getError(error));\r\n//   }\r\n\r\n  getBillOfMaterialByServiceApplicationId(ServiceApplicationId: any) {\r\n    this.loading = true;\r\n    this.billOfMaterilService.getBillOfMaterialByServiceApplicationId(ServiceApplicationId)\r\n      .subscribe(result => {\r\n        this.itemList = result.IncentiveBoMRequestItem;\r\n        if (this.itemList.length > 0) {\r\n          this.showDetail = true;\r\n          this.dataSource = new MatTableDataSource<IncentiveBoMRequestItemModel>(result.IncentiveBoMRequestItem);\r\n          this.loading = false;\r\n          this.dataSource.paginator = this.paginator;\r\n        } else {\r\n          this.showDetail = false;\r\n        }\r\n\r\n      }, error => this.errMsg.getError(error));\r\n  }\r\n\r\n  upload(i: number, files: FileList) {\r\n    // this.loading = true;\r\n    this.errors = []; // Clear error\r\n    // Validate file size and allowed extensions\r\n    // console.log((!this.isValidFiles(files)));\r\n    if (files && files[0].size > 0 && (this.isValidFiles(files))) {\r\n      this.documentForm.patchValue({\r\n        Name: files[0].name,\r\n        KeyWords: files[0],\r\n\r\n      });\r\n      this.billOfMaterilService\r\n        .uploadDocument(this.prepareSaveUser())\r\n        .subscribe(result => {\r\n          this.itemList = result;\r\n          this.dataSource = new MatTableDataSource<IncentiveBoMRequestItemModel>(result);\r\n          this.loading = false;\r\n          // this.dataSource.paginator = this.paginator;\r\n\r\n          this.itemList = result;\r\n          this.loading = false;\r\n        }, error => this.toast.error(this.errMsg.getError(error)));\r\n      // this.getServicePrerequisite(localStorage.getItem('ServiceId'));\r\n    } else {\r\n      this.toast.error('Error Occurred Please ', 'Error');\r\n    }\r\n  }\r\n\r\n  prepareSaveUser(): FormData {\r\n    const formModel = this.documentForm.value;\r\n\r\n    const formData = new FormData();\r\n    // console.log(formModel.workFlowId);\r\n    formData.append('Name', formModel.Name);\r\n    formData.append('ServiceApplicationId', this.ServiceApplicationId);\r\n    formData.append('KeyWords', formModel.KeyWords);\r\n    formData.append('ProjectId', this.ProjectId);\r\n    formData.append('IncentiveCategoryId', this.currentCategoryId);\r\n    return formData;\r\n  }\r\n\r\n  // uploadData(ServiceApplicationId: any) {\r\n  //   this.loading = true;\r\n  //   this.billOfMaterilService.getBillOfMaterialByServiceApplicationId(ServiceApplicationId).subscribe(result => {\r\n  //     this.itemList = result;\r\n  //     this.dataSource = new MatTableDataSource<IncentiveBoMRequestItemModel>(result);\r\n  //     this.loading = false;\r\n  //\r\n  //\r\n  //   });\r\n  // }\r\n\r\n  // }\r\n  ngAfterViewInit() {\r\n    // this.dataSource.paginator = this.paginator;\r\n  }\r\n\r\n  clear() {\r\n    this.billOfMaterialForm.reset();\r\n  }\r\n\r\n  UpdateServiceApplication() {\r\n    this.serviceApplicationsServices.finalForApprovalServiceApplications(\r\n      this.ServiceApplicationId)\r\n      .subscribe(result => {\r\n        // console.log(result);\r\n        this.toast.success('Application submitted successfully we will revise soon as well as  we will notify for any action required');\r\n      });\r\n  }\r\n\r\n  notification(message: string) {\r\n    this.loading = false;\r\n    this.toast.success(` Succesfully ${message} Data.!`, 'Success');\r\n\r\n  }\r\n\r\n\r\n  // ngAfterContentChecked(): void {\r\n  //\r\n  //\r\n\r\n  getUserType() {\r\n    this.isInvestor = this.accountService.getUserType();\r\n  }\r\n\r\n  initStaticData(currentLang) {\r\n\r\n    let unit: UnitType = new UnitType();\r\n    UnitTypes.forEach(pair => {\r\n      unit = {\r\n        'Id': pair.Id.toString(),\r\n        'DescriptionEnglish': pair.DescriptionEnglish,\r\n        'Description': pair.Description\r\n      };\r\n      this.unitTypes.push(unit);\r\n    });\r\n  }\r\n\r\n  applyFilter(filterValue: string) {\r\n    filterValue = filterValue.trim(); // Remove whitespace\r\n    filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches\r\n    this.dataSource.filter = filterValue.replace(/[\\W_]/g, '');\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  private initForm() {\r\n    this.documentForm = this.formBuilder.group({\r\n      Name: new FormControl(),\r\n      KeyWords: new FormControl(null)\r\n    });\r\n  }\r\n\r\n  private isValidFiles(files) {\r\n    // Check Number of files\r\n    if (files.length > this.maxFiles) {\r\n      this.errors.push('Error: At a time you can upload only ' + this.maxFiles + ' files');\r\n      // this.toast.error('Error: At a time you can upload only ' + this.maxFiles + ' files', 'Error');\r\n      return;\r\n    }\r\n    this.isValidFileExtension(files);\r\n    return this.errors.length === 0;\r\n  }\r\n\r\n  private isValidFileExtension(files) {\r\n    // Make array of file extensions\r\n    const extensions = (this.fileExt.split(','))\r\n      .map(function (x) {\r\n        return x.toLocaleUpperCase().trim();\r\n      });\r\n\r\n    for (let i = 0; i < files.length; i++) {\r\n      // Get file extension\r\n      const ext = files[i].name.toUpperCase().split('.').pop() || files[i].name;\r\n      // Check the extension exists\r\n      const exists = extensions.includes(ext);\r\n      if (!exists) {\r\n        this.errors.push('Error ,Pdf Extension Only allowed to attach : ' + files[i].name);\r\n        // this.toast.error('Error ,Pdf Extension Only allowed to attach :' + files[i].name, 'Error');\r\n\r\n      }\r\n      // Check file size\r\n      this.isValidFileSize(files[i]);\r\n    }\r\n  }\r\n\r\n  private isValidFileSize(file) {\r\n    const fileSizeinMB = file.size / (1024 * 100);\r\n    const size = Math.round(fileSizeinMB * 100) / 100; // convert upto 2 decimal place\r\n    if (size > this.maxSize) {\r\n      this.errors.push('Error (File Size): ' +\r\n        file.name + ': exceed file size limit of ' +\r\n        this.maxSize + 'MB ( ' + size + 'MB )');\r\n      // this.toast.error('Error (File Size): ' + file.name + ': exceed file size limit of ' + this.maxSize + 'MB ( ' + size + 'MB )');\r\n    }\r\n  }\r\n\r\n  private addForm() {\r\n    this.billOfMaterialForm = this.formBuilder.group({\r\n      IncentiveBoMRequestItemId: new FormControl(),\r\n      IncentiveRequestId: 1,\r\n      ProjectId: this.ProjectId,\r\n      ServiceApplicationId: this.ServiceApplicationId,\r\n      Description: new FormControl(),\r\n      HsCode: new FormControl(),\r\n      Quantity: new FormControl(),\r\n      MesurmentUnit: new FormControl(),\r\n    });\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {SharedModule} from '@custor/modules/shared.module';\r\nimport {BalanceRoutingModule} from './balance-routing.module';\r\nimport {BalanceComponent} from './balance.component';\r\nimport {ServiceConfirmationModule} from '../../project-profile/service-confirmation/ServiceConfirmation.module';\r\nimport {LetterModule} from '../../project-profile/letter/letter.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    BalanceRoutingModule,\r\n    ServiceConfirmationModule,\r\n    LetterModule\r\n  ],\r\n  declarations: [\r\n    BalanceComponent\r\n  ],\r\n  exports: [\r\n    BalanceComponent\r\n  ]\r\n})\r\nexport class BalanceModule {\r\n\r\n}\r\n"],"sourceRoot":""}