{"version":3,"sources":["webpack:///./src/app/components/project-profile/project-employment/employment-routing.module.ts","webpack:///./src/app/components/project-profile/project-employment/employment.module.ts","webpack:///./src/app/components/project-profile/project-employment/project-employment-list/project-employment-list.component.html","webpack:///./src/app/components/project-profile/project-employment/project-employment-list/project-employment-list.component.scss","webpack:///./src/app/components/project-profile/project-employment/project-employment-list/project-employment-list.component.ts","webpack:///./src/app/components/project-profile/project-employment/project-employment.component.css","webpack:///./src/app/components/project-profile/project-employment/project-employment.component.html","webpack:///./src/app/components/project-profile/project-employment/project-employment.component.ts"],"names":[],"mappings":"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","file":"default~components-project-profile-project-employment-employment-module~components-project-profile-p~79bc2546.js","sourcesContent":["import {RouterModule, Routes} from '@angular/router';\r\nimport {ProjectEmploymentListComponent} from './project-employment-list/project-employment-list.component';\r\nimport {NgModule} from '@angular/core';\r\nimport {ProjectEmploymentComponent} from './project-employment.component';\r\n\r\nconst emRoutes: Routes = [\r\n  {path: '', component: ProjectEmploymentListComponent},\r\n  {path: ':id', component: ProjectEmploymentComponent},\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(emRoutes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class EmploymentRoutingModule {\r\n\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {SharedModule} from '@custor/modules/shared.module';\r\nimport {EmploymentRoutingModule} from './employment-routing.module';\r\nimport {ProjectEmploymentListComponent} from './project-employment-list/project-employment-list.component';\r\nimport {ProjectEmploymentComponent} from './project-employment.component';\r\nimport {ProjectEmploymentService} from \"../../../Services/project-employment.service\";\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    EmploymentRoutingModule\r\n  ],\r\n  declarations: [ProjectEmploymentListComponent, ProjectEmploymentComponent],\r\n  exports: [ProjectEmploymentListComponent, ProjectEmploymentComponent],\r\n  providers: [ProjectEmploymentService]\r\n})\r\n\r\nexport class EmploymentModule {\r\n\r\n}\r\n","module.exports = \"<table style=\\\"height: 320px;display: block;overflow: auto;\\\" class=\\\"scrollbar table full-width\\\">\\r\\n  <thead>\\r\\n  <th>No</th>\\r\\n  <th>Permanent Female</th>\\r\\n  <th>Permanent Male</th>\\r\\n  <th>Permanent Foreign Female</th>\\r\\n  <th>Permanent Foreign Male</th>\\r\\n  <th>Temporary Female</th>\\r\\n  <th>Temporary Male</th>\\r\\n  <th>Temporary Foreign Female</th>\\r\\n  <th>Temporary Foreign Male</th>\\r\\n  <th>Remark</th>\\r\\n\\r\\n  </thead>\\r\\n\\r\\n  <tbody style=\\\"overflow: auto;\\\">\\r\\n  <tr class=\\\"planned\\\">\\r\\n    <td></td>\\r\\n    <td>{{plannedEmploymentList?.PermanentFemale}}</td>\\r\\n    <td>{{plannedEmploymentList?.PermanentMale}}</td>\\r\\n    <td>{{plannedEmploymentList?.PermanentForeignFemale}}</td>\\r\\n    <td>{{plannedEmploymentList?.PermanentForeignMale}}</td>\\r\\n    <td>{{plannedEmploymentList?.TemporaryFemale}}</td>\\r\\n    <td>{{plannedEmploymentList?.TemporaryMale}}</td>\\r\\n    <td>{{plannedEmploymentList?.TemporaryForeignFemale}}</td>\\r\\n    <td>{{plannedEmploymentList?.TemporaryForeignMale}}</td>\\r\\n    <td>{{plannedEmploymentList?.Remark}}</td>\\r\\n  </tr>\\r\\n  <tr *ngFor=\\\"let employment of employmentList;let i=index;\\\">\\r\\n    <td>{{i+1}}</td>\\r\\n    <td>{{employment.PermanentFemale}}</td>\\r\\n    <td>{{employment.PermanentMale}}</td>\\r\\n    <td>{{employment.PermanentForeignFemale}}</td>\\r\\n    <td>{{employment.PermanentForeignMale}}</td>\\r\\n    <td>{{employment.TemporaryFemale}}</td>\\r\\n    <td>{{employment.TemporaryMale}}</td>\\r\\n    <td>{{employment.TemporaryForeignFemale}}</td>\\r\\n    <td>{{employment.TemporaryForeignMale}}</td>\\r\\n    <td>{{employment.Remark}}</td>\\r\\n  </tr>\\r\\n  </tbody>\\r\\n</table>\\r\\n\"","module.exports = \".table td {\\n  padding: 4px 7px 4px 5px;\\n  font-size: 13px;\\n  border-top: 1px solid #FAFAFA; }\\n\\n.table th {\\n  padding: 4px 7px 4px 5px;\\n  font-size: 13px;\\n  border-top: 1px solid #FAFAFA; }\\n\\ntable tbody tr:nth-child(2) td {\\n  border: 1px solid #0d8055;\\n  background-color: #0d8055;\\n  color: white;\\n  font-weight: bolder; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9jb21wb25lbnRzL3Byb2plY3QtcHJvZmlsZS9wcm9qZWN0LWVtcGxveW1lbnQvcHJvamVjdC1lbXBsb3ltZW50LWxpc3QvQzpcXFVzZXJzXFxGZXRpaGEgS1xcRGVza3RvcFxcREVWXFxHaXRMYWJcXEludmVzdG1uZXRcXENVU1RPUi5FSUMuQVBJXFxzcmMvYXBwXFxjb21wb25lbnRzXFxwcm9qZWN0LXByb2ZpbGVcXHByb2plY3QtZW1wbG95bWVudFxccHJvamVjdC1lbXBsb3ltZW50LWxpc3RcXHByb2plY3QtZW1wbG95bWVudC1saXN0LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBO0VBQ0Usd0JBQXdCO0VBQ3hCLGVBQWU7RUFDZiw2QkFBNkIsRUFBQTs7QUFHL0I7RUFDRSx3QkFBd0I7RUFDeEIsZUFBZTtFQUNmLDZCQUE2QixFQUFBOztBQUUvQjtFQUVFLHlCQUF5QjtFQUN6Qix5QkFBeUI7RUFDekIsWUFBWTtFQUNaLG1CQUFtQixFQUFBIiwiZmlsZSI6ImFwcC9jb21wb25lbnRzL3Byb2plY3QtcHJvZmlsZS9wcm9qZWN0LWVtcGxveW1lbnQvcHJvamVjdC1lbXBsb3ltZW50LWxpc3QvcHJvamVjdC1lbXBsb3ltZW50LWxpc3QuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuLnRhYmxlIHRke1xyXG4gIHBhZGRpbmc6IDRweCA3cHggNHB4IDVweDtcclxuICBmb250LXNpemU6IDEzcHg7XHJcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNGQUZBRkE7XHJcblxyXG59XHJcbi50YWJsZSB0aCB7XHJcbiAgcGFkZGluZzogNHB4IDdweCA0cHggNXB4O1xyXG4gIGZvbnQtc2l6ZTogMTNweDtcclxuICBib3JkZXItdG9wOiAxcHggc29saWQgI0ZBRkFGQTtcclxufVxyXG50YWJsZSB0Ym9keSB0cjpudGgtY2hpbGQoMikgdGQge1xyXG5cclxuICBib3JkZXI6IDFweCBzb2xpZCAjMGQ4MDU1O1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICMwZDgwNTU7XHJcbiAgY29sb3I6IHdoaXRlO1xyXG4gIGZvbnQtd2VpZ2h0OiBib2xkZXI7XHJcbn1cclxuXHJcbiJdfQ== */\"","import {AfterContentChecked, Component, OnInit} from '@angular/core';\r\nimport {ProjectEmploymentService} from '../../../../Services/project-employment.service';\r\nimport {ProjectEmploymentModel} from '../../../../model/ProjectEmployment.model';\r\nimport {ActivatedRoute} from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-project-employment-list',\r\n  templateUrl: './project-employment-list.component.html',\r\n  styleUrls: ['./project-employment-list.component.scss']\r\n})\r\nexport class ProjectEmploymentListComponent implements OnInit, AfterContentChecked {\r\n  public employmentList: ProjectEmploymentModel[];\r\n  public plannedEmploymentList: ProjectEmploymentModel;\r\n  private ProjectId: any;\r\n\r\n  constructor(public employmentService: ProjectEmploymentService,\r\n              private route: ActivatedRoute) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.ProjectId = this.route.snapshot.params['ProjectId'];\r\n    // console.log(this.ProjectId)\r\n    this.getEmploymentAfterCare();\r\n    this.getPlannedEmployment();\r\n  }\r\n\r\n  getEmploymentAfterCare() {\r\n    this.employmentService.getAllActualEmployment(this.ProjectId)\r\n      .subscribe(result => {\r\n        this.employmentList = result;\r\n      });\r\n  }\r\n\r\n  getPlannedEmployment() {\r\n    this.employmentService.employmentByProject(this.ProjectId)\r\n      .subscribe(result => {\r\n        this.plannedEmploymentList = result;\r\n      });\r\n  }\r\n\r\n  ngAfterContentChecked(): void {\r\n\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvY29tcG9uZW50cy9wcm9qZWN0LXByb2ZpbGUvcHJvamVjdC1lbXBsb3ltZW50L3Byb2plY3QtZW1wbG95bWVudC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<mat-card class=\\\"margin-2\\\">\\r\\n  <mat-card-subtitle class=\\\"sub-title\\\">\\r\\n    Project Employment\\r\\n    <mat-divider></mat-divider>\\r\\n  </mat-card-subtitle>\\r\\n  <form [formGroup]=\\\"employmetForm\\\" novalidate>\\r\\n    <mat-card-content>\\r\\n      <div style=\\\"margin-bottom: 40px;\\\" *ngIf=\\\"ServiceId=='1234'\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\"\\r\\n           fxLayoutGap=\\\"2em\\\">\\r\\n        <div class=\\\"block\\\" fxFlex=\\\"\\\" style=\\\"margin-left: 20px\\\">\\r\\n          <mat-form-field>\\r\\n            <mat-label>Quarter</mat-label>\\r\\n            <mat-select formControlName=\\\"Quarter\\\" required>\\r\\n              <mat-option *ngFor=\\\"let row of Quarter\\\" [value]=\\\"row.Id\\\">\\r\\n                <span>{{row.DescriptionEnglish}}</span>\\r\\n              </mat-option>\\r\\n            </mat-select>\\r\\n          </mat-form-field>\\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"block\\\" fxFlex>\\r\\n          <mat-form-field>\\r\\n            <input placeholder=\\\"Registration Year* :\\\"\\r\\n                   matInput\\r\\n                   formControlName=\\\"RegistrationYear\\\"\\r\\n                   [matDatepicker]=\\\"RegistrationYear\\\">\\r\\n            <mat-datepicker-toggle matSuffix [for]=\\\"RegistrationYear\\\"></mat-datepicker-toggle>\\r\\n            <mat-datepicker #RegistrationYear></mat-datepicker>\\r\\n            <mat-error align=\\\"start\\\" *ngIf=\\\"formErrors.RegistrationYear\\\" class=\\\"form__error\\\">\\r\\n              {{ formErrors.RegistrationYear }}\\r\\n            </mat-error>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n        <!--<div class=\\\"block\\\" fxFlex=\\\"\\\">-->\\r\\n        <!---->\\r\\n        <!--<mat-form-field>-->\\r\\n        <!--<input #OSF type=\\\"number\\\" formControlName=\\\"CapitalRegistrationDatetime\\\" matInput-->\\r\\n        <!--placeholder=\\\"Capital Registration Datetime * :\\\">-->\\r\\n        <!---->\\r\\n        <!--</mat-form-field>-->\\r\\n        <!--</div>-->\\r\\n        <div class=\\\"block\\\" fxFlex=\\\"\\\">\\r\\n\\r\\n          <mat-form-field>\\r\\n            <mat-select [disabled]=\\\"true\\\" formControlName=\\\"ProjectStatus\\\" required>\\r\\n              <option value=\\\"0\\\">--Select--</option>\\r\\n              <label>Project Status</label>\\r\\n              <mat-option *ngFor=\\\"let status of projectStatus\\\" [value]=\\\"status.Id\\\">\\r\\n                <span>{{status.DescriptionEnglish}}</span>\\r\\n              </mat-option>\\r\\n            </mat-select>\\r\\n\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <mat-card-subtitle *ngIf=\\\"ServiceId=='1234'\\\" class=\\\"sub-title\\\">\\r\\n        Detail\\r\\n        <mat-divider></mat-divider>\\r\\n      </mat-card-subtitle>\\r\\n      <span>\\r\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" fxLayoutGap=\\\"2em\\\">\\r\\n\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n          <span class=\\\"padding-10\\\">Permanent</span>\\r\\n          <div class=\\\"block\\\" [fxFlex]=\\\"\\\">\\r\\n            <mat-form-field>\\r\\n              <input name=\\\"PermanentFemale\\\"\\r\\n                     matInput formControlName=\\\"PermanentFemale\\\"\\r\\n                     type=\\\"number\\\"\\r\\n                     #pf\\r\\n                     placeholder=\\\"Female * :\\\">\\r\\n              <mat-error align=\\\"start\\\" *ngIf=\\\"formErrors.PermanentFemale\\\" class=\\\"form__error\\\">{{\\r\\n                formErrors.PermanentFemale }}\\r\\n              </mat-error>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div class=\\\"block\\\" [fxFlex]=\\\"\\\">\\r\\n            <mat-form-field>\\r\\n              <input name=\\\"PermanentMale\\\"\\r\\n                     matInput formControlName=\\\"PermanentMale\\\"\\r\\n                     placeholder=\\\"Male * :\\\"\\r\\n                     #pm\\r\\n                     type=\\\"number\\\">\\r\\n              <mat-error align=\\\"start\\\" *ngIf=\\\"formErrors.PermanentMale\\\" class=\\\"form__error\\\">{{\\r\\n                formErrors.PermanentMale\\r\\n                }}\\r\\n              </mat-error>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div class=\\\"block\\\" fxFlex=\\\"\\\">\\r\\n            <mat-form-field>\\r\\n              <input formControlName=\\\"PermanentForeignFemale\\\"\\r\\n                     type=\\\"number\\\"\\r\\n                     matInput\\r\\n                     #pff\\r\\n                     placeholder=\\\"Foreign Female * :\\\">\\r\\n\\r\\n              <mat-error align=\\\"start\\\" *ngIf=\\\"formErrors.PermanentForeignFemale\\\" class=\\\"form__error\\\">\\r\\n                {{ formErrors.PermanentForeignFemale}}\\r\\n              </mat-error>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div class=\\\"block\\\" [fxFlex]=\\\"\\\">\\r\\n            <mat-form-field>\\r\\n              <input formControlName=\\\"PermanentForeignMale\\\"\\r\\n                     matInput\\r\\n                     type=\\\"number\\\"\\r\\n                     #pfm\\r\\n                     placeholder=\\\"Foreign Male * :\\\">\\r\\n              <mat-error align=\\\"start\\\" *ngIf=\\\"formErrors.PermanentForeignMale\\\" class=\\\"form__error\\\">{{\\r\\n                formErrors.PermanentForeignMale}}\\r\\n              </mat-error>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div class=\\\"block\\\" [fxFlex]=\\\"\\\">\\r\\n            <mat-form-field style=\\\"width: 50px!important;\\\">\\r\\n              <input formControlName=\\\"TotalPermanent\\\"\\r\\n                     value=\\\"{{pf.value*1+pff.value*1+pm.value*1+pfm.value*1}}\\\"\\r\\n                     type=\\\"number\\\"\\r\\n                     #totalPermanent\\r\\n                     matInput placeholder=\\\"Total\\\">\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"start center\\\" fxLayoutGap=\\\"2em\\\">\\r\\n\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n          <div class=\\\"padding-10\\\">Temporary</div>\\r\\n          <div class=\\\"block\\\" fxFlex>\\r\\n            <mat-form-field>\\r\\n              <input name=\\\"TemporaryFemale\\\"\\r\\n                     matInput\\r\\n                     #Tf\\r\\n                     formControlName=\\\"TemporaryFemale\\\"\\r\\n                     placeholder=\\\"Female * :\\\"\\r\\n                     type=\\\"number\\\">\\r\\n              <mat-error align=\\\"start\\\" *ngIf=\\\"formErrors.TemporaryFemale\\\" class=\\\"form__error\\\">{{\\r\\n                formErrors.TemporaryFemale }}\\r\\n              </mat-error>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div class=\\\"block\\\" fxFlex=\\\"\\\">\\r\\n            <mat-form-field>\\r\\n              <input formControlName=\\\"TemporaryMale\\\"\\r\\n                     #TM\\r\\n                     type=\\\"number\\\"\\r\\n                     matInput placeholder=\\\"male * :\\\">\\r\\n              <mat-error align=\\\"start\\\" *ngIf=\\\"formErrors.TemporaryMale\\\" class=\\\"form__error\\\">{{\\r\\n                formErrors.TemporaryMale}}\\r\\n              </mat-error>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div class=\\\"block\\\" fxFlex=\\\"\\\">\\r\\n            <mat-form-field>\\r\\n              <input formControlName=\\\"TemporaryForeignFemale\\\"\\r\\n                     #TFF\\r\\n                     type=\\\"number\\\"\\r\\n                     matInput placeholder=\\\"Foreign Female * :\\\">\\r\\n              <mat-error align=\\\"start\\\"\\r\\n                         *ngIf=\\\"formErrors.TemporaryForeignFemale\\\"\\r\\n                         class=\\\"form__error\\\">{{\\r\\n                formErrors.TemporaryForeignFemale}}\\r\\n              </mat-error>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div class=\\\"block\\\" fxFlex=\\\"\\\">\\r\\n            <mat-form-field>\\r\\n              <input formControlName=\\\"TemporaryForeignMale\\\"\\r\\n                     #TFM\\r\\n                     type=\\\"number\\\"\\r\\n                     matInput placeholder=\\\"Foreign Male * :\\\">\\r\\n              <mat-error align=\\\"start\\\" *ngIf=\\\"formErrors.TemporaryForeignMale\\\"\\r\\n                         class=\\\"form__error\\\">{{\\r\\n                formErrors.TemporaryForeignMale}}\\r\\n              </mat-error>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div class=\\\"block\\\" fxFlex=\\\"\\\">\\r\\n            <mat-form-field style=\\\"width: 50px!important;\\\">\\r\\n              <input formControlName=\\\"TotalTempo\\\"\\r\\n                     type=\\\"number\\\"\\r\\n                     #TotalTempo\\r\\n                     value=\\\"{{Tf.value*1+TM.value*1+TFF.value*1+TFM.value*1}}\\\"\\r\\n                     matInput placeholder=\\\"Total\\\">\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end\\\" fxLayoutGap=\\\"2em\\\">\\r\\n        <div class=\\\"block\\\" fxFlexAlign=\\\"end\\\">\\r\\n          <mat-form-field>\\r\\n            <mat-label>Total Employee</mat-label>\\r\\n            <input matInput\\r\\n                   value=\\\"{{TotalTempo.value*1+totalPermanent.value*1}}\\\"\\r\\n                   formControlName=\\\"totalEmployee\\\"\\r\\n                   type=\\\"number\\\">\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n      </div>\\r\\n      </span>\\r\\n\\r\\n      <span *ngIf=\\\"ServiceId=='1023'\\\">\\r\\n       <mat-card-subtitle>\\r\\n        Current\\r\\n        <mat-divider></mat-divider>\\r\\n        </mat-card-subtitle>\\r\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" fxLayoutGap=\\\"2em\\\">\\r\\n\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n          <span class=\\\"padding-10\\\">Permanent</span>\\r\\n          <div class=\\\"block\\\" fxFlex>\\r\\n            <mat-form-field>\\r\\n              <input name=\\\"PermanentFemale\\\"\\r\\n                     matInput formControlName=\\\"CurrentPermanentFemale\\\"\\r\\n                     type=\\\"number\\\"\\r\\n                     #pf\\r\\n                     placeholder=\\\"Female * :\\\">\\r\\n              <mat-error align=\\\"start\\\" *ngIf=\\\"formErrors.PermanentFemale\\\" class=\\\"form__error\\\">{{\\r\\n                formErrors.PermanentFemale }}\\r\\n              </mat-error>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div class=\\\"block\\\" fxFlex>\\r\\n            <mat-form-field>\\r\\n              <input name=\\\"PermanentMale\\\"\\r\\n                     matInput formControlName=\\\"CurrentPermanentMale\\\"\\r\\n                     placeholder=\\\"Male * :\\\"\\r\\n                     #pm\\r\\n                     type=\\\"number\\\">\\r\\n              <mat-error align=\\\"start\\\" *ngIf=\\\"formErrors.PermanentMale\\\" class=\\\"form__error\\\">{{\\r\\n                formErrors.PermanentMale\\r\\n                }}\\r\\n              </mat-error>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div class=\\\"block\\\" fxFlex=\\\"\\\">\\r\\n            <mat-form-field>\\r\\n              <input formControlName=\\\"CurrentPermanentForeignFemale\\\"\\r\\n                     type=\\\"number\\\"\\r\\n                     matInput\\r\\n                     #pff\\r\\n                     placeholder=\\\"Foreign Female * :\\\">\\r\\n\\r\\n              <mat-error align=\\\"start\\\" *ngIf=\\\"formErrors.PermanentForeignFemale\\\" class=\\\"form__error\\\">\\r\\n                {{ formErrors.PermanentForeignFemale}}\\r\\n              </mat-error>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div class=\\\"block\\\" fxFlex=\\\"\\\">\\r\\n            <mat-form-field>\\r\\n              <input formControlName=\\\"CurrentPermanentForeignMale\\\"\\r\\n                     matInput\\r\\n                     type=\\\"number\\\"\\r\\n                     #pfm\\r\\n                     placeholder=\\\"Foreign Male * :\\\">\\r\\n              <mat-error align=\\\"start\\\" *ngIf=\\\"formErrors.PermanentForeignMale\\\" class=\\\"form__error\\\">{{\\r\\n                formErrors.PermanentForeignMale}}\\r\\n              </mat-error>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div class=\\\"block\\\" fxFlex=\\\"\\\">\\r\\n            <mat-form-field style=\\\"width: 50px!important;\\\">\\r\\n              <input formControlName=\\\"CurrentTotalPermanent\\\"\\r\\n                     value=\\\"{{pf.value*1+pff.value*1+pm.value*1+pfm.value*1}}\\\"\\r\\n                     type=\\\"number\\\"\\r\\n                     #totalPermanent\\r\\n                     matInput placeholder=\\\"Total\\\">\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"start center\\\" fxLayoutGap=\\\"2em\\\">\\r\\n\\r\\n        <div fxLayout=\\\"row wrap\\\">\\r\\n          <div class=\\\"padding-10\\\">Temporary</div>\\r\\n          <div class=\\\"block\\\" fxFlex>\\r\\n            <mat-form-field>\\r\\n              <input name=\\\"TemporaryFemale\\\"\\r\\n                     matInput\\r\\n                     #Tf\\r\\n                     formControlName=\\\"CurrentTemporaryFemale\\\"\\r\\n                     placeholder=\\\"Female * :\\\"\\r\\n                     type=\\\"number\\\">\\r\\n              <mat-error align=\\\"start\\\" *ngIf=\\\"formErrors.TemporaryFemale\\\" class=\\\"form__error\\\">{{\\r\\n                formErrors.TemporaryFemale }}\\r\\n              </mat-error>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div class=\\\"block\\\" fxFlex=\\\"\\\">\\r\\n            <mat-form-field>\\r\\n              <input formControlName=\\\"CurrentTemporaryMale\\\"\\r\\n                     #TM\\r\\n                     type=\\\"number\\\"\\r\\n                     matInput placeholder=\\\"male * :\\\">\\r\\n              <mat-error align=\\\"start\\\" *ngIf=\\\"formErrors.TemporaryMale\\\" class=\\\"form__error\\\">{{\\r\\n                formErrors.TemporaryMale}}\\r\\n              </mat-error>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div class=\\\"block\\\" fxFlex=\\\"\\\">\\r\\n            <mat-form-field>\\r\\n              <input formControlName=\\\"CurrentTemporaryForeignFemale\\\"\\r\\n                     #TFF\\r\\n                     type=\\\"number\\\"\\r\\n                     matInput placeholder=\\\"Foreign Female * :\\\">\\r\\n              <mat-error align=\\\"start\\\"\\r\\n                         *ngIf=\\\"formErrors.TemporaryForeignFemale\\\"\\r\\n                         class=\\\"form__error\\\">{{\\r\\n                formErrors.TemporaryForeignFemale}}\\r\\n              </mat-error>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div class=\\\"block\\\" fxFlex=\\\"\\\">\\r\\n            <mat-form-field>\\r\\n              <input formControlName=\\\"CurrentTemporaryForeignMale\\\"\\r\\n                     #TFM\\r\\n                     type=\\\"number\\\"\\r\\n                     matInput placeholder=\\\"Foreign Male * :\\\">\\r\\n              <mat-error align=\\\"start\\\" *ngIf=\\\"formErrors.TemporaryForeignMale\\\"\\r\\n                         class=\\\"form__error\\\">{{\\r\\n                formErrors.TemporaryForeignMale}}\\r\\n              </mat-error>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div class=\\\"block\\\" fxFlex=\\\"\\\">\\r\\n            <mat-form-field style=\\\"width: 50px!important;\\\">\\r\\n              <input formControlName=\\\"CurrentTotalTempo\\\"\\r\\n                     type=\\\"number\\\"\\r\\n                     #TotalTempo\\r\\n                     value=\\\"{{Tf.value*1+TM.value*1+TFF.value*1+TFM.value*1}}\\\"\\r\\n                     matInput placeholder=\\\"Total\\\">\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end\\\" fxLayoutGap=\\\"2em\\\">\\r\\n        <div class=\\\"block\\\" fxFlexAlign=\\\"end\\\">\\r\\n          <mat-form-field>\\r\\n            <mat-label>Total Employee</mat-label>\\r\\n            <input matInput\\r\\n                   value=\\\"{{TotalTempo.value*1+totalPermanent.value*1}}\\\"\\r\\n                   formControlName=\\\"CurrenttotalEmployee\\\"\\r\\n                   type=\\\"number\\\">\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n      </div>\\r\\n      </span>\\r\\n\\r\\n    </mat-card-content>\\r\\n    <mat-divider></mat-divider>\\r\\n    <div fxLayoutGap=\\\"3em\\\" align=\\\"center\\\">\\r\\n      <div style=\\\"padding: 20px\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\" fxLayoutGap=\\\"2em\\\">\\r\\n\\r\\n        <div fxFlex=\\\"15\\\">\\r\\n\\r\\n          <!--<button class=\\\"custom-button\\\" (click)=\\\"next()\\\" color=\\\"warn\\\" type=\\\"button\\\">-->\\r\\n          <!--Back-->\\r\\n          <!--</button>-->\\r\\n        </div>\\r\\n        <div style=\\\"text-align: center\\\" fxFlex=\\\"67\\\" fxFlexAlign=\\\"center\\\">\\r\\n          <button [disabled]=\\\"!employmetForm.valid\\\"\\r\\n                  mat-raised-button=\\\"\\\"\\r\\n                  color=\\\"primary\\\"\\r\\n                  mat-button (click)=\\\"onSubmit()\\\">\\r\\n            <mat-icon class=\\\"mat-18\\\">done</mat-icon>\\r\\n            <span class=\\\"agree\\\">{{editMode ? 'update' : 'Save'}}</span>\\r\\n          </button>\\r\\n          <!--<button style=\\\"margin-left: 10px\\\" mat-raised-button=\\\"\\\" color=\\\"warn\\\" (click)=\\\"onClear()\\\" type=\\\"button\\\">-->\\r\\n          <!--<mat-icon class=\\\"mat-18\\\">clear_all</mat-icon>-->\\r\\n          <!--</button>-->\\r\\n        </div>\\r\\n        <div fxFlex=\\\"15\\\">\\r\\n\\r\\n          <!--<button class=\\\"custom-button\\\" (click)=\\\"next()\\\" color=\\\"warn\\\" type=\\\"button\\\">-->\\r\\n          <!--Next-->\\r\\n          <!--</button>-->\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n  </form>\\r\\n</mat-card>\\r\\n<button class=\\\"custom-button\\\" (click)=\\\"back()\\\" color=\\\"warn\\\" type=\\\"button\\\">\\r\\n  back\\r\\n</button>\\r\\n\"","import {AfterContentChecked, Component, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {ProjectEmploymentModel} from '../../../model/ProjectEmployment.model';\r\nimport {ProjectEmploymentService} from '../../../Services/project-employment.service';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {Subscription} from 'rxjs';\r\nimport {DataSharingService} from '../../../Services/data-sharing.service';\r\nimport {MatSnackBar} from '@angular/material';\r\nimport {FormService} from '@custor/validation/custom/form';\r\nimport {ErrorMessage} from '@custor/services/errMessageService';\r\nimport {ActivatedRoute, Params} from '@angular/router';\r\nimport {ProjectProfileService} from '../../../Services/project-profile.service';\r\nimport {ProjectStatusModel, QuarterModel} from '../../../model/lookupData';\r\nimport {ProjectStatus, Quarter} from '@custor/const/consts';\r\n\r\n@Component({\r\n  selector: 'app-project-employment',\r\n  templateUrl: './project-employment.component.html',\r\n  styleUrls: ['./project-employment.component.css']\r\n})\r\nexport class ProjectEmploymentComponent implements OnInit, AfterContentChecked {\r\n  employmetForm: FormGroup;\r\n  employmentData: ProjectEmploymentModel;\r\n  editMode = false;\r\n  loading = false;\r\n\r\n  subscription: Subscription;\r\n  empId: any;\r\n  public formErrors = {\r\n    PermanentFemale: 'Must be positive number!',\r\n    PermanentMale: 'Must be positive number!',\r\n    TemporaryFemale: 'Must be positive number!',\r\n    TemporaryMale: 'Must be positive number!',\r\n    PermanentForeignFemale: 'Must be positive number!',\r\n    PermanentForeignMale: 'Must be positive number!',\r\n    TemporaryForeignFemale: 'Must be positive number!',\r\n    TemporaryForeignMale: 'Must be positive number!',\r\n    Quarter: '',\r\n    RegistrationYear: '',\r\n  };\r\n  public ServiceId: string;\r\n  public projectStatus: ProjectStatusModel[] = [];\r\n  public Quarter: QuarterModel[] = [];\r\n  private InvestorId: any;\r\n  private workFlowId: any;\r\n  private ServiceApplicationId: any;\r\n  private projectId: any;\r\n\r\n  constructor(private formBuilder: FormBuilder,\r\n              public formService: FormService,\r\n              private errMsg: ErrorMessage,\r\n              public route: ActivatedRoute,\r\n              public projectProfileService: ProjectProfileService,\r\n              private snackbar: MatSnackBar,\r\n              private dataSharingService: DataSharingService,\r\n              private toastr: ToastrService,\r\n              private dataSharing: DataSharingService,\r\n              private employmentService: ProjectEmploymentService) {\r\n    this.employmentData = <ProjectEmploymentModel>{};\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.ServiceId = this.route.snapshot.params['ServiceId'];\r\n    this.InvestorId = this.route.snapshot.params['InvestorId'];\r\n    this.workFlowId = this.route.snapshot.params['workFlowId'];\r\n    this.ServiceApplicationId = this.route.snapshot.params['ServiceApplicationId'];\r\n    this.projectId = this.route.snapshot.params['ProjectId'];\r\n\r\n\r\n    if (this.ServiceId === '1234') {\r\n      this.getProjectStatus(this.projectId);\r\n    }\r\n    this.initStaticData('en');\r\n    if (this.projectId > 1) {\r\n      this.getEmployment();\r\n    }\r\n\r\n    this.formBuild();\r\n  }\r\n\r\n  getEmployment() {\r\n    this.employmentService.employmentByProject(this.projectId).subscribe(result => {\r\n      if (typeof (result) !== 'undefined') {\r\n        this.editMode = true;\r\n        this.empId = result.ProjectEmploymentId;\r\n        this.employmetForm.patchValue(result);\r\n      }\r\n    }, error => this.errMsg.getError(error));\r\n  }\r\n\r\n  onSubmit() {\r\n    this.formService.markFormGroupTouched(this.employmetForm);\r\n    if (this.employmetForm.valid) {\r\n      if (!this.editMode) {\r\n        this.employmentService.create(this.employmetForm.value)\r\n          .subscribe(result => {\r\n            setTimeout(() => this.dataSharing.steeperIndex.next(6), 0);\r\n            setTimeout(() => this.dataSharing.currentIndex.next(6), 0);\r\n            this.notification('saved');\r\n          }, error => this.toastr.error(this.errMsg.getError(error)));\r\n      } else {\r\n        this.employmentService.update(this.employmetForm.value, this.empId)\r\n          .subscribe(result => {\r\n            this.notification('updated');\r\n            setTimeout(() => this.dataSharing.steeperIndex.next(6), 0);\r\n            setTimeout(() => this.dataSharing.currentIndex.next(6), 0);\r\n          }, error => this.toastr.error(this.errMsg.getError(error)));\r\n      }\r\n    } else {\r\n      this.formErrors = this.formService.validateForm(this.employmetForm, this.formErrors, false);\r\n    }\r\n  }\r\n\r\n  formBuild() {\r\n    this.employmetForm = this.formBuilder.group({\r\n      ProjectId: [this.projectId],\r\n      workFlowId: [this.workFlowId],\r\n      PermanentFemale: [0, [Validators.required, Validators.min(0)]],\r\n      PermanentMale: [0, [Validators.required, Validators.min(0)]],\r\n      TemporaryFemale: [0, [Validators.required, Validators.min(0)]],\r\n      TemporaryMale: [0, [Validators.required, Validators.min(0)]],\r\n      PermanentForeignFemale: [0, [Validators.required, Validators.min(0)]],\r\n      PermanentForeignMale: [0, [Validators.required, Validators.min(0)]],\r\n      TemporaryForeignFemale: [0, [Validators.required, Validators.min(0)]],\r\n      TemporaryForeignMale: [0, [Validators.required, Validators.min(0)]],\r\n      TotalPermanent: [{value: '', disabled: true}],\r\n      TotalTempo: [{value: '', disabled: true}],\r\n\r\n      CurrentPermanentFemale: [0, [Validators.required, Validators.min(0)]],\r\n      CurrentPermanentMale: [0, [Validators.required, Validators.min(0)]],\r\n      CurrentTemporaryFemale: [0, [Validators.required, Validators.min(0)]],\r\n      CurrentTemporaryMale: [0, [Validators.required, Validators.min(0)]],\r\n      CurrentPermanentForeignFemale: [0, [Validators.required, Validators.min(0)]],\r\n      CurrentPermanentForeignMale: [0, [Validators.required, Validators.min(0)]],\r\n      CurrentTemporaryForeignFemale: [0, [Validators.required, Validators.min(0)]],\r\n      CurrentTemporaryForeignMale: [0, [Validators.required, Validators.min(0)]],\r\n      CurrentTotalPermanent: [{value: '', disabled: true}],\r\n      CurrentTotalTempo: [{value: '', disabled: true}],\r\n\r\n      Remark: [''],\r\n      Quarter: [''],\r\n      RegistrationYear: [''],\r\n      ProjectStatus: [''],\r\n      totalEmployee: [{value: '', disabled: true}]\r\n    });\r\n\r\n    this.employmetForm.valueChanges.subscribe((data) => {\r\n      this.formErrors = this.formService.validateForm(this.employmetForm, this.formErrors, true);\r\n    });\r\n  }\r\n\r\n  notification(message: string) {\r\n    this.toastr.success(` Succesfully ${message} Data.!`, 'Success');\r\n\r\n    this.loading = false;\r\n    this.snackbar.open(` Succesfully ${message} Data.!`, 'Close', {\r\n      duration: 3000,\r\n    });\r\n  }\r\n\r\n  onClear() {\r\n    this.employmetForm.reset();\r\n  }\r\n\r\n  ngAfterContentChecked(): void {\r\n    // this.employmetForm.patchValue({\r\n    //   ProjectId: localStorage.getItem('ProjectId'),\r\n    //   workFlowId: localStorage.getItem('workFlowId')\r\n    // });\r\n  }\r\n\r\n  next() {\r\n    this.dataSharing.steeperIndex.next(5);\r\n\r\n  }\r\n\r\n  back() {\r\n    window.history.back();\r\n  }\r\n\r\n  initStaticData(currentLang) {\r\n\r\n    let projectStatus1: ProjectStatusModel = new ProjectStatusModel();\r\n    ProjectStatus.forEach(pair => {\r\n      projectStatus1 = {\r\n        'Id': pair.Id.toString(),\r\n        'DescriptionEnglish': pair.DescriptionEnglish,\r\n        'Description': pair.Description\r\n      };\r\n      this.projectStatus.push(projectStatus1);\r\n    });\r\n\r\n    let Quarter1: QuarterModel = new QuarterModel();\r\n    Quarter.forEach(pair => {\r\n      Quarter1 = {\r\n        'Id': pair.Id.toString(),\r\n        'DescriptionEnglish': pair.DescriptionEnglish,\r\n        'Description': pair.Description\r\n      };\r\n      this.Quarter.push(Quarter1);\r\n    });\r\n\r\n  }\r\n\r\n\r\n  private getProjectStatus(projectId: any) {\r\n    this.projectProfileService.getProjectStatus(projectId)\r\n      .subscribe(result => {\r\n        this.employmetForm.patchValue({\r\n          ProjectStatus: result.toString()\r\n        });\r\n      });\r\n  }\r\n}\r\n"],"sourceRoot":""}