{"version":3,"sources":["webpack:///./src/app/Services/Catagory/Catagory.service.ts","webpack:///./src/app/Services/Registration/RegistrationCatagory.service.ts","webpack:///./src/app/components/investor/investor-editor.component.html","webpack:///./src/app/components/investor/investor-editor.component.scss","webpack:///./src/app/components/investor/investor-editor.component.ts","webpack:///./src/app/components/investor/investor-list.component.html","webpack:///./src/app/components/investor/investor-list.component.scss","webpack:///./src/app/components/investor/investor-list.component.ts","webpack:///./src/app/components/investor/investor-routing.module.ts","webpack:///./src/app/components/investor/investor.module.ts","webpack:///./src/app/components/investor/investor/investor.component.html","webpack:///./src/app/components/investor/investor/investor.component.scss","webpack:///./src/app/components/investor/investor/investor.component.ts","webpack:///./src/app/model/EnumModel.ts"],"names":[],"mappings":"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","file":"app-components-business-business-tab-business-tab-module~app-components-investor-investor-module~app~b217e1a0.js","sourcesContent":["import {catchError, map} from 'rxjs/operators';\r\nimport {Injectable} from '@angular/core';\r\nimport {Observable} from 'rxjs';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {ErrorMessage} from '@custor/services/errMessageService';\r\nimport {AppConfiguration} from '../../config/appconfig';\r\nimport {BussinessModel} from '../../model/bussiness/BussinessModel.model';\r\nimport {BussinessCatagory} from '../../model/bussiness/BussinessCatagory.model';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class CatagoryService  {\r\n   constructor(private httpClient: HttpClient,\r\n              private config: AppConfiguration,\r\n              private errMsg: ErrorMessage) {\r\n  }\r\n  public  bussinessdata: BussinessModel;\r\n   public  bussinesslicenceData: BussinessCatagory;\r\n  getMajorDivisionByTin(Tin: string) {\r\n    return this.httpClient.get(this.config.urls.url('MajorDivisions', Tin)).pipe(\r\n      map(result => {\r\n        return result;\r\n      }), catchError(this.errMsg.parseObservableResponseError));\r\n  }\r\n\r\n  getMajorDivision() {\r\n    return this.httpClient.get(this.config.urls.url('MajorDivisions')).pipe(\r\n      map(result => {\r\n        return result;\r\n      }), catchError(this.errMsg.parseObservableResponseError));\r\n  }\r\n\r\n  getDivision() {\r\n    return this.httpClient.get(this.config.urls.url('Divisions')).pipe(\r\n      map(result => {\r\n        return result;\r\n      }), catchError(this.errMsg.parseObservableResponseError));\r\n  }\r\n\r\n  getMajorGroup() {\r\n    return this.httpClient.get(this.config.urls.url('MajorGroup')).pipe(\r\n      map(result => {\r\n        return result;\r\n      }), catchError(this.errMsg.parseObservableResponseError));\r\n  }\r\n\r\n  getGroup() {\r\n    return this.httpClient.get(this.config.urls.url('Groups')).pipe(\r\n      map(result => {\r\n        return result;\r\n      }), catchError(this.errMsg.parseObservableResponseError));\r\n  }\r\n\r\n  getsubGroup() {\r\n    return this.httpClient.get(this.config.urls.url('SubGroups')).pipe(\r\n      map(result => {\r\n        return result;\r\n      }), catchError(this.errMsg.parseObservableResponseError));\r\n  }\r\n\r\n  saveBussiness(bussiness: BussinessModel): Observable<BussinessModel> {\r\n    return this.httpClient.post<BussinessModel>(this.config.urls.url('Bussiness'), bussiness).pipe(\r\n      map(bussinessdata => this.bussinessdata = bussinessdata),\r\n      catchError(this.errMsg.parseObservableResponseError)\r\n    );\r\n  }\r\n\r\n  saveBussinessLicense(bussinessLicense: BussinessCatagory): Observable<BussinessCatagory> {\r\n    return this.httpClient.post<BussinessCatagory>(this.config.urls.url('SaveBussinessLicense'), bussinessLicense).pipe(\r\n      map(bussinesslicenceData => this.bussinesslicenceData = bussinesslicenceData),\r\n      catchError(this.errMsg.parseObservableResponseError)\r\n    );\r\n  }\r\n\r\n  getRegistration() {\r\n    return this.httpClient.get(this.config.urls.url('Registrations')).pipe(\r\n      map(result => {\r\n        return result;\r\n      }), catchError(this.errMsg.parseObservableResponseError));\r\n  }\r\n  getRegistrationByTin(Tin: string) {\r\n    return this.httpClient.get(this.config.urls.url('GetRegistration', Tin)).pipe(\r\n      map(result => {\r\n        return result;\r\n      }), catchError(this.errMsg.parseObservableResponseError));\r\n  }\r\n}\r\n","import {Injectable, Injector} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {catchError, map} from 'rxjs/operators';\r\nimport {AppConfiguration} from '../../config/appconfig';\r\nimport {BaseService} from '../Base.service';\r\nimport {ErrorMessage} from '@custor/services/errMessageService';\r\nimport {RegistrationCatagory} from '../../model/Registration/RegistrationCatagory';\r\nimport {LookupsModel} from '../../model/lookups';\r\nimport {AddressModel} from '../../model/address/Address.model';\r\nimport {MajorDivision} from '../../model/catagory/MajorDivision.model';\r\nimport {RegistrationModel} from '../../model/Registration/RegistrationModel';\r\n\r\n;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RegistrationCatagoryService extends BaseService<RegistrationCatagory> {\r\n\r\n  constructor(\r\n    protected http: HttpClient,\r\n    protected appConfig: AppConfiguration,\r\n    protected  errMsg: ErrorMessage) {\r\n    super(http, appConfig.urls.url('registrationCatagory'), errMsg);\r\n  }\r\n\r\n\r\n  getRegistrationCatagoriesByInvestorId(InvestorId): Observable<RegistrationCatagory[]> {\r\n    return this.httpClient.get<RegistrationCatagory[]>(this.appConfig.urls.url('GetRegistrationCatagoryByInvestorId', InvestorId)).pipe(\r\n      map(result => {\r\n        return result;\r\n      }),\r\n      catchError(this.errMsg.parseObservableResponseError));\r\n  }\r\n\r\n  getRegistrationCatagoriesByTin(Tin): Observable<RegistrationCatagory[]> {\r\n    return this.httpClient.get<RegistrationCatagory[]>(this.appConfig.urls.url('GetRegistrationCatagoryByTin', Tin)).pipe(\r\n      map(result => {\r\n        return result;\r\n      }),\r\n      catchError(this.errMsg.parseObservableResponseError));\r\n  }\r\n\r\n  /*saveRegistrationCatagory(registrationCatagory: RegistrationCatagory): Observable<RegistrationCatagory> {\r\n    return this.httpClient.post<RegistrationModel>(this.config.urls.url('SaveRegistration'), registrationInfo).pipe(\r\n      map(Reg => {\r\n        // console.log(this.registrationMoedl);\r\n        this.registrationMoedl = registrationInfo;\r\n        return this.registrationMoedl;\r\n      }),\r\n      catchError(this.errMsg.parseObservableResponseError));\r\n  }*/\r\n\r\n  saveRegistrationCatagory(registrationCatagory: RegistrationCatagory): Observable<RegistrationCatagory> {\r\n      return this.httpClient.post(this.appConfig.urls.url('SaveRegistrationCatagory'), registrationCatagory).pipe(\r\n        catchError(this.errMsg.parseObservableResponseError));\r\n    }\r\n\r\n}\r\n","module.exports = \"<app-page-header title=\\\"Investor\\\" icon=\\\"person\\\"></app-page-header>\\r\\n<div [@fadeInOut] class=\\\"page-content margin-2 mat-elevation-z8\\\">\\r\\n  <mat-progress-bar *ngIf=\\\"loadingIndicator\\\" mode=\\\"query\\\"></mat-progress-bar>\\r\\n  <form #form=\\\"ngForm\\\" [formGroup]=\\\"investorForm\\\" novalidate (ngSubmit)=\\\"onSubmit()\\\"\\r\\n        fxLayout=\\\"column\\\"\\r\\n        autocomplete=\\\"off\\\">\\r\\n    <div class=\\\"error-bar\\\" style=\\\"width:100%; \\\" *ngIf=\\\"errors.length > 0\\\">\\r\\n      <ul>\\r\\n        <li *ngFor=\\\"let error of errors\\\">\\r\\n          {{ error }}\\r\\n        </li>\\r\\n      </ul>\\r\\n    </div>\\r\\n    <div fxLayout=\\\"row\\\" style=\\\"margin:20px 0px\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"2em\\\" class=\\\"row\\\">\\r\\n      <div [fxFlex]=\\\"128\\\">\\r\\n        <mat-checkbox formControlName=\\\"IsExistingCustomer\\\" color=\\\"primary\\\">\\r\\n          <strong>I am existing customer?</strong>\\r\\n        </mat-checkbox>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div style=\\\"margin-top: 10px\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"2em\\\" class=\\\"row\\\">\\r\\n      <mat-form-field fxLayoutGap=\\\"4em\\\" [fxFlex]=\\\"30\\\">\\r\\n        <mat-label>{{'investors.editor.LegalStatus' | translate}}</mat-label>\\r\\n        <mat-select formControlName=\\\"cLegalStatus\\\" [compareWith]=\\\"compareIds\\\"\\r\\n                    (selectionChange)=\\\"statusChanged($event.value)\\\" required>\\r\\n          <mat-option *ngFor=\\\"let lstatus of legalStatuses\\\" [value]=\\\"lstatus.Id\\\">\\r\\n            <span>{{lstatus.Desc}}</span>\\r\\n          </mat-option>\\r\\n        </mat-select>\\r\\n        <mat-error *ngIf=\\\"legalStatus.hasError('required')\\\">\\r\\n          {{'common.validation.Required' | translate}}\\r\\n        </mat-error>\\r\\n      </mat-form-field>\\r\\n      <!-- <div  > -->\\r\\n      <mat-form-field fxLayoutGap=\\\"4em\\\" [fxFlex]=\\\"30\\\">\\r\\n        <mat-label>{{'investors.editor.FormOfOwnership' | translate}}</mat-label>\\r\\n        <mat-select (selectionChange)=\\\"onFormOfOwnershipChanged($event.value)\\\"\\r\\n                    formControlName=\\\"FormOfOwnership\\\" required>\\r\\n          <!-- <mat-option value=\\\"0\\\">--</mat-option> -->\\r\\n          <mat-option *ngFor=\\\"let item of formOfOwnershipList;\\\" [value]=\\\"item.Id\\\">\\r\\n            {{item.Desc}}\\r\\n          </mat-option>\\r\\n        </mat-select>\\r\\n        <mat-error *ngIf=\\\"FormOfOwnershipV.hasError('required')\\\">\\r\\n          {{'common.validation.Required' | translate}}\\r\\n        </mat-error>\\r\\n\\r\\n      </mat-form-field>\\r\\n      <!-- </div> -->\\r\\n      <!-- <span  *ngIf=\\\"branch\\\"> -->\\r\\n      <!-- <div *ngIf=\\\"branch\\\"> -->\\r\\n      <mat-form-field fxLayoutGap=\\\"4em\\\" [fxFlex]=\\\"30\\\" *ngIf=\\\"branch\\\">\\r\\n        <mat-label>{{'investors.editor.NationalityCompany' | translate}}</mat-label>\\r\\n        <mat-select formControlName=\\\"cNationalityCompany\\\" [compareWith]=\\\"compareIds\\\">\\r\\n          <mat-option value=\\\"0\\\">--</mat-option>\\r\\n          <mat-option *ngFor=\\\"let country of countryListWithOutEthipia\\\" [value]=\\\"country.LookupId\\\">\\r\\n            <span>{{country.English}}</span>\\r\\n          </mat-option>\\r\\n        </mat-select>\\r\\n        <mat-error *ngIf=\\\"nationalityCompany.hasError('required')\\\">\\r\\n          {{'common.validation.Required' | translate}}\\r\\n        </mat-error>\\r\\n      </mat-form-field>\\r\\n      <!-- </div> -->\\r\\n\\r\\n    </div>\\r\\n    <h4>{{'investors.editor.InvestorProfileCaption' | translate}}</h4>\\r\\n    <mat-divider></mat-divider>\\r\\n    <div id=\\\"divSole\\\" *ngIf=\\\"!isCompany\\\">\\r\\n      <div fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"2em\\\" class=\\\"row\\\">\\r\\n        <mat-form-field fxFlex>\\r\\n          <mat-label>{{'investors.editor.FirstNameEng' | translate}}</mat-label>\\r\\n          <input matInput formControlName=\\\"cFirstNameEng\\\" required/>\\r\\n          <mat-error *ngIf=\\\"firstNameEng.hasError('required')\\\">\\r\\n            {{'common.validation.Required' | translate}}\\r\\n          </mat-error>\\r\\n          <mat-error *ngIf=\\\"firstNameEng.hasError('minlength')\\\">\\r\\n            {{'common.validation.MinLengthChar' | translate: {'min':'2'} }}\\r\\n          </mat-error>\\r\\n          <mat-error *ngIf=\\\"!firstNameEng.hasError('required') && !firstNameEng.hasError('minlength')\\r\\n                            && firstNameEng.hasError('pattern')\\\">\\r\\n            {{'common.validation.UseLatinOnly' | translate}}\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n        <mat-form-field fxFlex>\\r\\n          <mat-label>{{'investors.editor.FatherNameEng' | translate}}</mat-label>\\r\\n          <input matInput formControlName=\\\"cFatherNameEng\\\" required/>\\r\\n          <mat-error *ngIf=\\\"fatherNameEng.hasError('required')\\\">\\r\\n            {{'common.validation.Required' | translate}}\\r\\n          </mat-error>\\r\\n          <mat-error *ngIf=\\\"!fatherNameEng.hasError('required') && fatherNameEng.hasError('minlength')\\\">\\r\\n            {{'common.validation.MinLengthChar' | translate: {'min':'2'} }}\\r\\n          </mat-error>\\r\\n          <mat-error *ngIf=\\\"!fatherNameEng.hasError('required') && !fatherNameEng.hasError('minlength')\\r\\n                                && firstNameEng.hasError('pattern')\\\">\\r\\n            {{'common.validation.UseLatinOnly' | translate}}\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n        <mat-form-field fxFlex>\\r\\n          <mat-label>{{'investors.editor.GrandNameEng' | translate}}</mat-label>\\r\\n          <input matInput formControlName=\\\"cGrandNameEng\\\" required/>\\r\\n          <mat-error *ngIf=\\\"grandNameEng.hasError('required')\\\">\\r\\n            {{'common.validation.Required' | translate}}\\r\\n          </mat-error>\\r\\n          <mat-error *ngIf=\\\"!grandNameEng.hasError('required') && grandNameEng.hasError('minlength')\\\">\\r\\n            {{'common.validation.MinLengthChar' | translate: {'min':'2'} }}\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n        <mat-error *ngIf=\\\"!grandNameEng.hasError('required') && !grandNameEng.hasError('minlength')\\r\\n                            && grandNameEng.hasError('pattern')\\\">\\r\\n          {{'common.validation.UseLatinOnly' | translate}}\\r\\n        </mat-error>\\r\\n\\r\\n        <mat-form-field fxFlex>\\r\\n          <mat-label>{{'investors.editor.FirstName' | translate}}</mat-label>\\r\\n          <input matInput formControlName=\\\"cFirstName\\\"/>\\r\\n          <mat-error *ngIf=\\\"firstName.hasError('required')\\\">\\r\\n            {{'common.validation.Required' | translate}}\\r\\n          </mat-error>\\r\\n          <mat-error *ngIf=\\\"!firstName.hasError('required') && firstName.hasError('minlength')\\\">\\r\\n            {{'common.validation.MinLengthChar' | translate: {'min':'2'} }}\\r\\n          </mat-error>\\r\\n          <mat-error *ngIf=\\\"!firstName.hasError('required') && !firstName.hasError('minlength')\\r\\n                            && firstName.hasError('pattern')\\\">\\r\\n            {{'common.validation.UseEthiopicOnly' | translate}}\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field fxFlex>\\r\\n          <mat-label>{{'investors.editor.FatherName' | translate}}</mat-label>\\r\\n          <input matInput formControlName=\\\"cFatherName\\\"/>\\r\\n          <mat-error *ngIf=\\\"fatherName.hasError('required')\\\">\\r\\n            {{'common.validation.Required' | translate}}\\r\\n          </mat-error>\\r\\n          <mat-error *ngIf=\\\"!fatherName.hasError('required') && fatherName.hasError('minlength')\\\">\\r\\n            {{'common.validation.MinLengthChar' | translate: {'min':'2'} }}\\r\\n          </mat-error>\\r\\n          <mat-error *ngIf=\\\"!fatherName.hasError('required') && !fatherName.hasError('minlength')\\r\\n                                && fatherName.hasError('pattern')\\\">\\r\\n            {{'common.validation.UseEthiopicOnly' | translate}}\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field fxFlex>\\r\\n          <mat-label>{{'investors.editor.GrandName' | translate}}</mat-label>\\r\\n          <input matInput formControlName=\\\"cGrandName\\\"/>\\r\\n          <mat-error *ngIf=\\\"grandName.hasError('required')\\\">\\r\\n            {{'common.validation.Required' | translate }}\\r\\n          </mat-error>\\r\\n          <mat-error *ngIf=\\\"!grandName.hasError('required') && grandName.hasError('minlength')\\\">\\r\\n            {{'common.validation.MinLengthChar' | translate: {'min':'2'} }}\\r\\n          </mat-error>\\r\\n          <mat-error *ngIf=\\\"!grandName.hasError('required') && !grandName.hasError('minlength')\\r\\n                            && grandName.hasError('pattern')\\\">\\r\\n            {{'common.validation.UseEthiopicOnly' | translate}}\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n      <div fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"2em\\\" class=\\\"row\\\">\\r\\n        <mat-form-field fxLayoutGap=\\\"4em\\\" class=\\\"col4\\\">\\r\\n          <mat-label>{{'investors.editor.Title' | translate}}</mat-label>\\r\\n          <mat-select formControlName=\\\"Title\\\">\\r\\n            <mat-option *ngFor=\\\"let title of TitleLookup\\\" [value]=\\\"title.LookupId\\\">\\r\\n              {{title.English}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field fxLayoutGap=\\\"4em\\\" class=\\\"col4\\\">\\r\\n          <mat-label>{{'investors.editor.Gender' | translate}}</mat-label>\\r\\n          <mat-select formControlName=\\\"cGender\\\" required>\\r\\n            <mat-option *ngFor=\\\"let gender of genders\\\" [value]=\\\"gender.Id\\\">\\r\\n              {{gender.Desc}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n          <mat-error *ngIf=\\\"gender.hasError('required')\\\">\\r\\n            {{'common.validation.Required' | translate}}\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n        <mat-form-field fxLayoutGap=\\\"4em\\\">\\r\\n          <mat-label>{{'investors.editor.Nationality' | translate}}</mat-label>\\r\\n          <mat-select #contry (selectionChange)=\\\"checkCountry($event.value)\\\"\\r\\n                      formControlName=\\\"cNationality\\\" [compareWith]=\\\"compareIds\\\">\\r\\n            <mat-option *ngFor=\\\"let country of nationList\\\" [value]=\\\"country.id\\\">\\r\\n              <span>{{country.descriptionEnglish}}</span>\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n          <mat-error *ngIf=\\\"nationality.hasError('required')\\\">\\r\\n            {{'common.validation.Required' | translate}}\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n        <!--<div class=\\\"container\\\" fxLayoutGap=\\\"4em\\\">-->\\r\\n        <!--<mat-checkbox formControlName=\\\"cIsDiaspora\\\">{{'investors.editor.IsDiaspora' | translate}}</mat-checkbox>-->\\r\\n        <!--</div>-->\\r\\n        <div class=\\\"container\\\" fxLayoutGap=\\\"4em\\\" *ngIf=\\\"contry.value*1!==19\\\">\\r\\n          <mat-checkbox formControlName=\\\"cIsEthiopianOrigin\\\">{{'investors.editor.IsEthiopianOrigin' | translate}}\\r\\n          </mat-checkbox>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div id=\\\"divCompany\\\" *ngIf=\\\"isCompany\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"2em\\\" class=\\\"row\\\">\\r\\n      <mat-form-field [fxFlex]=\\\"32\\\">\\r\\n        <mat-label>{{'investors.editor.CompanyNameEng' | translate}}</mat-label>\\r\\n        <input matInput formControlName=\\\"cCompanyNameEng\\\" required/>\\r\\n        <mat-error *ngIf=\\\"companyNameEng.hasError('required')\\\">\\r\\n          {{'common.validation.Required' | translate}}\\r\\n        </mat-error>\\r\\n        <mat-error *ngIf=\\\"!companyNameEng.hasError('required') && companyNameEng.hasError('minlength')\\\">\\r\\n          Name should be at least 2 characters long\\r\\n        </mat-error>\\r\\n        <mat-error *ngIf=\\\"!companyNameEng.hasError('required') && !companyNameEng.hasError('minlength')\\\">\\r\\n          {{'common.validation.MinLengthChar' | translate: {'min':'2'} }}\\r\\n        </mat-error>\\r\\n        <mat-error *ngIf=\\\"!companyNameEng.hasError('required') && !companyNameEng.hasError('minlength')\\r\\n                            && companyNameEng.hasError('pattern')\\\">\\r\\n          {{'common.validation.UseLatinOnly' | translate}}\\r\\n        </mat-error>\\r\\n      </mat-form-field>\\r\\n      <mat-form-field [fxFlex]=\\\"32\\\">\\r\\n        <mat-label>{{'investors.editor.CompanyName' | translate}}</mat-label>\\r\\n        <input matInput formControlName=\\\"cCompanyName\\\"/>\\r\\n        <mat-error *ngIf=\\\"companyName.hasError('required')\\\">\\r\\n          {{'common.validation.Required' | translate}}\\r\\n        </mat-error>\\r\\n        <mat-error *ngIf=\\\"!companyName.hasError('required') && companyName.hasError('minlength')\\\">\\r\\n          {{'common.validation.MinLengthChar' | translate: {'min':'2'} }}\\r\\n        </mat-error>\\r\\n        <mat-error *ngIf=\\\"!companyName.hasError('required') && !companyName.hasError('minlength')\\r\\n                         && companyName.hasError('pattern')\\\">\\r\\n          {{'common.validation.UseEthiopicOnly' | translate}}\\r\\n        </mat-error>\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n    <h4>{{'investors.editor.AddressCaption' | translate}}</h4>\\r\\n    <mat-divider></mat-divider>\\r\\n    <div formGroupName=\\\"address\\\">\\r\\n      <div id=\\\"divAddress\\\">\\r\\n        <div id=\\\"divAddress1\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"2em\\\" class=\\\"row\\\">\\r\\n          <mat-form-field fxLayoutGap=\\\"4em\\\">\\r\\n            <mat-label>{{'investors.editor.Region' | translate}}</mat-label>\\r\\n            <mat-select formControlName=\\\"RegionId\\\" (selectionChange)=\\\"filterRegion($event.value)\\\"\\r\\n                        [compareWith]=\\\"compareIds\\\" required>\\r\\n              <!-- <option value=\\\"0\\\">--Select--</option> -->\\r\\n              <mat-option value=\\\"0\\\">--</mat-option>\\r\\n              <mat-option *ngFor=\\\"let region of regions\\\" [value]=\\\"region.RegionId\\\">\\r\\n                <span>{{region.Description}}</span>\\r\\n              </mat-option>\\r\\n            </mat-select>\\r\\n\\r\\n            <!--<mat-error *ngIf=\\\"region.hasError('required')\\\">-->\\r\\n            <!--{{'common.validation.Required' | translate}}-->\\r\\n            <!--</mat-error>-->\\r\\n          </mat-form-field>\\r\\n          <mat-form-field fxLayoutGap=\\\"4em\\\">\\r\\n            <mat-label>{{'investors.editor.Zone' | translate}}</mat-label>\\r\\n            <mat-select formControlName=\\\"ZoneId\\\" (selectionChange)=\\\"filterZone($event.value)\\\" [compareWith]=\\\"compareIds\\\"\\r\\n            >\\r\\n              <!-- <option value=\\\"0\\\">--Select--</option> -->\\r\\n              <mat-option value=\\\"0\\\">--</mat-option>\\r\\n              <mat-option *ngFor=\\\"let zone of filteredZones\\\" [value]=\\\"zone.ZoneId\\\">\\r\\n                <span>{{zone.Description}}</span>\\r\\n              </mat-option>\\r\\n            </mat-select>\\r\\n\\r\\n            <!--<mat-error *ngIf=\\\"zone.hasError('required')\\\">-->\\r\\n            <!--{{'common.validation.Required' | translate}}-->\\r\\n            <!--</mat-error>-->\\r\\n          </mat-form-field>\\r\\n          <mat-form-field fxLayoutGap=\\\"4em\\\">\\r\\n            <mat-label>{{'investors.editor.Woreda' | translate}}</mat-label>\\r\\n            <mat-select formControlName=\\\"WoredaId\\\" (selectionChange)=\\\"filterWoreda($event.value)\\\"\\r\\n                        [compareWith]=\\\"compareIds\\\">\\r\\n              <!-- <option value=\\\"0\\\">--Select--</option> -->\\r\\n              <mat-option *ngFor=\\\"let w of filteredWoredas\\\" [value]=\\\"w.WoredaId\\\">\\r\\n                <span>{{w.Description}}</span>\\r\\n              </mat-option>\\r\\n            </mat-select>\\r\\n\\r\\n            <!--<mat-error *ngIf=\\\"woreda.hasError('required')\\\">-->\\r\\n            <!--{{'common.validation.Required' | translate}}-->\\r\\n            <!--</mat-error>-->\\r\\n          </mat-form-field>\\r\\n          <mat-form-field fxLayoutGap=\\\"4em\\\">\\r\\n            <mat-label>{{'investors.editor.Kebele' | translate}}</mat-label>\\r\\n            <mat-select formControlName=\\\"KebeleId\\\" [compareWith]=\\\"compareIds\\\">\\r\\n              <!-- <option value=\\\"0\\\">--Select--</option> -->\\r\\n              <mat-option value=\\\"0\\\">--</mat-option>\\r\\n              <mat-option *ngFor=\\\"let keb of filteredKebeles\\\" [value]=\\\"keb.KebeleId\\\">\\r\\n                <span>{{keb.Description}}</span>\\r\\n              </mat-option>\\r\\n            </mat-select>\\r\\n\\r\\n            <!--<mat-error *ngIf=\\\"kebele.hasError('required')\\\">-->\\r\\n            <!--{{'common.validation.Required' | translate}}-->\\r\\n            <!--</mat-error>-->\\r\\n          </mat-form-field>\\r\\n          <mat-form-field fxLayoutGap=\\\"4em\\\">\\r\\n            <mat-label>{{'investors.editor.HouseNo' | translate}}</mat-label>\\r\\n            <input matInput formControlName=\\\"HouseNo\\\"/>\\r\\n\\r\\n            <!--<mat-error *ngIf=\\\"houseNo.hasError('required')\\\">-->\\r\\n            <!--{{'common.validation.Required' | translate}}-->\\r\\n            <!--</mat-error>-->\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n        <div id=\\\"divAddress2\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"2em\\\" class=\\\"row\\\">\\r\\n          <mat-form-field fxLayoutGap=\\\"4em\\\">\\r\\n            <mat-label>{{'investors.editor.Email' | translate}}</mat-label>\\r\\n            <input matInput formControlName=\\\"Email\\\"/>\\r\\n            <!--<mat-error *ngIf=\\\"email.hasError('required')\\\">-->\\r\\n            <!--{{'common.validation.Required' | translate}}-->\\r\\n            <!--</mat-error>-->\\r\\n            <!--<mat-error *ngIf=\\\"!email.hasError('required') && email.hasError('email')\\\">-->\\r\\n            <!--{{'common.validation.InvalidEmail' | translate}}-->\\r\\n            <!--</mat-error>-->\\r\\n          </mat-form-field>\\r\\n          <mat-form-field fxLayoutGap=\\\"4em\\\">\\r\\n            <mat-label>{{'investors.editor.PhoneDirect' | translate}}</mat-label>\\r\\n            <input matInput formControlName=\\\"TeleNo\\\"/>\\r\\n          </mat-form-field>\\r\\n          <mat-form-field fxLayoutGap=\\\"4em\\\">\\r\\n            <mat-label>{{'investors.editor.PhoneMobile' | translate}}</mat-label>\\r\\n            <input matInput formControlName=\\\"CellPhoneNo\\\"/>\\r\\n          </mat-form-field>\\r\\n          <mat-form-field fxLayoutGap=\\\"4em\\\">\\r\\n            <mat-label>{{'investors.editor.Fax' | translate}}</mat-label>\\r\\n            <input matInput formControlName=\\\"Fax\\\"/>\\r\\n          </mat-form-field>\\r\\n          <mat-form-field fxLayoutGap=\\\"4em\\\">\\r\\n            <mat-label>{{'investors.editor.Pobox' | translate}}</mat-label>\\r\\n            <input matInput formControlName=\\\"Pobox\\\"/>\\r\\n          </mat-form-field>\\r\\n          <div></div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"2em\\\" class=\\\"row\\\">\\r\\n        <mat-form-field [fxFlex]=\\\"128\\\">\\r\\n          <mat-label>{{'investors.editor.OtherAddress' | translate}}</mat-label>\\r\\n          <input matInput formControlName=\\\"OtherAddress\\\" width=\\\"800px\\\"/>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <h4>{{'investors.editor.BusinessDataCaption' | translate}}</h4></div>\\r\\n    <mat-divider></mat-divider>\\r\\n    <div id=\\\"divTradeReg\\\">\\r\\n\\r\\n\\r\\n      <div fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"2em\\\" class=\\\"row\\\">\\r\\n        <mat-form-field fxFlex>\\r\\n          <mat-label name=\\\"lblTIN\\\">{{'users.editor.TIN' | translate}}</mat-label>\\r\\n          <input matInput formControlName=\\\"cTin\\\" number maxlength=\\\"10\\\"/>\\r\\n          <mat-error *ngIf=\\\"tin.hasError('maxlength')\\\">\\r\\n            {{'common.validation.MaxLengthChar' | translate: {'max':'10'} }}\\r\\n          </mat-error>\\r\\n          <!-- // to-do apply server side validation -->\\r\\n        </mat-form-field>\\r\\n        <mat-form-field fxFlex *ngIf=\\\"isNewCustomer\\\">\\r\\n          <mat-label name=\\\"lblRegNumber\\\">{{'investors.editor.RegNumber' | translate}}</mat-label>\\r\\n          <input matInput formControlName=\\\"cRegNumber\\\" NaturalNumberOnlyDir/>\\r\\n        </mat-form-field>\\r\\n        <mat-form-field fxFlex *ngIf=\\\"isNewCustomer\\\">\\r\\n          <mat-label name=\\\"lblRegDate\\\">{{'investors.editor.RegDate' | translate}}</mat-label>\\r\\n          <input [matDatepicker]=\\\"cRegDate\\\" matInput formControlName=\\\"cRegDate\\\"/>\\r\\n          <mat-datepicker-toggle matSuffix [for]=\\\"cRegDate\\\"></mat-datepicker-toggle>\\r\\n          <mat-datepicker #cRegDate></mat-datepicker>\\r\\n        </mat-form-field>\\r\\n        <mat-form-field fxFlex fxFlex=\\\"14\\\" *ngIf=\\\"isNewCustomer\\\">\\r\\n          <mat-label name=\\\"lblPaidCapital\\\">{{'investors.editor.PaidCapital' | translate}}</mat-label>\\r\\n          <input matInput formControlName=\\\"cPaidCapital\\\"/>\\r\\n        </mat-form-field>\\r\\n        <mat-form-field fxFlex fxFlex=\\\"15\\\" *ngIf=\\\"isNewCustomer\\\">\\r\\n          <mat-label name=\\\"lblSighnedCapital\\\">{{'investors.editor.SighnedCapital' | translate}}</mat-label>\\r\\n          <input matInput formControlName=\\\"cSighnedCapital\\\"/>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"2em\\\">\\r\\n        <mat-form-field fxFlex fxFlex=\\\"100\\\">\\r\\n\\r\\n          <mat-select placeholder=\\\"Category *\\\" formControlName=\\\"cMajorDivision\\\" multiple>\\r\\n\\r\\n            <mat-option *ngFor=\\\"let MajorDivision of majorDivisions\\\" [value]=\\\"MajorDivision.Id\\\">\\r\\n              {{MajorDivision.EnglishDescription}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div mat-dialog-actions style=\\\"margin: 15px; text-align: center\\\">\\r\\n      <button mat-raised-button type=\\\"submit\\\" color=\\\"primary\\\" style=\\\"margin-right: 10px\\\">\\r\\n        {{'common.commands.Save' | translate}}\\r\\n      </button>\\r\\n      <button mat-raised-button (click)=\\\"onBack()\\\" color=\\\"warn\\\" type=\\\"button\\\">\\r\\n        {{'common.commands.Cancel' | translate}}\\r\\n      </button>\\r\\n    </div>\\r\\n  </form>\\r\\n</div>\\r\\n<!-- </div> -->\\r\\n\"","module.exports = \"/* div {\\r\\n  display: flex;\\r\\n} */\\n.page-content {\\n  margin-bottom: 30px;\\n  background-color: white; }\\nmat-card {\\n  max-width: 100%;\\n  margin: 10px auto;\\n  text-align: center; }\\nmat-checkbox {\\n  max-width: 500px;\\n  text-align: left;\\n  margin-top: -40px;\\n  font-size: small;\\n  vertical-align: bottom; }\\nmat-label {\\n  font-size: smaller; }\\nmat-form-field {\\n  max-width: 130px;\\n  margin-right: 10px;\\n  font-size: small; }\\nmat-divider {\\n  margin-bottom: 10px;\\n  border-top-color: #00bcd4; }\\nh4 {\\n  margin-bottom: 0px;\\n  font-size: medium;\\n  color: #00bcd4;\\n  margin-top: 10px; }\\n.row {\\n  text-align: left;\\n  margin-bottom: 15px; }\\n.customer-radio-group {\\n  display: inherit;\\n  flex-direction: row; }\\n.customer-radio-button {\\n  margin: 5px; }\\n\"","import {AfterContentChecked, AfterViewInit, Component, OnDestroy, OnInit, ViewChild, Input} from '@angular/core';\r\nimport {FormBuilder, FormControl, FormGroup, NgForm, Validators} from '@angular/forms';\r\nimport {ActivatedRoute, Params, Router} from '@angular/router';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {fadeInOut} from '@custor/services/animations';\r\nimport {InvestorService} from './investor.service';\r\nimport {Investor} from '../../model/investor';\r\nimport {Subscription} from 'rxjs';\r\nimport {Utilities} from '@custor/helpers/utilities';\r\n\r\nimport {Gender, LegalStatus, Lookup} from '../../model/lookupData';\r\nimport {ALPHABET_WITHSPACE_REGEX, ET_ALPHABET_WITHSPACE_REGEX, GENDERS, LEGAL_STATUS} from '../../const/consts';\r\nimport {determineId} from '@custor/helpers/compare';\r\nimport {ConfigurationService} from '@custor/services/configuration.service';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {AuthService} from '@custor/services/security/auth.service';\r\nimport {AccountService} from '@custor/services/security/account.service';\r\nimport {Permission} from '../../model/security/permission.model';\r\nimport {AddressService} from '../../Services/Address/address.service';\r\nimport {AddressModel} from '../../model/address/Address.model';\r\nimport {KebeleModel} from '../../model/address/Kebele.model';\r\nimport {ZoneModel} from '../../model/address/Zone.model';\r\nimport {WoredaModel} from '../../model/address/Woreda.model';\r\nimport {RegionModel} from '../../model/address/Region.model';\r\nimport {LookUpService} from '../../Services/look-up.service';\r\nimport {DataSharingService} from '../../Services/data-sharing.service';\r\nimport {LookupsModel} from '../../model/lookups';\r\nimport {FormOfOwnershipModel} from '../../model/EnumModel';\r\nimport {FormOfOwnership} from '@custor/const/consts';\r\nimport {NationalityModel} from '../../model/address/NationalityModel';\r\n\r\nimport {MajorDivision} from '../../model/catagory/MajorDivision.model';\r\nimport {CatagoryService} from '../../Services/Catagory/Catagory.service';\r\nimport {RegistrationCatagory} from '../../model/Registration/RegistrationCatagory';\r\nimport {RegistrationCatagoryService} from '../../Services/Registration/RegistrationCatagory.service';\r\n\r\n@Component({\r\n  selector: 'app-edit-investor',\r\n  templateUrl: './investor-editor.component.html',\r\n  styleUrls: ['./investor-editor.component.scss'],\r\n  providers: [InvestorService],\r\n  animations: [fadeInOut]\r\n})\r\nexport class EditInvestorComponent implements OnInit, AfterViewInit, OnDestroy, AfterContentChecked {\r\n  @ViewChild('form')\r\n  formOfOwnershipList: FormOfOwnershipModel[] = [];\r\n\r\n  investorSub: Subscription;\r\n  private form: NgForm;\r\n  title: string;\r\n  isNewInvestor = false;\r\n  investor: Investor;\r\n  countries: Lookup[] = [];\r\n  lookups: Lookup[] = [];\r\n  regions: RegionModel[] = [];\r\n  zones: ZoneModel[] = [];\r\n  filteredZones: ZoneModel[] = [];\r\n  woredas: WoredaModel[] = [];\r\n  filteredWoredas: WoredaModel[] = [];\r\n  kebeles: KebeleModel[] = [];\r\n  filteredKebeles: KebeleModel[] = [];\r\n  majorDivisions: MajorDivision[] = [];\r\n  registrationCatagoryList: RegistrationCatagory[] = [];\r\n  // isEditMode = false;\r\n  investorForm: FormGroup;\r\n  loadingIndicator: boolean;\r\n  genders: Gender[] = [];\r\n  legalStatuses: LegalStatus[] = [];\r\n  isCompany: boolean;\r\n  currentLang = '';\r\n  countryLookupType = 1;\r\n  allPermissions: Permission[] = [];\r\n  private addressList: AddressModel;\r\n  private addressId: number | undefined;\r\n  public investorTitle: Lookup[];\r\n  TitleLookup: LookupsModel[];\r\n  public nationList: NationalityModel[];\r\n  originFlag = true;\r\n  public countryListWithOutEthipia: LookupsModel[];\r\n  public branch = false;\r\n\r\n  private ServiceId: any;\r\n  private ServiceApplicationId: any;\r\n\r\n  AllowCascading = true;\r\n  @Input() errors: string[] = [];\r\n  private isNew: any;\r\n  public isNewCustomer: boolean;\r\n\r\n  constructor(private route: ActivatedRoute,\r\n              private router: Router,\r\n              public dataSharing: DataSharingService,\r\n              private lookUpService: LookUpService,\r\n              private addressService: AddressService,\r\n              private registrationCatagoryService: RegistrationCatagoryService,\r\n              private http: HttpClient, private accountService: AccountService,\r\n              private authService: AuthService,\r\n              private custService: InvestorService,\r\n              private catagoryService: CatagoryService,\r\n              private configService: ConfigurationService,\r\n              private toastr: ToastrService,\r\n              private fb: FormBuilder) {\r\n    this.checkAuthoriation();\r\n    // create an empty object from the Investor model\r\n    this.investor = <Investor>{};\r\n    // initialize the form\r\n    this.initForm();\r\n    // // console.log(this.accountService.currentUser.Roles);\r\n  }\r\n\r\n  checkAuthoriation() {\r\n    // if (!this.canManageInvestors) {\r\n    //   this.toastr.error('You are not allowed to access this page');\r\n    //   this.router.navigate(['denied']);\r\n    // }\r\n  }\r\n\r\n  ngAfterContentChecked(): void {\r\n    this.investorForm.patchValue({\r\n      UserId: this.accountService.currentUser.Id\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.ServiceId = this.route.snapshot.params['ServiceId'];\r\n    this.ServiceApplicationId = this.route.snapshot.params['ServiceApplicationId'];\r\n    this.loadingIndicator = false;\r\n    this.currentLang = this.configService.language;\r\n    this.initStaticData('this.currentLang');\r\n    this.initStaticDataOwnerShip(this.currentLang);\r\n    this.fillAddressLookups();\r\n    this.formControlValueChanged();\r\n\r\n    this.getMajorDivisions();\r\n\r\n    const id = this.route.snapshot.params['InvestorId'];\r\n    // console.debug(id);\r\n    if (id < 1) {\r\n      this.isNewInvestor = true;\r\n      this.isCompany = false;\r\n\r\n      this.title = 'Create a new Investor';\r\n\r\n      return;\r\n    }\r\n    if (id) {\r\n      // to-do\r\n      // get the selected investor either through @Input or shared service\r\n      this.getInvestor(id);\r\n    }\r\n  }\r\n\r\n\r\n  getMajorDivisions() {\r\n    this.catagoryService.getMajorDivision()\r\n      .subscribe(result => {\r\n          this.majorDivisions = result;\r\n          this.majorDivisions = result;\r\n        },\r\n        error => this.toastr.error(error));\r\n  }\r\n\r\n  formControlValueChanged() {\r\n    const cFather = this.investorForm.get('cFatherName');\r\n    this.legalStatus.valueChanges.subscribe(\r\n      (intLegal: number) => {\r\n        if (intLegal === 1) { // Sole\r\n          // // console.log(intLegal);\r\n          this.ClearCompanyValidators();\r\n          this.firstNameEng.setValidators([Validators.compose([Validators.required, Validators.minLength(2),\r\n            Validators.pattern(ALPHABET_WITHSPACE_REGEX)])]);\r\n          this.fatherNameEng.setValidators([Validators.compose([Validators.required, Validators.minLength(2),\r\n            Validators.pattern(ALPHABET_WITHSPACE_REGEX)])]);\r\n          this.grandNameEng.setValidators([Validators.compose([Validators.required, Validators.minLength(2),\r\n            Validators.pattern(ALPHABET_WITHSPACE_REGEX)])]);\r\n          this.nationality.setValidators([Validators.required]);\r\n          this.gender.setValidators([Validators.required]);\r\n\r\n          this.isCompany = false;\r\n        } else {\r\n          this.ClearSoleValidators();\r\n          this.companyNameEng.setValidators([Validators.required]);\r\n          cFather.updateValueAndValidity();\r\n          this.isCompany = true;\r\n        }\r\n      });\r\n\r\n\r\n    this.isExistingCustomer.valueChanges.subscribe(\r\n      (isNewCustomer: boolean) => {\r\n        if (isNewCustomer && this.legalStatus.value !== 1) {\r\n          this.sighnedCapital.setValidators([Validators.compose([Validators.required, Validators.minLength(2)])]);\r\n          this.paidCapital.setValidators([Validators.compose([Validators.required, Validators.minLength(2)])]);\r\n          this.isNewCustomer = true;\r\n        } else {\r\n\r\n          this.isNewCustomer = false;\r\n          this.sighnedCapital.clearAsyncValidators();\r\n          this.paidCapital.clearAsyncValidators();\r\n        }\r\n      });\r\n  }\r\n\r\n  ClearSoleValidators() {\r\n    this.firstNameEng.clearValidators();\r\n    this.fatherNameEng.clearValidators();\r\n    this.grandNameEng.clearValidators();\r\n    this.nationality.clearValidators();\r\n    this.gender.clearValidators();\r\n  }\r\n\r\n  ClearCompanyValidators() {\r\n    // this.nationalityCompany.clearValidators();\r\n    this.companyNameEng.clearValidators();\r\n  }\r\n\r\n  private getAllNation() {\r\n    this.addressService.getNationality()\r\n      .subscribe(result => {\r\n        this.nationList = result;\r\n      });\r\n  }\r\n\r\n  initStaticDataOwnerShip(currentLang) {\r\n    this.formOfOwnershipList = [];\r\n\r\n    let formOfOwnership: FormOfOwnershipModel = new FormOfOwnershipModel();\r\n    FormOfOwnership.forEach(pair => {\r\n      formOfOwnership = {\r\n        'Id': pair.Id.toString(),\r\n        'Desc': (currentLang === 'et' ? pair.Description : pair.DescriptionEng)\r\n      };\r\n      // // console.log(formOfOwnership);\r\n\r\n      this.formOfOwnershipList.push(formOfOwnership);\r\n    });\r\n  }\r\n\r\n  initStaticData(currentLang) {\r\n    let gender: Gender = new Gender();\r\n    GENDERS.forEach(pair => {\r\n      gender = {'Id': pair.Id.toString(), 'Desc': (currentLang === 'et' ? pair.Description : pair.DescriptionEnglish)};\r\n      this.genders.push(gender);\r\n      // // console.log(pair);\r\n    });\r\n    let legalS: LegalStatus = new LegalStatus();\r\n    LEGAL_STATUS.forEach(pair => {\r\n      legalS = {'Id': pair.Id.toString(), 'Desc': (currentLang === 'et' ? pair.Description : pair.DescriptionEnglish)};\r\n      this.legalStatuses.push(legalS);\r\n    });\r\n\r\n    // Fill data from Lookup table\r\n    this.getLookups();\r\n  }\r\n\r\n  private getPermissions() {\r\n    this.loadingIndicator = true;\r\n\r\n    this.accountService.getPermissions()\r\n      .subscribe(result => {\r\n          this.allPermissions = result;\r\n          this.loadingIndicator = false;\r\n\r\n\r\n        },\r\n        error => {\r\n          this.loadingIndicator = false;\r\n          this.toastr.error(`Unable to retrieve permissions from the server.\\r\\nErrors:\r\n              \"${Utilities.getHttpResponseMessage(error)}\"`, 'Get Permissions Error');\r\n        });\r\n  }\r\n\r\n  get canManageInvestors() {\r\n    return this.accountService.userHasPermission(Permission.manageInvestorsPermission);\r\n  }\r\n\r\n  get canViewInvestors() {\r\n    return this.accountService.userHasPermission(Permission.viewInvestorsPermission);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // this.investorSub.unsubscribe();\r\n  }\r\n\r\n  getInvestor(id) {\r\n    this.isNewInvestor = false;\r\n    // this.loadingIndicator = true;\r\n    this.investorSub = this.custService\r\n      .getInvestor(id)\r\n      .subscribe(result => {\r\n          this.investor = result;\r\n          this.fillAddressLookups();\r\n          this.updateForm();\r\n          console.log(this.investor.RegistrationCatagories)\r\n          this.investorForm.patchValue({\r\n            cMajorDivision: this.investor.RegistrationCatagories\r\n\r\n          })\r\n        },\r\n        error => this.toastr.error(error));\r\n    this.loadingIndicator = false;\r\n  }\r\n\r\n\r\n  getAddressData(parent: number) {\r\n    this.addressService.getAddress(parent)\r\n      .subscribe((result: AddressModel) => {\r\n        this.addressList = result;\r\n        // // console.log(result);\r\n        this.getKebeleByWoredaId(result.WoredaId);\r\n        this.addressId = result.AddressId;\r\n        this.investorForm.get('address').patchValue(result);\r\n      }, error => this.toastr.error(error));\r\n  }\r\n\r\n\r\n  // getInvestorTitle() {\r\n  //   this.lookUpService.getAll().subscribe(result => {\r\n  //     // console.log(result);\r\n  //     this.investorTitle = result;\r\n  //   });\r\n\r\n  // }\r\n\r\n  fillAddressLookups() {\r\n    // to-do\r\n    // bring all in one go\r\n    // caching\r\n    this.getRegions();\r\n    this.getAllZones();\r\n    this.getAllWoredas();\r\n    this.getInvestorTitle(89);\r\n    this.getCountryTitle(31);\r\n    this.getAllNation();\r\n    // this.getAllKebeles();\r\n    // this.getInvestorTitle();\r\n\r\n  }\r\n\r\n  getLookups() {\r\n    this.custService.getLookupsByLang(this.currentLang)\r\n      .subscribe(result => {\r\n          this.countries = result;\r\n          // // console.log(result);\r\n          // // console.log (this.lookups.length + ' countries');\r\n          // if (this.lookups) {\r\n          //   this.countries = this.lookups.filter((item) => item.LookupTypeId === this.countryLookupType);\r\n          //   // console.log(this.countries);\r\n          //   // filter more lookups\r\n          // }\r\n        },\r\n        error => this.toastr.error(error));\r\n  }\r\n\r\n  getRegions() {\r\n    this.custService.getRegionsByLang(this.currentLang)\r\n      .subscribe(result => {\r\n          this.regions = result;\r\n        },\r\n        error => this.toastr.error(error));\r\n  }\r\n\r\n  getAllZones() {\r\n    this.custService.getAllZonesByLang(this.currentLang)\r\n      .subscribe(z => {\r\n          this.zones = z;\r\n          if (this.zones) {\r\n            // // console.log('Region ' + this.investor.RegionId);\r\n            // this.filterRegion(this.investor.RegionId);\r\n          }\r\n        },\r\n        error => this.toastr.error(error));\r\n  }\r\n\r\n  getAllWoredas() {\r\n    this.custService.getAllWoredasByLang(this.currentLang)\r\n      .subscribe(result => {\r\n          this.woredas = result;\r\n        },\r\n        error => this.toastr.error(error));\r\n  }\r\n\r\n  // very expensive!\r\n  getAllKebeles() {\r\n    this.custService.getAllKebelesByLang(this.currentLang)\r\n      .subscribe(result => {\r\n          this.kebeles = result;\r\n          if (this.kebeles) {\r\n            this.filterWoreda(this.investor.WoredaId);\r\n          }\r\n        },\r\n        error => this.toastr.error(error));\r\n  }\r\n\r\n\r\n  initForm() {\r\n    this.investorForm = this.fb.group({\r\n      cLegalStatus: ['', Validators.required],\r\n      cFirstNameEng: [''],\r\n      cFatherNameEng: [''],\r\n      cGrandNameEng: [''],\r\n      cFirstName: [''],\r\n      cFatherName: [''],\r\n      cGrandName: [''],\r\n      cNationality: ['1'], // Ethiopian\r\n      cNationalityCompany: [''],\r\n      cCompanyName: [''],\r\n      cCompanyNameEng: [''],\r\n      cGender: [''],\r\n      Title: [''],\r\n      FormOfOwnership: ['', Validators.required],\r\n      cIsEthiopianOrigin: [false],\r\n      cTin: [''],\r\n      IsExistingCustomer: [false],\r\n      cRegNumber: [''],\r\n      cRegDate: [''],\r\n      cPaidCapital: [''],\r\n      cSighnedCapital: [''],\r\n      cMajorDivision: [],\r\n\r\n      'address': new FormGroup({\r\n        ParentId: new FormControl(),\r\n        RegionId: new FormControl(),\r\n        ZoneId: new FormControl(),\r\n        WoredaId: new FormControl(),\r\n        KebeleId: new FormControl(),\r\n        OtherAddress: new FormControl(),\r\n        CellPhoneNo: new FormControl(),\r\n        // SpecificAreaName: new FormControl(),\r\n        HouseNo: new FormControl(),\r\n        TeleNo: new FormControl(),\r\n        Fax: new FormControl(),\r\n        Pobox: new FormControl(),\r\n        Email: new FormControl(),\r\n        Remark: new FormControl()\r\n      })\r\n\r\n    });\r\n  }\r\n\r\n  updateForm() {\r\n    // const _shortDate = 'dd/MM/yyyy';\r\n    this.investorForm.patchValue({\r\n      cLegalStatus: this.investor.LegalStatus,\r\n      cFirstName: this.investor.FirstName || '',\r\n      cFatherName: this.investor.FatherName || '',\r\n      cGrandName: this.investor.GrandName || '',\r\n      cFirstNameEng: this.investor.FirstNameEng || '',\r\n      cFatherNameEng: this.investor.FatherNameEng || '',\r\n      cGrandNameEng: this.investor.GrandNameEng || '',\r\n      cNationality: this.investor.Nationality == null ? '' : this.investor.Nationality.toString(),\r\n      cNationalityCompany: this.investor.Nationality == null ? '' : this.investor.Nationality.toString(),\r\n      cGender: this.investor.Gender == null ? '' : this.investor.Gender.toString(),\r\n      cCompanyName: this.investor.FirstName || '',\r\n      cCompanyNameEng: this.investor.FirstNameEng || '',\r\n      cTin: this.investor.Tin || '',\r\n      cRegNumber: this.investor.RegistrationNumber || '',\r\n      cRegDate: this.investor.RegistrationDate || '',\r\n\r\n      cPaidCapital: this.investor.PaidCapital || '',\r\n      cSighnedCapital: this.investor.SighnedCapital || '',\r\n      IsExistingCustomer: this.investor.IsExistingCustomer || '',\r\n      cMajorDivision: this.investor.RegistrationCatagories || '',\r\n\r\n      /*  cTradeNameEng: this.investor.TradeNameEnglish || '',\r\n        cTradeName: this.investor.TradeName || '',*/\r\n      Title: this.investor.Title || '',\r\n      FormOfOwnership: this.investor.FormOfOwnership == null ? '' : this.investor.FormOfOwnership.toString(),\r\n      cIsEthiopianOrigin: this.investor.IsEthiopianOrigin,\r\n    });\r\n\r\n    if (this.investor.LegalStatus > 1) {\r\n      this.isCompany = true;\r\n    } else {\r\n      this.isCompany = false;\r\n    }\r\n    this.isNewInvestor = false;\r\n\r\n    // Set dropdown values\r\n    setTimeout(() => {\r\n      this.AllowCascading = false;\r\n      if (this.investor.ZoneId != null) {\r\n        this.filteredWoredas = this.woredas.filter((item) => item.ZoneId === this.investor.ZoneId);\r\n      }\r\n      if (this.investor.RegionId != null) {\r\n        this.filteredZones = this.zones.filter((item) => item.RegionId === this.investor.RegionId);\r\n      }\r\n      if (this.investor.WoredaId != null) {\r\n        this.getKebeleByWoredaId(this.investor.WoredaId);\r\n      }\r\n    }, 200);\r\n\r\n    this.investorForm.get('address').patchValue({\r\n      RegionId: this.investor.RegionId == null ? '' : this.investor.RegionId.toString(),\r\n      ZoneId: this.investor.ZoneId == null ? '' : this.investor.ZoneId.toString(),\r\n      WoredaId: this.investor.WoredaId == null ? '' : this.investor.WoredaId.toString(),\r\n      KebeleId: this.investor.KebeleId == null ? '' : this.investor.KebeleId.toString(),\r\n      HouseNo: this.investor.HouseNo || '',\r\n      TeleNo: this.investor.TeleNo || '',\r\n      Pobox: this.investor.Pobox || '',\r\n      Fax: this.investor.Fax || '',\r\n      CellPhoneNo: this.investor.CellPhoneNo || '',\r\n      Email: this.investor.Email || '',\r\n      OtherAddress: this.investor.OtherAddress || ''\r\n    });\r\n\r\n    this.branch = (this.investor.FormOfOwnership.toString() === '5');\r\n    this.AllowCascading = true;\r\n  }\r\n\r\n  compareIds(id1: any, id2: any): boolean {\r\n    const a1 = determineId(id1);\r\n    const a2 = determineId(id2);\r\n    return a1 === a2;\r\n  }\r\n\r\n  public onSubmit() {\r\n\r\n    // put dummy values to avoid conditional validation issues\r\n    if (this.isCompany) {\r\n      this.investorForm.get('cFirstNameEng').patchValue('NA');\r\n      this.investorForm.get('cFatherNameEng').patchValue('NA');\r\n      this.investorForm.get('cGrandNameEng').patchValue('NA');\r\n      this.investorForm.get('cGender').patchValue('1');\r\n    }\r\n    if (!this.branch) {\r\n      this.investorForm.get('cNationalityCompany').patchValue('0');\r\n    }\r\n    if (!this.investorForm.valid) {\r\n      // // console.log('error!!');\r\n      return;\r\n    }\r\n    const lStatus: number = this.legalStatus.value;\r\n    const fOwnership: number = this.FormOfOwnershipV.value;\r\n\r\n    const natCompany: number = this.investorForm.get('cNationalityCompany').value;\r\n    if (fOwnership.toString() === '5' && natCompany < 1) {\r\n      this.toastr.error('Please select the country of incorporation of the parent company');\r\n      return;\r\n    }\r\n    if (lStatus.toString() === '1' && fOwnership.toString() === '4') {\r\n      this.toastr.error('The form of ownership can not be Joint Venture when the Legal Status is Sole');\r\n      return;\r\n    }\r\n    if (fOwnership < 1) {\r\n      this.toastr.error('Please select form of ownership');\r\n\r\n      return;\r\n    }\r\n    const t: string = this.tin.value;\r\n    if (t.replace(' ', '').trim().length > 0 && t.replace(' ', '').trim().length !== 10) {\r\n      this.toastr.error('TIN must be 10 digits long');\r\n      return;\r\n    }\r\n    this.loadingIndicator = true;\r\n    return this.custService.saveInvestor(this.getEditedInvestor())\r\n      .subscribe((investor) => {\r\n          this.isNew = this.getEditedInvestor().IsExistingCustomer == true ? 1 : 0;\r\n\r\n          // const IsExistingCustomer = this.route.snapshot.params['IsExistingCustomer'];\r\n\r\n          // this.router.navigateByUrl(this.router.url.replace(IsExistingCustomer, this.isNew));\r\n          if (investor == null) {\r\n            const ServiceApplicationId1 = this.route.snapshot.params['ServiceApplicationId'];\r\n            const InvestorId1 = this.route.snapshot.params['InvestorId'] || this.route.snapshot.params['investorId'];\r\n            this.router.navigate(['investor-tab/1235/' + ServiceApplicationId1 + '/' + InvestorId1 + '/' + this.isNew]);\r\n\r\n          }\r\n\r\n          if (investor != null) {\r\n            this.router.navigate(['investor-tab/1235/' + investor.ServiceApplicationId + '/' + investor.InvestorId + '/' + this.isNew]);\r\n            this.saveCompleted(investor);\r\n\r\n            localStorage.setItem('InvestorId', investor.InvestorId.toString());\r\n\r\n          }\r\n        },\r\n        err => this.handleError(err)\r\n      );\r\n  }\r\n\r\n  getRegistrationCatagoryData(Tin: string) {\r\n    this.registrationCatagoryService.getRegistrationCatagoriesByTin(Tin)\r\n      .subscribe((result: RegistrationCatagory[]) => {\r\n        this.registrationCatagoryList = result;\r\n        this.investorForm.get('cMajorDivision').patchValue(result);\r\n      }, error => this.toastr.error(error));\r\n  }\r\n\r\n\r\n  private saveCompleted(investor?: Investor) {\r\n    if (investor) {\r\n      this.investor = investor;\r\n    } else {\r\n      this.toastr.success('Error. Record was not saved!');\r\n      return;\r\n    }\r\n    this.loadingIndicator = false;\r\n    // clear the dummy values uaed to avoid conditional validation issues\r\n    if (this.isCompany) {\r\n      this.investorForm.get('cFirstNameEng').patchValue('');\r\n      this.investorForm.get('cFatherNameEng').patchValue('');\r\n      this.investorForm.get('cGrandNameEng').patchValue('');\r\n      this.investorForm.get('cGender').patchValue('');\r\n    }\r\n    this.toastr.success('Record saved successfully!');\r\n    // if (this.accountService.getUserType()) {\r\n    //   this.router.navigate(['investor']);\r\n    // } else {\r\n    //   this.router.navigate(['search-browser']);\r\n    // }\r\n  }\r\n\r\n  private handleError(error) {\r\n    this.loadingIndicator = false;\r\n\r\n    const errList = Utilities.getHttpResponseMessage(error);\r\n    if (error.status === 400) { // bad request (validation)\r\n      this.errors = errList;\r\n      this.toastr.error('Please fix the listed errors', 'Error');\r\n    } else {\r\n      this.errors = [];\r\n      this.toastr.error(error.status + ':' + errList[0].toString(), 'Error');\r\n    }\r\n  }\r\n\r\n  private getEditedInvestor(): Investor {\r\n    const formModel = this.investorForm.value;\r\n    const add = this.investorForm.get('address').value;\r\n    // // console.log(add);\r\n    return {\r\n      InvestorId: this.isNewInvestor ? 0 : this.investor.InvestorId,\r\n      FirstName: this.isCompany ? formModel.cCompanyName : formModel.cFirstName,\r\n      FatherName: this.isCompany ? '' : formModel.cFatherName,\r\n      GrandName: this.isCompany ? '' : formModel.cGrandName,\r\n      FirstNameEng: this.isCompany ? formModel.cCompanyNameEng : formModel.cFirstNameEng,\r\n      FatherNameEng: this.isCompany ? '' : formModel.cFatherNameEng,\r\n      GrandNameEng: this.isCompany ? '' : formModel.cGrandNameEng,\r\n      Nationality: this.isCompany ? formModel.cNationalityCompany : formModel.cNationality,\r\n      Gender: this.isCompany ? null : formModel.cGender,\r\n      Tin: formModel.cTin,\r\n      RegistrationDate: formModel.cRegDate,\r\n      RegistrationNumber: formModel.cRegNumber,\r\n      /*TradeName: formModel.cTradeName,\r\n      TradeNameEnglish: formModel.cTradeNameEng,*/\r\n      PaidCapital: formModel.cPaidCapital,\r\n      SighnedCapital: formModel.cSighnedCapital,\r\n\r\n      LegalStatus: formModel.cLegalStatus,\r\n      IsEthiopianOrigin: formModel.cIsEthiopianOrigin,\r\n\r\n      RegistrationCatagories: formModel.cMajorDivision,\r\n\r\n      UserId: this.accountService.currentUser.Id,\r\n      IsExistingCustomer: formModel.IsExistingCustomer,\r\n      // SiteCode: this.accountService.currentUser.SiteCode,\r\n      IsActive: true,\r\n      IsDeleted: false,\r\n      Title: this.isCompany ? null : formModel.Title,\r\n      FormOfOwnership: formModel.FormOfOwnership,\r\n      RegionId: add.RegionId,\r\n      ZoneId: add.ZoneId,\r\n      WoredaId: add.WoredaId,\r\n      KebeleId: add.KebeleId,\r\n      HouseNo: add.HouseNo,\r\n      TeleNo: add.TeleNo,\r\n      Pobox: add.Pobox,\r\n      Fax: add.Fax,\r\n      CellPhoneNo: add.CellPhoneNo,\r\n      Email: add.Email,\r\n      OtherAddress: add.OtherAddress,\r\n      UserName: this.accountService.currentUser.UserName,\r\n      AddressId: this.isNewInvestor ? 0 : this.investor.AddressId\r\n    };\r\n  }\r\n\r\n  getKebeleByWoredaId(wordaId: any) {\r\n    this.addressService.getKebelesByWoreda(wordaId)\r\n      .subscribe(result => {\r\n        // this.kebeles = result;\r\n        // // console.log(result);\r\n        this.filteredKebeles = result;\r\n      });\r\n  }\r\n\r\n  filterRegion(regionCode: string) {\r\n    if (!regionCode || !this.AllowCascading) {\r\n      return;\r\n    }\r\n    this.filteredKebeles = null;\r\n    this.filteredWoredas = null;\r\n    if (!this.zones) {\r\n      return;\r\n    }\r\n    this.filteredZones = this.zones.filter((item) => {\r\n      return item.RegionId === regionCode;\r\n    });\r\n  }\r\n\r\n  filterZone(zoneCode: string) {\r\n    if (!zoneCode || !this.AllowCascading) {\r\n      return;\r\n    }\r\n    this.filteredKebeles = null;\r\n    this.filteredWoredas = this.woredas.filter((item) => {\r\n      return item.ZoneId === zoneCode;\r\n    });\r\n  }\r\n\r\n  filterWoreda(woredaCode: string) {\r\n    if (!woredaCode || !this.AllowCascading) {\r\n      return;\r\n    }\r\n    this.getKebeleByWoredaId(woredaCode);\r\n  }\r\n\r\n  getInvestorTitle(id: any) {\r\n    this.lookUpService.getLookupByParentId(id).subscribe(result => {\r\n      // // console.log(result);\r\n      this.TitleLookup = result;\r\n    });\r\n\r\n  }\r\n\r\n  getCountryTitle(id: any) {\r\n    this.lookUpService.getLookupByParentId(id)\r\n      .subscribe(result => {\r\n        // // console.log(result);\r\n        this.countryListWithOutEthipia = result.filter((item) =>\r\n          item.English !== 'ETHIOPIA'\r\n        );\r\n\r\n      });\r\n\r\n  }\r\n\r\n  statusChanged(legalS: number) {\r\n    if (legalS > 1) {\r\n      this.isCompany = true;\r\n      this.initStaticDataOwnerShip(this.currentLang);\r\n    } else {\r\n      this.isCompany = false;\r\n      this.formOfOwnershipList.splice(3, 1);\r\n      // // console.log(this.formOfOwnershipList);\r\n    }\r\n  }\r\n\r\n  onBack() {\r\n    window.history.back();\r\n  }\r\n\r\n  get firstName() {\r\n    return this.investorForm.get('cFirstName');\r\n  }\r\n\r\n  get fatherName() {\r\n    return this.investorForm.get('cFatherName');\r\n  }\r\n\r\n  get Title() {\r\n    return this.investorForm.get('Title');\r\n  }\r\n\r\n  get grandName() {\r\n    return this.investorForm.get('cGrandName');\r\n  }\r\n\r\n  get firstNameEng() {\r\n    return this.investorForm.get('cFirstNameEng');\r\n  }\r\n\r\n  get fatherNameEng() {\r\n    return this.investorForm.get('cFatherNameEng');\r\n  }\r\n\r\n  get grandNameEng() {\r\n    return this.investorForm.get('cGrandNameEng');\r\n  }\r\n\r\n  get nationality() {\r\n    return this.investorForm.get('cNationality');\r\n  }\r\n\r\n  get gender() {\r\n    return this.investorForm.get('cGender');\r\n  }\r\n\r\n  // get isDiaspora() {\r\n  //   return this.investorForm.get('cIsDiaspora');\r\n  // }\r\n\r\n  get isEthiopianOrigin() {\r\n    return this.investorForm.get('cIsEthiopianOrigin');\r\n  }\r\n\r\n  get region() {\r\n    return this.investorForm.get('RegionId');\r\n  }\r\n\r\n  get zone() {\r\n    return this.investorForm.get('ZoneId');\r\n  }\r\n\r\n  get woreda() {\r\n    return this.investorForm.get('WoredaId');\r\n  }\r\n\r\n  get kebele() {\r\n    return this.investorForm.get('KebeleId');\r\n  }\r\n\r\n  get houseNumber() {\r\n    return this.investorForm.get('HouseNo');\r\n  }\r\n\r\n  get phoneDirect() {\r\n    return this.investorForm.get('PhoneDirect');\r\n  }\r\n\r\n  get CellPhoneNo() {\r\n    return this.investorForm.get('CellPhoneNo');\r\n  }\r\n\r\n  get fax() {\r\n    return this.investorForm.get('Fax');\r\n  }\r\n\r\n  get pobox() {\r\n    return this.investorForm.get('POBox');\r\n  }\r\n\r\n  get legalStatus() {\r\n    return this.investorForm.get('cLegalStatus');\r\n  }\r\n\r\n  get FormOfOwnershipV() {\r\n    return this.investorForm.get('FormOfOwnership');\r\n  }\r\n\r\n  get isExistingCustomer() {\r\n    return this.investorForm.get('IsExistingCustomer');\r\n  }\r\n\r\n  /*get tradeName() {\r\n    return this.investorForm.get('cTradeName');\r\n  }\r\n\r\n  get tradeNameEng() {\r\n    return this.investorForm.get('cTradeNameEng');\r\n  }*/\r\n\r\n  get sighnedCapital() {\r\n    return this.investorForm.get('cSighnedCapital');\r\n  }\r\n\r\n  get paidCapital() {\r\n    return this.investorForm.get('cPaidCapital');\r\n  }\r\n\r\n\r\n  get regDate() {\r\n    return this.investorForm.get('cRegDate');\r\n  }\r\n\r\n  get regNumber() {\r\n    return this.investorForm.get('cRegNumber');\r\n  }\r\n\r\n  get tin() {\r\n    return this.investorForm.get('cTin');\r\n  }\r\n\r\n  get otherAddress() {\r\n    return this.investorForm.get('OtherAddress');\r\n  }\r\n\r\n  get companyName() {\r\n    return this.investorForm.get('cCompanyName');\r\n  }\r\n\r\n  get companyNameEng() {\r\n    return this.investorForm.get('cCompanyNameEng');\r\n  }\r\n\r\n  get nationalityCompany() {\r\n    return this.investorForm.get('cNationalityCompany');\r\n  }\r\n\r\n  get email() {\r\n    return this.investorForm.get('Email');\r\n  }\r\n\r\n  get houseNo() {\r\n    return this.investorForm.get('HouseNo');\r\n  }\r\n\r\n  // another getter for easy access to form fields\r\n  get ct() {\r\n    return this.investorForm.controls;\r\n  }\r\n\r\n  // use it as 'ct.controlName.errors.required'\r\n\r\n  get floatLabels(): string {\r\n    return 'auto';\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    // this.fillAddressLookups();\r\n  }\r\n\r\n  checkCountry(id: any) {\r\n    if (id === 19) {\r\n      this.originFlag = false;\r\n    }\r\n  }\r\n\r\n  onFormOfOwnershipChanged(id: any) {\r\n    this.branch = (id === '5');\r\n    if (this.branch) {\r\n      this.nationalityCompany.setValidators([Validators.required]);\r\n    } else {\r\n      this.nationalityCompany.clearValidators();\r\n    }\r\n  }\r\n\r\n}\r\n","module.exports = \"<app-page-header title=\\\"customer-profile\\\" icon=\\\"people\\\"></app-page-header>\\r\\n\\r\\n<mat-card style=\\\"margin: 20px;\\\" *ngIf=\\\"investorShow\\\" class=\\\"dashboard-card\\\">\\r\\n\\r\\n  <mat-card-content class=\\\"dashboard-card-content\\\">\\r\\n\\r\\n    <mat-progress-bar *ngIf=\\\"loadingIndicator\\\" mode=\\\"query\\\"></mat-progress-bar>\\r\\n\\r\\n    <mat-table #table [dataSource]=\\\"dataSource\\\">\\r\\n\\r\\n      <ng-container matColumnDef=\\\"FirstNameEng\\\">\\r\\n        <mat-header-cell *matHeaderCellDef>Name</mat-header-cell>\\r\\n        <mat-cell *matCellDef=\\\"let investors\\\">\\r\\n          {{investors?.InvestorNameEng}}\\r\\n        </mat-cell>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"FatherNameEng\\\">\\r\\n        <mat-header-cell *matHeaderCellDef>የኢንቨስተሩ ስም</mat-header-cell>\\r\\n        <mat-cell *matCellDef=\\\"let investors\\\">\\r\\n          {{investors?.InvestorName}}\\r\\n        </mat-cell>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"RegistrationNumber\\\">\\r\\n        <mat-header-cell *matHeaderCellDef>License No</mat-header-cell>\\r\\n        <mat-cell *matCellDef=\\\"let investors\\\">\\r\\n          {{investors?.RegistrationNumber}}\\r\\n        </mat-cell>\\r\\n      </ng-container>\\r\\n\\r\\n\\r\\n      <ng-container matColumnDef=\\\"RegistrationDate\\\">\\r\\n        <mat-header-cell *matHeaderCellDef>Registration Date</mat-header-cell>\\r\\n        <mat-cell *matCellDef=\\\"let investors\\\">\\r\\n          {{investors.RegistrationDate | date}}\\r\\n        </mat-cell>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"Tin\\\">\\r\\n        <mat-header-cell *matHeaderCellDef>Tin</mat-header-cell>\\r\\n        <mat-cell *matCellDef=\\\"let investors\\\">\\r\\n          {{investors?.Tin}}\\r\\n        </mat-cell>\\r\\n      </ng-container>\\r\\n\\r\\n\\r\\n      <ng-container matColumnDef=\\\"actions\\\">\\r\\n        <mat-header-cell *matHeaderCellDef fxFlex=\\\"25%\\\">\\r\\n          <button mat-button color=\\\"primary\\\" (click)=\\\"editInvestor()\\\">\\r\\n            <mat-icon class=\\\"mat-button-icon\\\">add</mat-icon>\\r\\n            {{'common.commands.Add' | translate}}\\r\\n          </button>\\r\\n        </mat-header-cell>\\r\\n        <mat-header-cell *matHeaderCellDef fxFlex=\\\"28%\\\">\\r\\n        </mat-header-cell>\\r\\n        <mat-cell *matCellDef=\\\"let investor\\\" fxFlex=\\\"28%\\\">\\r\\n          <a class=\\\"margin-10 a-link pointer\\\" matTooltip=\\\"Click her to for detail\\\"\\r\\n             (click)=\\\"select(investor.InvestorId)\\\">\\r\\n            <mat-icon color=\\\"primary\\\">visibility</mat-icon>\\r\\n            <span>My Project</span>\\r\\n          </a>\\r\\n          <a class=\\\"a-link\\\" (click)=\\\"editInvestor(investor)\\\" type=\\\"button\\\">\\r\\n            <mat-icon>edit</mat-icon>\\r\\n            <span>edit</span>\\r\\n          </a>\\r\\n          <a class=\\\"a-link\\\" (click)=\\\"confirmDelete(investor)\\\">\\r\\n            <mat-icon color=\\\"warn\\\">delete</mat-icon>\\r\\n            <span>Delete</span>\\r\\n          </a>\\r\\n        </mat-cell>\\r\\n      </ng-container>\\r\\n      <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\">\\r\\n      </mat-header-row>\\r\\n      <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\">\\r\\n      </mat-row>\\r\\n    </mat-table>\\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n\\r\\n<mat-card class=\\\"margin-2\\\" *ngIf=\\\"!investorShow\\\">\\r\\n  <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" fxLayoutGap=\\\"2em\\\">\\r\\n\\r\\n    <div fxFlex=\\\"80\\\">\\r\\n      <!--<h5> Investor Name : {{invName}}</h5>-->\\r\\n      <!--<h5 style=\\\"text-transform: capitalize;\\\"> {{invName}}</h5>-->\\r\\n    </div>\\r\\n    <div fxFlex=\\\"18\\\">\\r\\n      <button class=\\\"margin-10 custom-button\\\"\\r\\n              matTooltip=\\\"Click her to add project\\\"\\r\\n              (click)=\\\"addProject()\\\">\\r\\n\\r\\n        <span>Add manger</span>\\r\\n      </button>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n\\r\\n\\r\\n  <mat-divider></mat-divider>\\r\\n  <mat-card-content>\\r\\n    <div fxFlex=\\\"100%\\\">\\r\\n\\r\\n      <div class=\\\"spinner-container\\\" *ngIf=\\\"loadingIndicator\\\">\\r\\n        <mat-progress-bar mode=\\\"query\\\"></mat-progress-bar>\\r\\n      </div>\\r\\n      <mat-table #table [dataSource]=\\\"dataSource2\\\">\\r\\n        <ng-container matColumnDef=\\\"No\\\">\\r\\n          <mat-header-cell [fxFlex]=\\\"6\\\" *matHeaderCellDef>No</mat-header-cell>\\r\\n          <mat-cell [fxFlex]=\\\"6\\\" *matCellDef=\\\"let projectList;let i=index;\\\">\\r\\n            {{i+1}}\\r\\n          </mat-cell>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"ProjectName\\\">\\r\\n          <mat-header-cell *matHeaderCellDef>Project Name</mat-header-cell>\\r\\n          <mat-cell *matCellDef=\\\"let projectList\\\">\\r\\n            {{projectList?.ProjectName}}\\r\\n          </mat-cell>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"ProjectDescription\\\">\\r\\n          <mat-header-cell *matHeaderCellDef>Project Description</mat-header-cell>\\r\\n          <mat-cell *matCellDef=\\\"let projectList\\\">\\r\\n\\r\\n            {{(projectList.ProjectDescription!=null) ? (projectList.ProjectDescription |\\r\\n            filterPipe:10): ''}}\\r\\n          </mat-cell>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"startDate\\\">\\r\\n          <mat-header-cell *matHeaderCellDef> Start Date</mat-header-cell>\\r\\n          <mat-cell *matCellDef=\\\"let projectList\\\">\\r\\n            {{projectList?.StartDate | date}}\\r\\n          </mat-cell>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"InvestmentActivity\\\">\\r\\n          <mat-header-cell *matHeaderCellDef> Investment Activity</mat-header-cell>\\r\\n          <mat-cell *matCellDef=\\\"let projectList\\\">\\r\\n            {{projectList?.InvestmentActivity?.DescriptionEnglish}}\\r\\n          </mat-cell>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"status\\\">\\r\\n          <mat-header-cell *matHeaderCellDef>Status</mat-header-cell>\\r\\n          <mat-cell *matCellDef=\\\"let projectList\\\">\\r\\n            <a style=\\\"color: #00bcd4;\\\" *ngIf=\\\"!projectList?.IsActive;\\\">\\r\\n              Pre-Implementation\\r\\n              <!--<mat-icon color=\\\"primary\\\" class=\\\"mat-18\\\">navigate_next</mat-icon>-->\\r\\n            </a>\\r\\n\\r\\n\\r\\n          </mat-cell>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"Action\\\">\\r\\n\\r\\n          <mat-header-cell [fxFlex]=\\\"30\\\" *matHeaderCellDef>Action\\r\\n\\r\\n          </mat-header-cell>\\r\\n\\r\\n          <mat-cell [fxFlex]=\\\"30\\\" *matCellDef=\\\"let projectList; let i=index\\\">\\r\\n            <div>\\r\\n              <!--<a class=\\\"a-link  pointer\\\" mat-min-fab matTooltip=\\\"Click here to edit the project\\\"-->\\r\\n              <!--(click)=\\\"editProject(projectList?.ProjectId,-->\\r\\n              <!--projectList?.ServiceApplicationId,-->\\r\\n              <!--projectList.ServiceId)\\\">-->\\r\\n              <!--<mat-icon color=\\\"primary\\\" class=\\\"mat-18\\\">edit</mat-icon>-->\\r\\n              <!--Edit-->\\r\\n              <!--</a>-->\\r\\n              <!--<a class=\\\" a-link pointer\\\" mat&#45;&#45;mini-fab color=\\\"warn\\\"-->\\r\\n              <!--matTooltip=\\\"Click here to delete the project\\\"-->\\r\\n              <!--(click)=\\\"deleteProject(projectList?.ProjectId)\\\">-->\\r\\n              <!--<mat-icon color=\\\"warn\\\">delete</mat-icon>-->\\r\\n              <!--Delete-->\\r\\n              <!--</a>-->\\r\\n              <a class=\\\" a-link pointer\\\" color=\\\"accent\\\" matTooltip=\\\"Click here for detail of the project\\\"\\r\\n                 (click)=\\\"projectDetail(projectList?.ProjectId)\\\">\\r\\n                <mat-icon color=\\\"primary\\\">visibility</mat-icon>\\r\\n                View\\r\\n              </a>\\r\\n\\r\\n            </div>\\r\\n          </mat-cell>\\r\\n        </ng-container>\\r\\n        <mat-header-row *matHeaderRowDef=\\\"displayedColumnsProject\\\">\\r\\n        </mat-header-row>\\r\\n        <mat-row *matRowDef=\\\"let row; columns: displayedColumnsProject;\\\">\\r\\n        </mat-row>\\r\\n      </mat-table>\\r\\n\\r\\n      <mat-paginator\\r\\n\\r\\n        #paginator\\r\\n        [pageSize]=\\\"4\\\"\\r\\n        [pageSizeOptions]=\\\"[5, 10, 20]\\\">\\r\\n      </mat-paginator>\\r\\n      <mat-divider></mat-divider>\\r\\n      <mat-card-actions class=\\\"margin-10\\\">\\r\\n        <button mat-raised-button=\\\"\\\" (click)=\\\"back()\\\" color=\\\"primary\\\">\\r\\n          <mat-icon class=\\\"mat-18\\\">arrow_back</mat-icon>\\r\\n          Back\\r\\n        </button>\\r\\n      </mat-card-actions>\\r\\n    </div>\\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n\"","module.exports = \".toolbar-icon {\\n  padding: 0 14px; }\\n\\n.toolbar-spacer {\\n  flex: 1 1 auto; }\\n\\n.toollbar-color {\\n  color: green; }\\n\\nmat-card {\\n  transition: box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);\\n  display: block;\\n  position: relative;\\n  padding: 0px !important;\\n  border-radius: 2px; }\\n\"","import {AfterViewInit, Component, OnInit, ViewChild} from '@angular/core';\r\n// tslint:disable-next-line:max-line-length\r\nimport {MatDialog, MatDialogRef, MatPaginator, MatSort, MatTableDataSource} from '@angular/material';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\n// import { SharedModule } from \"../../@custor/modules/shared.module\";\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Investor} from '../../model/investor';\r\nimport {InvestorService} from './investor.service';\r\nimport {Utilities} from '@custor/helpers/utilities';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {fadeInOut} from '@custor/services/animations';\r\n// import {ErrorMessage} from '../../../@custor/services/errMessageService';\r\nimport {AngConfirmDialogComponent} from '@custor/components/confirm-dialog/confirm-dialog.component';\r\nimport {AuthService} from '@custor/services/security/auth.service';\r\nimport {AccountService} from '@custor/services/security/account.service';\r\nimport {Permission} from '../../model/security/permission.model';\r\nimport {DataSharingService} from '../../Services/data-sharing.service';\r\nimport {ProjectModel} from '../../model/project.model';\r\nimport {ProjectProfileService} from '../../Services/project-profile.service';\r\n\r\n@Component({\r\n  selector: 'app-investor-list',\r\n  templateUrl: './investor-list.component.html',\r\n  styleUrls: ['./investor-list.component.scss'],\r\n  animations: [fadeInOut]\r\n})\r\n\r\nexport class InvestorListComponent implements OnInit, AfterViewInit {\r\n  selectedInvestor: Investor;\r\n  investors: Investor[];\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  isInvestor: boolean;\r\n  displayedColumns = ['FirstNameEng', 'FatherNameEng', 'RegistrationNumber', 'RegistrationDate', 'Tin', 'actions'];\r\n  dataSource: MatTableDataSource<Investor>;\r\n  dataSource2: any;\r\n\r\n  displayedColumnsProject = ['No', 'ProjectName', 'startDate', 'InvestmentActivity', 'status', 'Action'];\r\n  @ViewChild(MatPaginator) paginator2: MatPaginator;\r\n  sourceInvestor: Investor;\r\n  loadingIndicator: boolean;\r\n  dialogRef: any;\r\n  confirmDialogRef: MatDialogRef<AngConfirmDialogComponent>;\r\n  public investorShow = true;\r\n  private projectList: ProjectModel[];\r\n  private title: string;\r\n\r\n  constructor(private http: HttpClient,\r\n              private invService: InvestorService,\r\n              public projectService: ProjectProfileService,\r\n              private accountService: AccountService,\r\n              private authService: AuthService,\r\n              private dataSharing: DataSharingService,\r\n              private toastr: ToastrService, public dialog: MatDialog,\r\n              private router: Router, private route: ActivatedRoute) {\r\n    // Assign the data to the data source for the table to render\r\n    this.dataSource = new MatTableDataSource();\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.accountService.getUserType()) {\r\n      // console.log(this.accountService.currentUser.Tin);\r\n      this.isInvestor = this.accountService.getUserType();\r\n      if (this.accountService.currentUser.Tin !== 'null' && this.accountService.currentUser.Tin !== '') {\r\n        this.getInvestorsByUserId();\r\n      } else {\r\n        this.getInvestorsByUserId();\r\n      }\r\n    } else {\r\n      this.getInvestorsByUserId();\r\n\r\n    }\r\n  }\r\n\r\n  addProject() {\r\n    localStorage.setItem('ServiceId', '13');\r\n    setTimeout(() => this.dataSharing.steeperIndex.next(1), 0);\r\n\r\n    setTimeout(() => this.dataSharing.isNew.next(true), 0);\r\n    this.router.navigate(['pro/', 0]);\r\n  }\r\n\r\n  getInvestorsByTin() {\r\n    // if (!this.canViewInvestors) {\r\n    //     this.router.navigate(['denied']);\r\n    // }\r\n    this.loadingIndicator = true;\r\n    this.invService.getInvestorByTIN(this.accountService.currentUser.Tin)\r\n      .subscribe(result => {\r\n          // console.log(result);\r\n          this.investors = result;\r\n          if (!this.investors) {\r\n            this.toastr.error('No records were found to list', 'Error', {\r\n              closeButton: true,\r\n            });\r\n          } else {\r\n            this.dataSource.data = this.investors;\r\n          }\r\n        },\r\n        error => {\r\n          this.toastr.error(`Error: \"${Utilities.getHttpResponseMessage(error)}\"`);\r\n        });\r\n    this.loadingIndicator = false;\r\n  }\r\n\r\n  getInvestorsByUserId() {\r\n    // if (!this.canViewInvestors) {\r\n    //     this.router.navigate(['denied']);\r\n    // }\r\n    this.loadingIndicator = true;\r\n    this.invService.getInvestorByUserId(this.accountService.currentUser.Id)\r\n      .subscribe(result => {\r\n          // console.log(result);\r\n          this.investors = result;\r\n          if (!this.investors) {\r\n            this.toastr.error('No records were found to list', 'Error', {\r\n              closeButton: true,\r\n            });\r\n          } else {\r\n            this.dataSource.data = this.investors;\r\n          }\r\n        },\r\n        error => {\r\n          this.toastr.error(`Error: \"${Utilities.getHttpResponseMessage(error)}\"`);\r\n        });\r\n    this.loadingIndicator = false;\r\n  }\r\n\r\n\r\n  get canViewInvestors() {\r\n    return this.accountService.userHasPermission(Permission.viewInvestorsPermission);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  editInvestor(investor: Investor) {\r\n    // console.log(this.investors);\r\n    if (investor) {\r\n\r\n      this.router.navigate(['/investor-tab/1235/' + investor.InvestorId + '/' + 0+'/'+0], {relativeTo: this.route});\r\n    } else {\r\n      this.router.navigate(['/investor-tab/1235/0/0/0']);\r\n    }\r\n  }\r\n\r\n  confirmDelete(investor: Investor) {\r\n    this.confirmDialogRef = this.dialog.open(AngConfirmDialogComponent,\r\n      {\r\n        disableClose: false\r\n      });\r\n\r\n    this.confirmDialogRef.componentInstance.confirmMessage = 'Are you sure you want to delete?';\r\n    this.confirmDialogRef.afterClosed().subscribe(result => {\r\n      this.loadingIndicator = true;\r\n      if (result) {\r\n        this.invService.deleteInvestor(investor)\r\n          .subscribe(results => {\r\n              this.loadingIndicator = false;\r\n              this.dataSource.data = this.dataSource.data.filter(item => item !== investor);\r\n            },\r\n            error => {\r\n              // tslint:disable-next-line:max-line-length\r\n              this.toastr.error(\r\n                `An error occured whilst deleting the investor.\\r\\nError: \"${Utilities.getHttpResponseMessage(error)}\"`,\r\n                'Delete Error');\r\n            });\r\n      }\r\n      this.loadingIndicator = false;\r\n    });\r\n  }\r\n\r\n  select(InvestorId: any) {\r\n    localStorage.setItem('InvestorId', InvestorId);\r\n    this.loadingIndicator = true;\r\n    this.projectService.getProjectByInvestorId(InvestorId)\r\n      .subscribe(result => {\r\n          this.projectList = result;\r\n          // console.log(result);\r\n          this.title = 'ProjectDetail';\r\n          this.investorShow = false;\r\n          if (!this.projectList) {\r\n            this.loadingIndicator = false;\r\n            this.toastr.error('No records were found to list', 'Error', {\r\n              closeButton: true,\r\n            });\r\n          } else {\r\n            this.loadingIndicator = false;\r\n            this.dataSource2 = new MatTableDataSource<ProjectModel>(result);\r\n            // console.log(result);\r\n            this.dataSource2.paginator = this.paginator;\r\n          }\r\n        },\r\n        error => {\r\n          this.toastr.error(`Error: \"${Utilities.getHttpResponseMessage(error)}\"`);\r\n        });\r\n    this.loadingIndicator = false;\r\n\r\n  }\r\n\r\n  editProject(projectId: number, serviceApplicationId: any, serviceId: any) {\r\n    localStorage.setItem('ServiceApplicationId', serviceApplicationId);\r\n    localStorage.setItem('ServiceId', serviceId);\r\n    // localStorage.setItem('title', title);\r\n\r\n    setTimeout(() => this.dataSharing.steeperIndex.next(1), 0);\r\n\r\n    setTimeout(() => this.dataSharing.isNew.next(true), 0);\r\n    this.router.navigate(['pro/', projectId]);\r\n  }\r\n\r\n\r\n  projectDetail(id: number) {\r\n    // console.log(this.router.url);\r\n    this.router.navigate(['/service-detail', id]);\r\n  }\r\n\r\n  deleteProject(id: number) {\r\n    // console.log(id);\r\n    const response = confirm('Do you want to Delete this Project ?');\r\n    if (response === true) {\r\n      this.projectService.delete(id)\r\n        .subscribe(() => {\r\n          // this.getAllServiceApplication();\r\n        });\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  back() {\r\n    this.title = 'search';\r\n    this.investorShow = true;\r\n    this.getInvestorsByUserId();\r\n\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {EditInvestorComponent} from './investor-editor.component';\r\nimport {InvestorComponent} from './investor/investor.component';\r\nimport {InvestorListComponent} from './investor-list.component';\r\n\r\nconst route: Routes = [\r\n  {\r\n    path: '', component: InvestorComponent, children: [\r\n      {path: '', component: InvestorListComponent},\r\n      {path: 'list', component: InvestorListComponent},\r\n      {path: 'edit/:InvestorId', component: EditInvestorComponent},\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(route)],\r\n  exports: [RouterModule]\r\n})\r\nexport class InvestorRoutingModule {\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {SharedModule} from '@custor/modules/shared.module';\r\nimport {InvestorListComponent} from './investor-list.component';\r\nimport {EditInvestorComponent} from './investor-editor.component';\r\nimport {InvestorRoutingModule} from './investor-routing.module';\r\nimport {InvestorComponent} from './investor/investor.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    InvestorRoutingModule\r\n  ],\r\n  declarations: [\r\n    InvestorListComponent,\r\n    EditInvestorComponent,\r\n    InvestorComponent],\r\n  exports: [\r\n    InvestorListComponent,\r\n    EditInvestorComponent,\r\n    InvestorComponent]\r\n})\r\nexport class InvestorModule {\r\n}\r\n","module.exports = \"<router-outlet></router-outlet>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-investor',\r\n  templateUrl: './investor.component.html',\r\n  styleUrls: ['./investor.component.scss']\r\n})\r\nexport class InvestorComponent implements OnInit {\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class FormOfOwnershipModel {\r\n  public Id: number;\r\n  public Desc: string;\r\n}\r\n\r\n@Injectable()\r\nexport class CancellationReasonModel {\r\n  public Id: number;\r\n  public Desc: string;\r\n}\r\n"],"sourceRoot":""}