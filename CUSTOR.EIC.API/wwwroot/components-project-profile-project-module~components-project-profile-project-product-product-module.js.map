{"version":3,"sources":["webpack:///./src/app/Services/project-input.service.ts","webpack:///./src/app/Services/project-output.service.ts","webpack:///./src/app/Services/project-requirement.service.ts","webpack:///./src/app/components/project-profile/project-product/product-routing.module.ts","webpack:///./src/app/components/project-profile/project-product/product.module.ts","webpack:///./src/app/components/project-profile/project-product/project-product-list/project-product-list.component.html","webpack:///./src/app/components/project-profile/project-product/project-product-list/project-product-list.component.scss","webpack:///./src/app/components/project-profile/project-product/project-product-list/project-product-list.component.ts","webpack:///./src/app/components/project-profile/project-product/project-product.component.css","webpack:///./src/app/components/project-profile/project-product/project-product.component.html","webpack:///./src/app/components/project-profile/project-product/project-product.component.ts"],"names":[],"mappings":"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","file":"components-project-profile-project-module~components-project-profile-project-product-product-module.js","sourcesContent":["import {Injectable} from '@angular/core';\r\nimport {BaseService} from './Base.service';\r\nimport {ProjectInputModel} from '../model/ProjectInput.model';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {AppConfiguration} from '../config/appconfig';\r\nimport {Observable} from 'rxjs/internal/Observable';\r\nimport {catchError} from 'rxjs/operators';\r\nimport {ErrorMessage} from '../../@custor/services/errMessageService';\r\nimport {ProjectRequirementModel} from '../model/ProjectRequirement.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProjectInputService extends BaseService<ProjectInputModel> {\r\n  constructor(\r\n    protected http: HttpClient,\r\n    protected appConfig: AppConfiguration,\r\n    protected errMsg: ErrorMessage) {\r\n    super(http, appConfig.urls.url('pInput'), errMsg);\r\n  }\r\n\r\n  saveAll(resource: ProjectInputModel[]): Observable<any[]> {\r\n    return this.httpClient.post(this.appConfig.urls.url('pInput'), resource).pipe(\r\n      catchError(this.errMsg.parseObservableResponseError));\r\n  }\r\n\r\n\r\n\r\n  InputsByProject(projectId: any): Observable<ProjectInputModel[]> {\r\n    return this.httpClient.get(this.appConfig.urls.url('InputsByProject') + '/' + projectId).pipe(\r\n      catchError(this.errMsg.parseObservableResponseError));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BaseService } from './Base.service';\r\nimport { ProjectOutputModel } from '../model/ProjectOutput.model';\r\nimport { AppConfiguration } from '../config/appconfig';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ErrorMessage } from '../../@custor/services/errMessageService';\r\nimport { Observable } from 'rxjs/internal/Observable';\r\nimport { catchError, map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProjectOutputService extends BaseService<ProjectOutputModel> {\r\n  constructor(protected http: HttpClient,\r\n    public appConfig: AppConfiguration,\r\n    errMsg: ErrorMessage) {\r\n    super(http, appConfig.urls.url('pOutPut'), errMsg);\r\n  }\r\n\r\n  getPOutPutByProject(id: any): Observable<ProjectOutputModel[]> {\r\n    return this.httpClient.get<ProjectOutputModel>(this.appConfig.urls.url('pOutPutByProject') + '/' + id).pipe(\r\n      map((data: any) => data as ProjectOutputModel),\r\n      catchError(this.errMsg.parseObservableResponseError)\r\n    );\r\n  }\r\n  getPOutActual(id: any): Observable<ProjectOutputModel[]> {\r\n    return this.httpClient.get<ProjectOutputModel>(this.appConfig.urls.url('ActualProduct') + '/' + id).pipe(\r\n      map((data: any) => data as ProjectOutputModel),\r\n      catchError(this.errMsg.parseObservableResponseError)\r\n    );\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {BaseService} from './Base.service';\r\nimport {ProjectRequirementModel} from '../model/ProjectRequirement.model';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {AppConfiguration} from '../config/appconfig';\r\nimport {ErrorMessage} from '../../@custor/services/errMessageService';\r\nimport {Observable} from 'rxjs/internal/Observable';\r\nimport {catchError} from 'rxjs/operators';\r\nimport {ProjectCostModel} from \"../model/ProjectCost.model\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProjectRequirementService extends BaseService<ProjectRequirementModel> {\r\n  constructor(protected httpClient: HttpClient,\r\n              protected appConfig: AppConfiguration,\r\n              protected errMsg: ErrorMessage) {\r\n    super(httpClient, appConfig.urls.url('pRequirement'), errMsg);\r\n  }\r\n\r\n  RequirementByProject(projectId: any): Observable<ProjectRequirementModel> {\r\n    return this.httpClient.get(this.appConfig.urls.url('requirementByProject') + '/' + projectId).pipe(\r\n      catchError(this.errMsg.parseObservableResponseError));\r\n  }\r\n  getRequirementByProject(projectId: any): Observable<ProjectRequirementModel[]> {\r\n    return this.httpClient.get<ProjectRequirementModel[]>(this.appConfig.urls.url('requirementByProject') + '/' + projectId).pipe(\r\n      catchError(this.errMsg.parseObservableResponseError));\r\n  }\r\n\r\n  getAllRequirementByProject(id: any): Observable<ProjectRequirementModel> {\r\n    return this.httpClient.get<ProjectRequirementModel>(this.appConfig.urls.url('ActualCost') + '/' + id).pipe(\r\n      catchError(this.errMsg.parseObservableResponseError)\r\n    );\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {ProjectProductListComponent} from './project-product-list/project-product-list.component';\r\nimport {ProjectProductComponent} from './project-product.component';\r\n\r\nconst proRoutes: Routes = [\r\n  {path: '', component: ProjectProductListComponent},\r\n  {path: ':id', component: ProjectProductComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(proRoutes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ProductRoutingModule {\r\n\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {SharedModule} from '@custor/modules/shared.module';\r\nimport {ProductRoutingModule} from './product-routing.module';\r\nimport {ProjectProductListComponent} from './project-product-list/project-product-list.component';\r\nimport {ProjectProductComponent} from './project-product.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    ProductRoutingModule\r\n  ],\r\n  declarations: [ProjectProductListComponent, ProjectProductComponent],\r\n  exports: [ProjectProductListComponent, ProjectProductComponent]\r\n})\r\nexport class ProductModule {\r\n\r\n}\r\n","module.exports = \"<table style=\\\"height: 320px;display: block;overflow: auto;\\\" class=\\\"scrollbar table full-width\\\">\\r\\n  <thead>\\r\\n  <th>No</th>\\r\\n  <th>Product Name</th>\\r\\n  <th>Product Qty</th>\\r\\n  <th>Product Unit</th>\\r\\n  <th>Product Value</th>\\r\\n  <th>Domestic Market Share</th>\\r\\n  <th>Export Market Share</th>\\r\\n\\r\\n  <th>Remark</th>\\r\\n\\r\\n  </thead>\\r\\n  <tbody style=\\\"overflow: auto;\\\">\\r\\n  <tr class=\\\"planned\\\">\\r\\n    <td></td>\\r\\n    <td>{{plannedProductList?.ProductName}}</td>\\r\\n    <td>{{plannedProductList?.ProductQty}}</td>\\r\\n    <td>{{plannedProductList?.ProductUnit}}</td>\\r\\n    <td>{{plannedProductList?.ProductValue}}</td>\\r\\n    <td>{{plannedProductList?.DomesticMarketShare}}</td>\\r\\n    <td>{{plannedProductList?.ExportMarketShare}}</td>\\r\\n    <td>{{plannedProductList?.Remark}}</td>\\r\\n\\r\\n  </tr>\\r\\n  <tr *ngFor=\\\"let product of productList;let i=index;\\\">\\r\\n    <td>{{i+1}}</td>\\r\\n    <td>{{product.ProductName}}</td>\\r\\n    <td>{{product.ProductQty}}</td>\\r\\n    <td>{{product.ProductUnit}}</td>\\r\\n    <td>{{product.ProductValue}}</td>\\r\\n    <td>{{product.DomesticMarketShare}}</td>\\r\\n    <td>{{product.ExportMarketShare}}</td>\\r\\n    <td>{{product.Remark}}</td>\\r\\n\\r\\n  </tr>\\r\\n  </tbody>\\r\\n</table>\\r\\n\"","module.exports = \".table td {\\n  padding: 4px 14px 4px 5px;\\n  font-size: 13px;\\n  border-top: 1px solid #FAFAFA; }\\n\\n.table th {\\n  padding: 4px 14px 4px 5px;\\n  font-size: 13px;\\n  border-top: 1px solid #FAFAFA; }\\n\\ntable tbody tr:nth-child(2) td {\\n  border: 1px solid #0d8055;\\n  background-color: #0d8055;\\n  color: white;\\n  font-weight: bolder; }\\n\"","import {Component, OnInit} from '@angular/core';\r\nimport {ProjectOutputService} from '../../../../Services/project-output.service';\r\nimport {ProjectOutputModel} from '../../../../model/ProjectOutput.model';\r\nimport {ActivatedRoute} from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-project-product-list',\r\n  templateUrl: './project-product-list.component.html',\r\n  styleUrls: ['./project-product-list.component.scss']\r\n})\r\nexport class ProjectProductListComponent implements OnInit {\r\n  public productList: ProjectOutputModel[];\r\n  public plannedProductList: ProjectOutputModel;\r\n  private ProjectId: any;\r\n\r\n  constructor(public productService: ProjectOutputService,\r\n              private route: ActivatedRoute) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.ProjectId = this.route.snapshot.params['ProjectId'];\r\n\r\n    this.getProductAfterCare();\r\n    this.getPlannedProduct();\r\n  }\r\n\r\n  getProductAfterCare() {\r\n    this.productService.getPOutActual(this.ProjectId)\r\n      .subscribe(result => {\r\n        this.productList = result;\r\n      });\r\n  }\r\n\r\n  getPlannedProduct() {\r\n    this.productService.getPOutPutByProject(this.ProjectId)\r\n      .subscribe(result => {\r\n        this.plannedProductList = result[0];\r\n      });\r\n  }\r\n\r\n}\r\n","module.exports = \"mat-form-field {\\r\\n  width: 130px !important;\\r\\n}\\r\\n\\r\\nmat-header-row {\\r\\n  background-color: white;\\r\\n  border-top: 1px solid #f1f1f1;\\r\\n  border-bottom: 1px solid #f1f1f1 !important;\\r\\n}\\r\\n\\r\\n.mat-card-header {\\r\\n  min-height: 30px;\\r\\n  background-color: #fafafa;\\r\\n}\\r\\n\"","module.exports = \"<mat-card class=\\\"margin-2\\\" style=\\\"box-shadow: none;border: 1px solid #dddddd\\\">\\r\\n  <mat-card-subtitle class=\\\"sub-title\\\">\\r\\n    <!--<mat-icon class=\\\"mat-18\\\">add</mat-icon>-->\\r\\n    Add New Product or Services\\r\\n    <mat-divider></mat-divider>\\r\\n  </mat-card-subtitle>\\r\\n\\r\\n  <form [formGroup]=\\\"productForm\\\" novalidate>\\r\\n    <mat-card-content>\\r\\n\\r\\n      <div style=\\\"margin-bottom: 40px;\\\" *ngIf=\\\"ServiceId=='1234'\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\"\\r\\n           fxLayoutGap=\\\"2em\\\">\\r\\n        <div class=\\\"block\\\" fxFlex=\\\"\\\" style=\\\"margin-left: 20px\\\">\\r\\n          <mat-form-field>\\r\\n            <mat-label>Quarter</mat-label>\\r\\n            <mat-select formControlName=\\\"Quarter\\\" required>\\r\\n              <mat-option *ngFor=\\\"let row of Quarter\\\" [value]=\\\"row.Id\\\">\\r\\n                <span>{{row.DescriptionEnglish}}</span>\\r\\n              </mat-option>\\r\\n            </mat-select>\\r\\n          </mat-form-field>\\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"block\\\" fxFlex>\\r\\n          <mat-form-field>\\r\\n            <input placeholder=\\\"Registration Year* :\\\"\\r\\n                   matInput\\r\\n                   formControlName=\\\"RegistrationYear\\\"\\r\\n                   [matDatepicker]=\\\"RegistrationYear\\\">\\r\\n            <mat-datepicker-toggle matSuffix [for]=\\\"RegistrationYear\\\"></mat-datepicker-toggle>\\r\\n            <mat-datepicker #RegistrationYear></mat-datepicker>\\r\\n            <mat-error align=\\\"start\\\" *ngIf=\\\"formErrors.RegistrationYear\\\" class=\\\"form__error\\\">\\r\\n              {{ formErrors.RegistrationYear }}\\r\\n            </mat-error>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n        <!--<div class=\\\"block\\\" fxFlex=\\\"\\\">-->\\r\\n        <!---->\\r\\n        <!--<mat-form-field>-->\\r\\n        <!--<input #OSF type=\\\"number\\\" formControlName=\\\"CapitalRegistrationDatetime\\\" matInput-->\\r\\n        <!--placeholder=\\\"Capital Registration Datetime * :\\\">-->\\r\\n        <!---->\\r\\n        <!--</mat-form-field>-->\\r\\n        <!--</div>-->\\r\\n        <div class=\\\"block\\\" fxFlex=\\\"\\\">\\r\\n\\r\\n          <mat-form-field>\\r\\n            <mat-select [disabled]=\\\"true\\\" formControlName=\\\"ProjectStatus\\\" required>\\r\\n              <option value=\\\"0\\\">--Select--</option>\\r\\n              <label>Project Status</label>\\r\\n              <mat-option *ngFor=\\\"let status of projectStatus\\\" [value]=\\\"status.Id\\\">\\r\\n                <span>{{status.DescriptionEnglish}}</span>\\r\\n              </mat-option>\\r\\n            </mat-select>\\r\\n\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n      </div>\\r\\n      <mat-card-subtitle class=\\\"sub-title\\\">\\r\\n        Detail\\r\\n        <mat-divider></mat-divider>\\r\\n      </mat-card-subtitle>\\r\\n\\r\\n      <div fxLayout.xs=\\\"row wrap\\\"\\r\\n           fxLayoutAlign.xs=\\\"start center\\\"\\r\\n           fxLayoutGap=\\\"2em\\\">\\r\\n        <div class=\\\"block\\\" fxLayoutGap=\\\"2em\\\">\\r\\n          <mat-form-field [fxFlex]=\\\"18\\\">\\r\\n            <mat-label>Product Name</mat-label>\\r\\n            <input type=\\\"text\\\" matInput\\r\\n                   formControlName=\\\"ProductName\\\">\\r\\n            <mat-error align=\\\"start\\\" *ngIf=\\\"formErrors.ProductName\\\">{{ formErrors.ProductName }}</mat-error>\\r\\n          </mat-form-field>\\r\\n          <mat-form-field [fxFlex]=\\\"12\\\">\\r\\n            <mat-label>Product Quantity * :</mat-label>\\r\\n            <input type=\\\"number\\\" matInput\\r\\n                   formControlName=\\\"ProductQty\\\">\\r\\n            <mat-error align=\\\"start\\\" *ngIf=\\\"formErrors.ProductQty\\\">{{ formErrors.ProductQty }}</mat-error>\\r\\n\\r\\n          </mat-form-field>\\r\\n          <mat-form-field [fxFlex]=\\\"12\\\">\\r\\n            <mat-label>Product Unit * :</mat-label>\\r\\n\\r\\n\\r\\n            <mat-select formControlName=\\\"ProductUnit\\\" required>\\r\\n              <option value=\\\"0\\\">--Select--</option>\\r\\n              <mat-option *ngFor=\\\"let unit of unitTypes\\\" [value]=\\\"unit.Id\\\">\\r\\n                <span>{{unit.DescriptionEnglish}}</span>\\r\\n              </mat-option>\\r\\n            </mat-select>\\r\\n            <mat-error align=\\\"start\\\" *ngIf=\\\"formErrors.ProductUnit\\\">{{ formErrors.ProductUnit }}</mat-error>\\r\\n          </mat-form-field>\\r\\n          <mat-form-field [fxFlex]=\\\"12\\\">\\r\\n            <mat-label>Product Value * :</mat-label>\\r\\n            <input type=\\\"number\\\" matInput\\r\\n                   formControlName=\\\"ProductValue\\\">\\r\\n            <mat-error align=\\\"start\\\" *ngIf=\\\"formErrors.ProductValue\\\">{{ formErrors.ProductValue }}\\r\\n            </mat-error>\\r\\n          </mat-form-field>\\r\\n          <span formGroupName=\\\"sharePercent\\\">\\r\\n           <mat-form-field [fxFlex]=\\\"13\\\">\\r\\n             <mat-label>Domestic Market Share * :</mat-label>\\r\\n             <input #DMS type=\\\"number\\\" matInput\\r\\n                    formControlName=\\\"DomesticMarketShare\\\" [errorStateMatcher]=\\\"confirmValidParentMatcher\\\">\\r\\n             <mat-error align=\\\"start\\\" *ngIf=\\\"formErrors.DomesticMarketShare\\\">{{ formErrors.DomesticMarketShare }}\\r\\n             </mat-error>\\r\\n             <mat-error>\\r\\n                {{errors.ExportMarketShare}}\\r\\n            </mat-error>\\r\\n           </mat-form-field>\\r\\n           <mat-form-field [fxFlex]=\\\"13\\\">\\r\\n             <mat-label>Export Market Share * :</mat-label>\\r\\n             <input #EMS type=\\\"number\\\" matInput\\r\\n                    formControlName=\\\"ExportMarketShare\\\" [errorStateMatcher]=\\\"confirmValidParentMatcher\\\">\\r\\n                <mat-error>\\r\\n                {{errors.ExportMarketShare}}\\r\\n            </mat-error>\\r\\n           </mat-form-field>\\r\\n         </span>\\r\\n\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"block\\\" fxFlex=\\\"10%\\\">\\r\\n          <button [disabled]=\\\"!productForm.valid\\\" class=\\\"custom-button\\\" (click)=\\\"onSubmit()\\\">\\r\\n            <mat-icon color=\\\"accent\\\" class=\\\"mat-18\\\">done</mat-icon>\\r\\n            {{editMode ? 'Save' : 'Add'}}\\r\\n          </button>\\r\\n         \\r\\n        </div>\\r\\n      </div>\\r\\n    </mat-card-content>\\r\\n  </form>\\r\\n</mat-card>\\r\\n<mat-card class=\\\"margin-2 padding-0\\\" *ngIf=\\\"productData.length>0\\\">\\r\\n  <mat-card-header>\\r\\n    <mat-card-subtitle class=\\\"sub-title\\\">List of product\\r\\n      <!--<mat-divider></mat-divider>-->\\r\\n    </mat-card-subtitle>\\r\\n  </mat-card-header>\\r\\n  <mat-card-content>\\r\\n    <div class=\\\"spinner-container\\\" *ngIf=\\\"loading \\\">\\r\\n      <mat-progress-bar mode=\\\"query\\\"></mat-progress-bar>\\r\\n    </div>\\r\\n    <mat-table #table [dataSource]=\\\"dataSource\\\">\\r\\n      <ng-container style=\\\"width: 10px !important;\\\" matColumnDef=\\\"No\\\">\\r\\n        <mat-header-cell style=\\\"width: 10px !important;\\\" *matHeaderCellDef>No</mat-header-cell>\\r\\n        <mat-cell style=\\\"width: 10px !important;\\\" *matCellDef=\\\"let productData;let i=index;\\\">{{i+1}}</mat-cell>\\r\\n      </ng-container>\\r\\n\\r\\n      <ng-container matColumnDef=\\\"ProductName\\\">\\r\\n        <mat-header-cell *matHeaderCellDef>Product Name</mat-header-cell>\\r\\n        <mat-cell *matCellDef=\\\"let productData\\\"> {{productData.ProductName }}</mat-cell>\\r\\n      </ng-container>\\r\\n\\r\\n      <ng-container matColumnDef=\\\"ProductQty\\\">\\r\\n        <mat-header-cell *matHeaderCellDef>Project Description</mat-header-cell>\\r\\n        <mat-cell *matCellDef=\\\"let productData\\\"> {{productData.ProductQty }}</mat-cell>\\r\\n      </ng-container>\\r\\n\\r\\n      <!--<ng-container matColumnDef=\\\"ProductUnit\\\">-->\\r\\n      <!--<mat-header-cell *matHeaderCellDef> Product Unit</mat-header-cell>-->\\r\\n      <!--<mat-cell *matCellDef=\\\"let productData\\\"> {{productData.ProductUnit }}</mat-cell>-->\\r\\n      <!--</ng-container>-->\\r\\n\\r\\n      <ng-container matColumnDef=\\\"ProductValue\\\">\\r\\n        <mat-header-cell *matHeaderCellDef>Product Value</mat-header-cell>\\r\\n        <mat-cell *matCellDef=\\\"let productData\\\">{{productData.ProductValue }}</mat-cell>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"DomesticMarketShare\\\">\\r\\n        <mat-header-cell *matHeaderCellDef>Domestic Market Share</mat-header-cell>\\r\\n        <mat-cell *matCellDef=\\\"let productData\\\">\\r\\n          {{productData.DomesticMarketShare}}\\r\\n        </mat-cell>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"ExportMarketShare\\\">\\r\\n        <mat-header-cell *matHeaderCellDef>Export Market Share</mat-header-cell>\\r\\n        <mat-cell *matCellDef=\\\"let productData\\\">\\r\\n          {{productData.ExportMarketShare}}\\r\\n        </mat-cell>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"Remark\\\">\\r\\n        <mat-header-cell *matHeaderCellDef>Remark</mat-header-cell>\\r\\n        <mat-cell *matCellDef=\\\"let productData\\\">\\r\\n          {{productData.Remark}}\\r\\n        </mat-cell>\\r\\n      </ng-container>\\r\\n\\r\\n      <ng-container matColumnDef=\\\"Action\\\">\\r\\n        <mat-header-cell fxFlex=\\\"15\\\" *matHeaderCellDef>Action</mat-header-cell>\\r\\n        <mat-cell fxFlex=\\\"15\\\" *matCellDef=\\\"let productData;let i=index;\\\">\\r\\n          <div>\\r\\n            <a class=\\\"pointer\\\" mat-min-fab matTooltip=\\\"Click here to edit the product\\\"\\r\\n               (click)=\\\"onEditProduct(i)\\\">\\r\\n              <mat-icon color=\\\"primary\\\" class=\\\"mat-18\\\">edit</mat-icon>\\r\\n              Edit\\r\\n            </a>\\r\\n            <a class=\\\"pointer\\\" mat--mini-fab color=\\\"warn\\\" matTooltip=\\\"Click here to delete the product\\\"\\r\\n               (click)=\\\"deleteProduct(i,productData.ProjectOutputId)\\\">\\r\\n              <mat-icon color=\\\"warn\\\">delete</mat-icon>\\r\\n              Delete\\r\\n            </a>\\r\\n          </div>\\r\\n        </mat-cell>\\r\\n      </ng-container>\\r\\n      <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\">\\r\\n      </mat-header-row>\\r\\n      <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\">\\r\\n      </mat-row>\\r\\n    </mat-table>\\r\\n  </mat-card-content>\\r\\n  <div align=\\\"center\\\">\\r\\n    <div style=\\\"padding: 20px\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\" fxLayoutGap=\\\"2em\\\">\\r\\n\\r\\n      <div fxFlex=\\\"15\\\">\\r\\n\\r\\n        <!--<button class=\\\"custom-button\\\" (click)=\\\"next()\\\" color=\\\"warn\\\" type=\\\"button\\\">-->\\r\\n        <!--Back-->\\r\\n        <!--</button>-->\\r\\n      </div>\\r\\n      <div style=\\\"text-align: center\\\" fxFlex=\\\"67\\\" fxFlexAlign=\\\"center\\\">\\r\\n\\r\\n      </div>\\r\\n      <div fxFlex=\\\"15\\\">\\r\\n\\r\\n        <!--<button class=\\\"custom-button\\\" (click)=\\\"next()\\\" color=\\\"warn\\\" type=\\\"button\\\">-->\\r\\n        <!--Next-->\\r\\n        <!--</button>-->\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</mat-card>\\r\\n\\r\\n\"","import {AfterViewChecked, Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormControl, FormGroup, FormGroupDirective, NgForm, ValidatorFn, Validators} from '@angular/forms';\r\nimport {Subscription} from 'rxjs/Subscription';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {DataSharingService} from '../../../Services/data-sharing.service';\r\nimport {ProjectInputService} from '../../../Services/project-input.service';\r\nimport {ProjectRequirementService} from '../../../Services/project-requirement.service';\r\nimport {ProjectOutputService} from '../../../Services/project-output.service';\r\nimport {ErrorStateMatcher, MatSnackBar, MatTableDataSource} from '@angular/material';\r\nimport {ProjectOutputModel} from '../../../model/ProjectOutput.model';\r\nimport {Subject} from 'rxjs/Rx';\r\nimport {ErrorMessage} from '@custor/services/errMessageService';\r\nimport {FormService} from '@custor/validation/custom/form';\r\nimport {ActivatedRoute, Params} from '@angular/router';\r\nimport {ProjectProfileService} from '../../../Services/project-profile.service';\r\nimport {ProjectStatusModel, QuarterModel, UnitType} from '../../../model/lookupData';\r\nimport {ProjectStatus, Quarter, UnitTypes} from '@custor/const/consts';\r\n\r\n@Component({\r\n  selector: 'app-project-product',\r\n  templateUrl: './project-product.component.html',\r\n  styleUrls: ['./project-product.component.css']\r\n})\r\nexport class ProjectProductComponent implements OnInit, OnDestroy, AfterViewChecked {\r\n  productForm: FormGroup;\r\n  editMode = false;\r\n  loading = false;\r\n  projectId: number;\r\n  dataSource: any;\r\n  productEditIndex: number;\r\n  displayedColumns = [\r\n    'No', 'ProductName', 'ProductQty', 'ProductValue', 'DomesticMarketShare', 'ExportMarketShare', 'Remark',\r\n    'Action'\r\n  ];\r\n  subscription: Subscription;\r\n  formErrors = {\r\n    ProductName: '',\r\n    ProductQty: '',\r\n    ProductUnit: '',\r\n    ProductValue: '',\r\n    DomesticMarketShare: '',\r\n    ExportMarketShare: '',\r\n    Remark: '',\r\n    Quarter: '',\r\n    RegistrationYear: ''\r\n  };\r\n  productData: ProjectOutputModel[] = [];\r\n  productEdit: ProjectOutputModel;\r\n  public stepperIndex: number;\r\n\r\n\r\n  confirmValidParentMatcher = new ConfirmValidParentMatcher();\r\n\r\n  public errors = errorMessages;\r\n  public ServiceId: string | null;\r\n  public projectStatus: ProjectStatusModel[] = [];\r\n  public Quarter: QuarterModel[] = [];\r\n  public unitTypes: UnitType[] = [];\r\n  private InvestorId: any;\r\n  private workFlowId: any;\r\n  private ServiceApplicationId: any;\r\n\r\n  constructor(private formBuilder: FormBuilder,\r\n              private errMsg: ErrorMessage,\r\n              public route: ActivatedRoute,\r\n              public projectProfileService: ProjectProfileService,\r\n              private toastr: ToastrService,\r\n              private snackbar: MatSnackBar,\r\n              private dataSharing: DataSharingService,\r\n              private formService: FormService,\r\n              private dataSharingService: DataSharingService,\r\n              private pRequirementService: ProjectRequirementService,\r\n              private pInputService: ProjectInputService,\r\n              private pOutputService: ProjectOutputService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initStaticData('en');\r\n\r\n    this.ServiceId = this.route.snapshot.params['ServiceId'];\r\n    this.InvestorId = this.route.snapshot.params['InvestorId'];\r\n    this.workFlowId = this.route.snapshot.params['workFlowId'];\r\n    this.ServiceApplicationId = this.route.snapshot.params['ServiceApplicationId'];\r\n    this.projectId = this.route.snapshot.params['ProjectId'];\r\n\r\n    if (this.ServiceId === '1234') {\r\n      this.getProjectStatus(this.projectId);\r\n    }\r\n\r\n    if (this.projectId > 1 && this.ServiceId == '13') {\r\n      this.getProjectOutPut();\r\n    }\r\n    this.initForm();\r\n\r\n    this.autoSum();\r\n  }\r\n\r\n  getProjectOutPut() {\r\n    this.pOutputService.getPOutPutByProject(this.projectId).subscribe(result => {\r\n      if (result.length > 0) {\r\n        this.productData = result;\r\n        this.dataSource = new MatTableDataSource<ProjectOutputModel>(this.productData);\r\n        this.loading = false;\r\n      }\r\n    }, error => this.errMsg.getError(error));\r\n  }\r\n\r\n  onSubmit() {\r\n    this.productForm.removeControl('ProjectOutputId');\r\n    this.formService.markFormGroupTouched(this.productForm);\r\n    if (this.productForm.valid) {\r\n      if (!this.editMode) {\r\n        this.pOutputService.create(this.getProjectOutputData())\r\n          .subscribe((result: ProjectOutputModel) => {\r\n            this.productForm.addControl('ProjectOutputId', new FormControl(''));\r\n            this.notification('saved');\r\n            if (this.productData.length < 1) {\r\n              // setTimeout(() => this.dataSharing.steeperIndex.next(7), 0);\r\n              setTimeout(() => this.dataSharing.currentIndex.next(8), 0);\r\n            }\r\n            this.productData.push(result);\r\n            this.dataSource = new MatTableDataSource<ProjectOutputModel>(this.productData);\r\n            this.onClear();\r\n          }, error => this.toastr.error(this.errMsg.getError(error)));\r\n      } else {\r\n        this.pOutputService.update(this.getProjectOutputData(), this.productData[this.productEditIndex].ProjectOutputId)\r\n          .subscribe(result => {\r\n            this.notification('updated');\r\n            this.productData[this.productEditIndex] = result;\r\n            this.dataSource = new MatTableDataSource<ProjectOutputModel>(this.productData);\r\n            this.onClear();\r\n          }, error => this.toastr.error(this.errMsg.getError(error)));\r\n      }\r\n    } else {\r\n      this.formErrors = this.formService.validateForm(this.productForm, this.formErrors, false);\r\n    }\r\n  }\r\n\r\n  onClear() {\r\n    this.editMode = false;\r\n    this.productForm.reset();\r\n    this.productForm.patchValue({\r\n      ProjectId: this.projectId\r\n    });\r\n    this.productForm.patchValue({\r\n      workFlowId: this.workFlowId\r\n    });\r\n  }\r\n\r\n  initForm() {\r\n    this.productForm = this.formBuilder.group({\r\n      ProjectId: new FormControl(this.projectId),\r\n      ProjectOutputId: new FormControl(''),\r\n      workFlowId: new FormControl(this.workFlowId),\r\n      ProductName: new FormControl('', [Validators.required, Validators.minLength(2)]),\r\n      ProductQty: new FormControl(0, [Validators.required, Validators.min(0)]),\r\n      ProductUnit: new FormControl('', [Validators.required]),\r\n      ProductValue: new FormControl(0, [Validators.required, Validators.min(0)]),\r\n      Quarter: [''],\r\n      RegistrationYear: [''],\r\n      ProjectStatus: [''],\r\n      sharePercent: this.formBuilder.group({\r\n        DomesticMarketShare: [0, [\r\n          Validators.required, Validators.min(0)\r\n        ]],\r\n        ExportMarketShare: [0, Validators.required]\r\n      }, {validator: this.childrenEqual}),\r\n      Remark: new FormControl('', [Validators.minLength(2)])\r\n    });\r\n  }\r\n\r\n  private getProjectOutputData(): ProjectOutputModel {\r\n    const formModel = this.productForm.value;\r\n\r\n    return {\r\n      ProjectId: formModel.ProjectId,\r\n      // ProjectOutputId: '',\r\n      workFlowId: formModel.workFlowId,\r\n      ProductName: formModel.ProductName,\r\n      ProductQty: formModel.ProductQty,\r\n      ProductUnit: formModel.ProductUnit,\r\n      ProductValue: formModel.ProductValue,\r\n      DomesticMarketShare: formModel.sharePercent.DomesticMarketShare,\r\n      ExportMarketShare: formModel.sharePercent.ExportMarketShare,\r\n      Quarter: formModel.Quarter,\r\n      RegistrationYear: formModel.RegistrationYear,\r\n      ProjectStatus: formModel.ProjectStatus,\r\n      // IsExisting: formModel.IsExisting,\r\n      Remark: formModel.Remark\r\n    };\r\n  }\r\n\r\n  childrenEqual: ValidatorFn = (formGroup: FormGroup) => {\r\n    const [firstControlName, ...otherControlNames] = Object.keys(formGroup.controls || {});\r\n    const isValid = otherControlNames.every(controlName => formGroup.get(controlName).value + formGroup.get(firstControlName).value === 100);\r\n    return isValid ? null : {childrenNotEqual: true};\r\n  };\r\n\r\n\r\n  ngOnDestroy(): void {\r\n    // this.subscription.unsubscribe();\r\n  }\r\n\r\n  notification(message: string) {\r\n    this.loading = false;\r\n    this.toastr.success(` Succesfully ${message} Data.!`, 'Success');\r\n\r\n    this.snackbar.open(` Succesfully ${message} Data.!`, 'Close', {\r\n      duration: 3000,\r\n    });\r\n  }\r\n\r\n  deleteProduct(index: number, id: number) {\r\n    this.pOutputService.delete(id)\r\n      .subscribe(() => {\r\n        this.notification('Deleted');\r\n        this.productData.splice(index, 1);\r\n        this.dataSource = new MatTableDataSource<ProjectOutputModel>(this.productData);\r\n      });\r\n  }\r\n\r\n  onEditProduct(index: number) {\r\n    this.editMode = true;\r\n    this.productEditIndex = index;\r\n    this.productEdit = this.productData[index];\r\n    this.productForm.patchValue(this.productEdit);\r\n    this.productForm.get('sharePercent').patchValue(\r\n      {\r\n        DomesticMarketShare: this.productEdit.DomesticMarketShare,\r\n        ExportMarketShare: this.productEdit.ExportMarketShare\r\n      }\r\n    );\r\n  }\r\n\r\n  ngAfterViewChecked(): void {\r\n    // this.productForm.patchValue({\r\n    //   ProjectId: localStorage.getItem('ProjectId')\r\n    // });\r\n    // this.productForm.patchValue({\r\n    //   workFlowId: localStorage.getItem('workFlowId')\r\n    // });\r\n  }\r\n\r\n  next() {\r\n    this.dataSharing.steeperIndex.next(7);\r\n\r\n  }\r\n\r\n\r\n  initStaticData(currentLang) {\r\n\r\n    let unit: UnitType = new UnitType();\r\n    UnitTypes.forEach(pair => {\r\n      unit = {\r\n        'Id': pair.Id.toString(),\r\n        'DescriptionEnglish': pair.DescriptionEnglish,\r\n        'Description': pair.Description\r\n      };\r\n      this.unitTypes.push(unit);\r\n    });\r\n\r\n\r\n    let projectStatus1: ProjectStatusModel = new ProjectStatusModel();\r\n    ProjectStatus.forEach(pair => {\r\n      projectStatus1 = {\r\n        'Id': pair.Id.toString(),\r\n        'DescriptionEnglish': pair.DescriptionEnglish,\r\n        'Description': pair.Description\r\n      };\r\n      this.projectStatus.push(projectStatus1);\r\n    });\r\n\r\n    let Quarter1: QuarterModel = new QuarterModel();\r\n    Quarter.forEach(pair => {\r\n      Quarter1 = {\r\n        'Id': pair.Id.toString(),\r\n        'DescriptionEnglish': pair.DescriptionEnglish,\r\n        'Description': pair.Description\r\n      };\r\n      this.Quarter.push(Quarter1);\r\n    });\r\n\r\n  }\r\n\r\n\r\n  private getProjectStatus(projectId: any) {\r\n    this.projectProfileService.getProjectStatus(projectId)\r\n      .subscribe(result => {\r\n        this.productForm.patchValue({\r\n          ProjectStatus: result.toString()\r\n        });\r\n      });\r\n  }\r\n\r\n  private autoSum() {\r\n    this.productForm.get('sharePercent').get('DomesticMarketShare')\r\n      .valueChanges.subscribe(result => {\r\n      this.productForm.get('sharePercent').patchValue({\r\n        ExportMarketShare: 100 - result\r\n      });\r\n    });\r\n\r\n\r\n  }\r\n}\r\n\r\n/**\r\n * Custom ErrorStateMatcher which returns true (error exists) when the parent form group is invalid and the control has been touched\r\n */\r\nexport class ConfirmValidParentMatcher implements ErrorStateMatcher {\r\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\r\n    return control.parent.invalid && control.touched;\r\n  }\r\n}\r\n\r\n/**\r\n * Collection of reusable RegExps\r\n */\r\nexport const regExps: { [key: string]: RegExp } = {\r\n  password: /^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{7,15}$/\r\n};\r\n\r\n/**\r\n * Collection of reusable error messages\r\n */\r\nexport const errorMessages: { [key: string]: string } = {\r\n  ExportMarketShare: 'Sum of Market Share  must be  100 %'\r\n};\r\n"],"sourceRoot":""}