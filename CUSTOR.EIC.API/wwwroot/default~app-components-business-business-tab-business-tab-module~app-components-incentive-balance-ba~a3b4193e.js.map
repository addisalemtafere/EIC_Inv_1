{"version":3,"sources":["webpack:///./src/app/Services/service-application.service.ts","webpack:///./src/app/components/project-profile/notification/notification.component.html","webpack:///./src/app/components/project-profile/notification/notification.component.scss","webpack:///./src/app/components/project-profile/notification/notification.component.ts"],"names":[],"mappings":"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","file":"default~app-components-business-business-tab-business-tab-module~app-components-incentive-balance-ba~a3b4193e.js","sourcesContent":["import {Injectable} from '@angular/core';\r\nimport {BaseService} from './Base.service';\r\nimport {ServiceApplicationModel} from '../model/ServiceApplication.model';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {AppConfiguration} from '../config/appconfig';\r\nimport {ErrorMessage} from '../../@custor/services/errMessageService';\r\nimport {catchError} from 'rxjs/internal/operators';\r\nimport {Observable} from 'rxjs';\r\nimport {ServiceGroupModel} from '../model/ServiceGroup.Model';\r\nimport {ConfigurationService} from \"@custor/services/configuration.service\";\r\n\r\n@Injectable(\r\n  {\r\n  providedIn: 'root'\r\n}\r\n)\r\n\r\nexport class ServiceApplicationService extends BaseService<ServiceApplicationModel> {\r\n  constructor(\r\n    protected http: HttpClient,\r\n    protected appConfig: AppConfiguration,\r\n    protected  errMsg: ErrorMessage,\r\n    protected config:ConfigurationService\r\n  ) {\r\n    super(http, appConfig.urls.url('ServiceApplications'), errMsg);\r\n  }\r\n  changeApplicationStatus(resource, id) {\r\n    return this.httpClient.post(this.appConfig.urls.url('ChangeApplicationStatus', id), resource).pipe(\r\n      catchError(this.errMsg.parseObservableResponseError));\r\n  }\r\n\r\n  changeInvestorApplicationStatus(resource, id) {\r\n    return this.httpClient.post(this.appConfig.urls.url('ChangeInvestorApplicationStatus', id), resource).pipe(\r\n      catchError(this.errMsg.parseObservableResponseError));\r\n  }\r\n\r\n  getApplicationGroupByServiceId(): Observable<ServiceGroupModel[]> {\r\n    return this.httpClient.get<ServiceGroupModel[]>(this.appConfig.urls.url('ApplicationGroupByServiceId')).pipe(\r\n      catchError(this.errMsg.parseObservableResponseError));\r\n  }\r\n\r\n  getProjectsGroupBySectorId(): Observable<ServiceGroupModel[]> {\r\n    return this.httpClient.get<ServiceGroupModel[]>(this.appConfig.urls.url('ProjectGroupByStage')).pipe(\r\n      catchError(this.errMsg.parseObservableResponseError));\r\n  }\r\n\r\n  getProjectsGroupByEconomicSector(): Observable<ServiceGroupModel[]> {\r\n    return this.httpClient.get<ServiceGroupModel[]>(this.appConfig.urls.url('ProjectGroupByEconomicSector')).pipe(\r\n      catchError(this.errMsg.parseObservableResponseError));\r\n  }\r\n\r\n  getAllProjectsProjectStage(): Observable<ServiceGroupModel[]> {\r\n    return this.httpClient.get<ServiceGroupModel[]>(this.appConfig.urls.url('AllProjectByProjectStage')).pipe(\r\n      catchError(this.errMsg.parseObservableResponseError));\r\n  }\r\n\r\n  getServiceApplicationWithInvestor(serviceApplicationId: any) {\r\n    return this.httpClient.get<ServiceGroupModel[]>(\r\n      this.appConfig.urls.url('ServiceApplicationWithInvestor', serviceApplicationId)\r\n    ).pipe(catchError(this.errMsg.parseObservableResponseError));\r\n  }\r\n\r\n  getServiceApplicationById(serviceApplicationId: any) {\r\n    return this.httpClient.get<ServiceGroupModel[]>(\r\n      this.appConfig.urls.url('ServiceApplicationById', serviceApplicationId)\r\n    ).pipe(catchError(this.errMsg.parseObservableResponseError));\r\n  }\r\n\r\n \r\n}\r\n","module.exports = \"<div style=\\\"margin-bottom: 20px;\\\">\\r\\n  <span class=\\\"sub-title\\\">Message</span>\\r\\n  <mat-divider></mat-divider>\\r\\n</div>\\r\\n<div>\\r\\n\\r\\n  <form [formGroup]=\\\"notificationForm\\\">\\r\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" fxLayoutGap=\\\"2em\\\">\\r\\n      <div class=\\\"block  \\\" fxFlex=\\\"\\\">\\r\\n        <mat-form-field class=\\\"demo-full-width\\\">\\r\\n          <mat-label>Officer Name:</mat-label>\\r\\n          <input formControlName=\\\"FromUserId\\\" matInput>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"block\\\" fxFlex=\\\"\\\">\\r\\n        <mat-form-field class=\\\"demo-full-width\\\">\\r\\n          <mat-label>To:</mat-label>\\r\\n          <input formControlName=\\\"ToUserId\\\" matInput value=\\\"{{investorName}}\\\">\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" fxLayoutGap=\\\"2em\\\">\\r\\n      <mat-form-field fxFlex=\\\"45\\\">\\r\\n        <mat-select formControlName=\\\"CurrentStatus\\\"\\r\\n                    placeholder=\\\"Select Your Decision \\\">\\r\\n          <mat-option value=\\\"{{applicationStatusEnum.Pending}}\\\">In Complete</mat-option>\\r\\n          <mat-option value=\\\"{{applicationStatusEnum.approved}}\\\">Approve</mat-option>\\r\\n          <mat-option value=\\\"{{applicationStatusEnum.Rejected}}\\\">Reject</mat-option>\\r\\n        </mat-select>\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n    <p>\\r\\n      <mat-form-field style=\\\"height: 50px;\\\"\\r\\n                      class=\\\"demo-full-width\\\">\\r\\n        <mat-label>Message</mat-label>\\r\\n        <textarea class=\\\"full-width message-body\\\"\\r\\n                  formControlName=\\\"Message\\\" matInput\\r\\n                  row=\\\"10\\\">\\r\\n\\r\\n        </textarea>\\r\\n      </mat-form-field>\\r\\n    </p>\\r\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" fxLayoutGap=\\\"2em\\\">\\r\\n      <div class=\\\"block\\\" fxFlex=\\\"\\\">\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n  </form>\\r\\n  <!--<mat-divider></mat-divider>-->\\r\\n\\r\\n  <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" fxLayoutGap=\\\"2em\\\">\\r\\n    <button style=\\\"margin-top: 20px;\\\" mat-raised-button\\r\\n            (click)=\\\"sendMessage()\\\"\\r\\n            color=\\\"primary\\\" mat-dialog-clos>\\r\\n      Send Message\\r\\n    </button>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \".demo-full-width {\\n  width: 100%; }\\n\\n.mat-dialog-container {\\n  padding: 3px !important; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9jb21wb25lbnRzL3Byb2plY3QtcHJvZmlsZS9ub3RpZmljYXRpb24vQzpcXFVzZXJzXFxGZXRpaGEgS1xcRGVza3RvcFxcREVWXFxHaXRMYWJcXEludmVzdG1uZXRcXENVU1RPUi5FSUMuQVBJXFxzcmMvYXBwXFxjb21wb25lbnRzXFxwcm9qZWN0LXByb2ZpbGVcXG5vdGlmaWNhdGlvblxcbm90aWZpY2F0aW9uLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBVyxFQUFBOztBQUdiO0VBQ0UsdUJBQXVCLEVBQUEiLCJmaWxlIjoiYXBwL2NvbXBvbmVudHMvcHJvamVjdC1wcm9maWxlL25vdGlmaWNhdGlvbi9ub3RpZmljYXRpb24uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZGVtby1mdWxsLXdpZHRoIHtcclxuICB3aWR0aDogMTAwJTtcclxufVxyXG5cclxuLm1hdC1kaWFsb2ctY29udGFpbmVyIHtcclxuICBwYWRkaW5nOiAzcHggIWltcG9ydGFudDtcclxufVxyXG4iXX0= */\"","import {AfterContentChecked, AfterContentInit, AfterViewChecked, Component, Inject, OnInit} from '@angular/core';\r\nimport {AccountService} from '../../../../@custor/services/security/account.service';\r\nimport {ServiceApplicationModel} from '../../../model/ServiceApplication.model';\r\nimport {ServiceApplicationService} from '../../../Services/service-application.service';\r\nimport {NotificationService} from '../../../Services/notification.service';\r\nimport {FormBuilder, FormGroup} from '@angular/forms';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {ServiceService} from '../../../Services/service.service';\r\nimport {ServiceModel} from '../../../model/Service.model';\r\nimport {ActivatedRoute, Router, RouterModule} from '@angular/router';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material\";\r\nimport {ApplicationStatusEnum} from \"../../../enum/enums\";\r\n\r\n@Component({\r\n  selector: 'app-notification',\r\n  templateUrl: './notification.component.html',\r\n  styleUrls: ['./notification.component.scss']\r\n})\r\nexport class NotificationComponent implements OnInit, AfterContentChecked, AfterContentInit {\r\n  userName: string;\r\n  investorName: string;\r\n  UserId: string;\r\n  notificationForm: FormGroup;\r\n  InvestorId: any;\r\n  private ServiceApplicationId: any;\r\n  templateMessage = 'Message';\r\n  private allServices: ServiceModel[];\r\n  public applicationStatusEnum = ApplicationStatusEnum;\r\n\r\n  constructor(\r\n    public accountService: AccountService,\r\n    public notificationService: NotificationService,\r\n    public fb: FormBuilder,\r\n    public toast: ToastrService,\r\n    public route: ActivatedRoute,\r\n    public router: Router,\r\n    private serviceService: ServiceService,\r\n    private dialogRef: MatDialogRef<NotificationComponent>,\r\n    @Inject(MAT_DIALOG_DATA) data,\r\n    public serviceApplicationService: ServiceApplicationService) {\r\n    this.ServiceApplicationId = data.ServiceApplicationId;\r\n    // alert(\"here\");\r\n    // alert(this.ServiceApplicationId)\r\n    console.log(this.ServiceApplicationId)\r\n  }\r\n\r\n  ngOnInit() {\r\n    \r\n    // this.ServiceId = this.route.snapshot.params['ServiceId'];\r\n    // this.InvestorId = this.route.snapshot.params['InvestorId'];\r\n    // this.workFlowId = this.route.snapshot.params['workFlowId'];\r\n    // this.ServiceApplicationId = this.route.snapshot.params['ServiceApplicationId'];\r\n    this.userName = this.accountService.currentUser.FullName;\r\n    // this.getServiceApplication(this.ServiceApplicationId);\r\n    this.initForm();\r\n    this.getAllService();\r\n\r\n  }\r\n\r\n  getServiceApplication(id: any) {\r\n    this.serviceApplicationService.getServiceApplicationWithInvestor(id)\r\n      .subscribe((result: ServiceApplicationModel) => {\r\n        console.log(result);\r\n        this.investorName = result.Investor.InvestorNameEng;\r\n        // this.ServiceApplicationId = result.ServiceApplicationId;\r\n        this.UserId = result.Investor.UserId;\r\n        console.log(result.Investor.UserId);\r\n        console.log(this.UserId);\r\n\r\n        this.InvestorId = result.InvestorId;\r\n        this.templateMessage = 'Dear ' +\r\n          this.investorName +\r\n          ', We have already  received  your application request for ' +\r\n          this.getServiceName(result.ServiceId) + ' ' +\r\n          '(case number ' + this.ServiceApplicationId + ').' +\r\n          ' Your Application has been reviewed by our officer  ';\r\n        this.notificationForm.patchValue({\r\n          ToUserId: this.UserId,\r\n          UserId: this.UserId,\r\n          ServiceApplicationId: this.ServiceApplicationId,\r\n          Message: this.templateMessage,\r\n        });\r\n        console.log(this.notificationForm.value);\r\n      });\r\n  }\r\n\r\n  initForm() {\r\n    console.log(this.ServiceApplicationId);\r\n    this.notificationForm = this.fb.group({\r\n      Subject: 'EIC Notification',\r\n      UserId: this.UserId,\r\n      ServiceApplicationId: this.ServiceApplicationId,\r\n      CurrentStatus: '',\r\n      Message: '',\r\n      ToUserId: this.UserId,\r\n      FromUserId: this.accountService.currentUser.FullName\r\n\r\n    });\r\n  }\r\n\r\n  sendMessage() {\r\n    this.notificationService.create(this.notificationForm.value)\r\n      .subscribe(result => {\r\n        // console.log(result);\r\n        // this.router.navigate(['/officer/' + serviceId + '/' + investorId + '/' + id + '/' + workFlowId + '/' + projectId]);\r\n        this.toast.success('message has been sent', 'Message');\r\n        this.router.navigate(['/officer-dashboard']);\r\n      });\r\n  }\r\n\r\n  getAllService() {\r\n    this.serviceService.getAll()\r\n      .subscribe(result => {\r\n        this.allServices = result;\r\n      });\r\n  }\r\n\r\n\r\n  getServiceName(serviceId: any): any {\r\n    for (const services of this.allServices) {\r\n      if (services.ServiceId === serviceId) {\r\n        return services.NameEnglish;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  ngAfterViewChecked(): void {\r\n\r\n  }\r\n\r\n  ngAfterContentChecked(): void {\r\n    // console.log(\"notifications\")\r\n    // this.getServiceApplication(this.ServiceApplicationId);\r\n\r\n  }\r\n\r\n  ngAfterContentInit(): void {\r\n    this.getServiceApplication(this.ServiceApplicationId);\r\n\r\n  }\r\n\r\n\r\n}\r\n"],"sourceRoot":""}