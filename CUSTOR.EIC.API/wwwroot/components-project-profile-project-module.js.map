{"version":3,"sources":["webpack:///./src/@custor/validation/custom/custom_validators.ts","webpack:///./src/app/Services/project-associate.service.ts","webpack:///./src/app/components/project-profile/project-associate/project-associate.component.html","webpack:///./src/app/components/project-profile/project-associate/project-associate.component.scss","webpack:///./src/app/components/project-profile/project-associate/project-associate.component.ts","webpack:///./src/app/components/project-profile/project-input/project-input-output.component.css","webpack:///./src/app/components/project-profile/project-input/project-input-output.component.html","webpack:///./src/app/components/project-profile/project-input/project-input-output.component.ts","webpack:///./src/app/components/project-profile/project-profile-form/project-profile-form.component.css","webpack:///./src/app/components/project-profile/project-profile-form/project-profile-form.component.html","webpack:///./src/app/components/project-profile/project-profile-form/project-profile-form.component.ts","webpack:///./src/app/components/project-profile/project-profile.component.css","webpack:///./src/app/components/project-profile/project-profile.component.html","webpack:///./src/app/components/project-profile/project-profile.component.ts","webpack:///./src/app/components/project-profile/project-routing.module.ts","webpack:///./src/app/components/project-profile/project-stepper/project-stepper.component.css","webpack:///./src/app/components/project-profile/project-stepper/project-stepper.component.html","webpack:///./src/app/components/project-profile/project-stepper/project-stepper.component.ts","webpack:///./src/app/components/project-profile/project.module.ts","webpack:///./src/app/model/EnumModel.ts"],"names":[],"mappings":"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","file":"components-project-profile-project-module.js","sourcesContent":["import {FormControl, FormGroup, ValidationErrors, ValidatorFn, Validators} from '@angular/forms';\r\n\r\n// setup simple regex for white listed characters\r\nconst validCharacters = /[^\\s\\w,.:&\\/()+%'`@-]/;\r\n\r\n// create your class that extends the angular validator class\r\nexport class CustomValidators extends Validators {\r\n  // create a static method for your validation\r\n  static validateCharacters(control: FormControl) {\r\n    // first check if the control has a value\r\n    if (control.value && control.value.length > 0) {\r\n      // match the control value against the regular expression\r\n      const matches = control.value.match(validCharacters);\r\n\r\n      // if there are matches return an object, else return null.\r\n      return matches && matches.length ? {invalid_characters: matches} : null;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  static equityFinance(control: FormControl) {\r\n    // first check if the control has a value\r\n    if (control.value && control.value.length > 0) {\r\n      // match the control value against the regular expression\r\n      const matches = control.value.match(validCharacters);\r\n\r\n      // if there are matches return an object, else return null.\r\n      return matches && matches.length ? {invalid_characters: matches} : null;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n\r\n  static sumOfSourceFinanceValidator: ValidatorFn = (control: FormGroup): ValidationErrors | null => {\r\n    const loanFinance = control.get('LoanFinance');\r\n    const equityFinance = control.get('EquityFinance');\r\n    const otherSourceFinance = control.get('OtherSourceFinance');\r\n    const total = control.get('Total');\r\n    const sourceTotal = loanFinance.value + equityFinance.value + otherSourceFinance.value;\r\n    // console.log(total.value);\r\n    // console.log(sourceTotal.value);\r\n    return total.value !== sourceTotal ? {'sumIsNotEqual': true} : null;\r\n  };\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {AppConfiguration} from '../config/appconfig';\r\nimport {ErrorMessage} from '@custor/services/errMessageService';\r\nimport {BaseService} from './Base.service';\r\nimport {ProjectAssociateModel} from '../model/ProjectAssociate.model';\r\nimport {catchError} from 'rxjs/operators';\r\nimport {Observable} from 'rxjs/internal/Observable';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProjectAssociateService extends BaseService<ProjectAssociateModel> {\r\n\r\n  constructor(\r\n    protected http: HttpClient,\r\n    protected appConfig: AppConfiguration,\r\n    protected  errMsg: ErrorMessage) {\r\n    super(http, appConfig.urls.url('ProjectAssociates'), errMsg);\r\n  }\r\n\r\n  associateProject(projectId: any): Observable<ProjectAssociateModel[]> {\r\n    return this.httpClient.get(this.appConfig.urls.url('ProjectAssociatesByProject') + '/' + projectId).pipe(\r\n      catchError(this.errMsg.parseObservableResponseError));\r\n  }\r\n}\r\n","module.exports = \"<!--<mat-card class=\\\"margin-2\\\" style=\\\"box-shadow: none;border: 1px solid #dddddd\\\">-->\\r\\n<!--&lt;!&ndash;<mat-card-subtitle class=\\\"sub-title\\\">&ndash;&gt;-->\\r\\n<!--&lt;!&ndash;<mat-icon color=\\\"primary\\\" class=\\\"mat-18\\\">add</mat-icon>&ndash;&gt;-->\\r\\n<!--&lt;!&ndash;Add Share&ndash;&gt;-->\\r\\n<!--&lt;!&ndash;<mat-divider></mat-divider>&ndash;&gt;-->\\r\\n<!--&lt;!&ndash;</mat-card-subtitle>&ndash;&gt;-->\\r\\n<!--<mat-card-content>-->\\r\\n<!--<form [formGroup]=\\\"projectAssForm\\\" novalidate>-->\\r\\n\\r\\n<!--<div fxLayout=\\\"row\\\"-->\\r\\n<!--fxLayoutAlign=\\\"start center\\\"-->\\r\\n<!--class=\\\"content\\\"-->\\r\\n<!--fxLayout.lt-sm=\\\"column\\\"-->\\r\\n<!--fxLayoutGap=\\\"2em\\\">-->\\r\\n\\r\\n<!--<div class=\\\"block\\\" fxLayoutGap=\\\"2em\\\">-->\\r\\n<!--<mat-form-field fxLayoutGap=\\\"4em\\\" [fxFlex]=\\\"40\\\">-->\\r\\n<!--<mat-label>Nationality * :</mat-label>-->\\r\\n<!--<mat-select formControlName=\\\"AssociateId\\\">-->\\r\\n<!--<mat-option *ngFor=\\\"let associate of associateList\\\" [value]=\\\"associate.AssociateId\\\">-->\\r\\n<!--{{associate.FirstNameEng }}-->\\r\\n<!--{{associate.FatherNameEng }}-->\\r\\n<!--{{associate.GrandNameEng }}-->\\r\\n<!--</mat-option>-->\\r\\n<!--</mat-select>-->\\r\\n<!--&lt;!&ndash;<mat-error align=\\\"start\\\" *ngIf=\\\"formErrors.Nationality\\\" class=\\\"form__error\\\">{{ formErrors.Nationality }}&ndash;&gt;-->\\r\\n<!--&lt;!&ndash;</mat-error>&ndash;&gt;-->\\r\\n<!--&lt;!&ndash;<mat-error align=\\\"start\\\" *ngIf=\\\"projectAssForm.get('Nationality').hasError('value')\\\" class=\\\"form__error\\\">&ndash;&gt;-->\\r\\n<!--&lt;!&ndash;Redundant nation is not allowed&ndash;&gt;-->\\r\\n<!--&lt;!&ndash;</mat-error>&ndash;&gt;-->\\r\\n<!--</mat-form-field>-->\\r\\n<!--<mat-form-field fxLayoutGap=\\\"4em\\\" [fxFlex]=\\\"40\\\">-->\\r\\n<!--<mat-label>Postion * :</mat-label>-->\\r\\n<!--<mat-select formControlName=\\\"Postion\\\">-->\\r\\n\\r\\n<!--<mat-option value=\\\"0\\\">manger</mat-option>-->\\r\\n<!--<mat-option value=\\\"1\\\">Deputy manger</mat-option>-->\\r\\n<!--<mat-option value=\\\"3\\\">Representative</mat-option>-->\\r\\n<!--<mat-option value=\\\"4\\\">Member</mat-option>-->\\r\\n<!--</mat-select>-->\\r\\n<!--&lt;!&ndash;<mat-error align=\\\"start\\\" *ngIf=\\\"formErrors.Nationality\\\" class=\\\"form__error\\\">{{ formErrors.Nationality }}&ndash;&gt;-->\\r\\n<!--&lt;!&ndash;</mat-error>&ndash;&gt;-->\\r\\n<!--&lt;!&ndash;<mat-error align=\\\"start\\\" *ngIf=\\\"projectAssForm.get('Nationality').hasError('value')\\\" class=\\\"form__error\\\">&ndash;&gt;-->\\r\\n<!--&lt;!&ndash;Redundant nation is not allowed&ndash;&gt;-->\\r\\n<!--&lt;!&ndash;</mat-error>&ndash;&gt;-->\\r\\n<!--</mat-form-field>-->\\r\\n\\r\\n<!--&lt;!&ndash;<mat-form-field fxLayoutGap=\\\"4em\\\" [fxFlex]=\\\"20\\\">&ndash;&gt;-->\\r\\n<!--&lt;!&ndash;<mat-label>Postion *:</mat-label>&ndash;&gt;-->\\r\\n<!--&lt;!&ndash;<input type=\\\"number\\\" formControlName=\\\"Postion\\\" matInput>&ndash;&gt;-->\\r\\n<!--&lt;!&ndash;&lt;!&ndash;<mat-error align=\\\"start\\\" *ngIf=\\\"formErrors.Qty\\\" class=\\\"form__error\\\">{{ formErrors.Qty }}&ndash;&gt;&ndash;&gt;-->\\r\\n<!--&lt;!&ndash;&lt;!&ndash;</mat-error>&ndash;&gt;&ndash;&gt;-->\\r\\n<!--&lt;!&ndash;</mat-form-field>&ndash;&gt;-->\\r\\n\\r\\n<!--</div>-->\\r\\n\\r\\n<!--&lt;!&ndash;<div class=\\\"block\\\" fxFlex=\\\"40%\\\">&ndash;&gt;-->\\r\\n\\r\\n<!--&lt;!&ndash;&lt;!&ndash;Total:{{totalShare}}&ndash;&gt;&ndash;&gt;-->\\r\\n<!--&lt;!&ndash;</div>&ndash;&gt;-->\\r\\n<!--<div class=\\\"block\\\" fxFlex=\\\"10%\\\">-->\\r\\n<!--<button class=\\\"custom-button \\\" [disabled]=\\\"!projectAssForm.valid\\\"-->\\r\\n<!--(click)=\\\"onSubmit()\\\"-->\\r\\n<!--matTooltip=\\\"Add Share\\\">-->\\r\\n<!--<mat-icon color=\\\"accent\\\" class=\\\" mat-18\\\">done</mat-icon>-->\\r\\n<!--{{editMode ? 'Update' : 'Add'}}-->\\r\\n<!--</button>-->\\r\\n\\r\\n<!--&lt;!&ndash;<a style=\\\"margin-left: 4px\\\" mat-raised-button class=\\\"pointer\\\" (click)=\\\"onClear()\\\" matTooltip=\\\"Clear Form\\\">&ndash;&gt;-->\\r\\n<!--&lt;!&ndash;<mat-icon color=\\\"accent\\\" class=\\\"mat-18\\\">clear_all</mat-icon>&ndash;&gt;-->\\r\\n<!--&lt;!&ndash;clear&ndash;&gt;-->\\r\\n<!--&lt;!&ndash;</a>&ndash;&gt;-->\\r\\n<!--</div>-->\\r\\n<!--<div class=\\\"block\\\" fxFlex=\\\"10%\\\">-->\\r\\n<!--<button mat-raised-button=\\\"\\\" color=\\\"primary\\\"-->\\r\\n<!--(click)=\\\"newAssociate()\\\"-->\\r\\n<!--matTooltip=\\\"Add Associate\\\">-->\\r\\n<!--<mat-icon class=\\\"mat-18\\\">add</mat-icon>-->\\r\\n<!--new-->\\r\\n<!--</button>-->\\r\\n\\r\\n<!--&lt;!&ndash;<a style=\\\"margin-left: 4px\\\" mat-raised-button class=\\\"pointer\\\" (click)=\\\"onClear()\\\" matTooltip=\\\"Clear Form\\\">&ndash;&gt;-->\\r\\n<!--&lt;!&ndash;<mat-icon color=\\\"accent\\\" class=\\\"mat-18\\\">clear_all</mat-icon>&ndash;&gt;-->\\r\\n<!--&lt;!&ndash;clear&ndash;&gt;-->\\r\\n<!--&lt;!&ndash;</a>&ndash;&gt;-->\\r\\n<!--</div>-->\\r\\n<!--</div>-->\\r\\n<!--</form>-->\\r\\n<!--</mat-card-content>-->\\r\\n<!--</mat-card>-->\\r\\n<mat-card style=\\\"overflow: hidden;\\\" class=\\\"margin-2 padding-0\\\">\\r\\n  <!--<mat-card-header>-->\\r\\n  <!--<mat-card-subtitle class=\\\"sub-title\\\">List of Associate-->\\r\\n  <!--&lt;!&ndash;<mat-divider></mat-divider>&ndash;&gt;-->\\r\\n  <!--</mat-card-subtitle>-->\\r\\n  <!--</mat-card-header>-->\\r\\n  <mat-card-content>\\r\\n    <div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"center \\\">\\r\\n\\r\\n      <mat-table class=\\\"full-width\\\" #table [dataSource]=\\\"dataSource\\\">\\r\\n        <ng-container style=\\\"width: 10px !important;\\\" matColumnDef=\\\"No\\\">\\r\\n          <mat-header-cell style=\\\"width: 10px !important;\\\" *matHeaderCellDef>No</mat-header-cell>\\r\\n          <mat-cell style=\\\"width: 10px !important;\\\" *matCellDef=\\\"let associateList;let i=index;\\\">{{i+1}}\\r\\n          </mat-cell>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"AssociateId\\\">\\r\\n          <mat-header-cell *matHeaderCellDef>Manger</mat-header-cell>\\r\\n          <mat-cell *matCellDef=\\\"let associateList;\\\">\\r\\n            {{associateList?.FirstNameEng }}\\r\\n            {{associateList?.FatherNameEng }}\\r\\n            {{associateList?.GrandNameEng }}\\r\\n          </mat-cell>\\r\\n        </ng-container>\\r\\n\\r\\n\\r\\n        <ng-container matColumnDef=\\\"Action\\\">\\r\\n          <mat-header-cell *matHeaderCellDef>\\r\\n            Action\\r\\n            <button style=\\\"margin-left: 20px;\\\" mat-raised-button=\\\"\\\" color=\\\"primary\\\"\\r\\n                    (click)=\\\"newAssociate()\\\"\\r\\n                    matTooltip=\\\"Add Manger\\\">\\r\\n              <mat-icon class=\\\"mat-18\\\">add</mat-icon>\\r\\n              new\\r\\n            </button>\\r\\n          </mat-header-cell>\\r\\n\\r\\n          <mat-cell *matCellDef=\\\"let associateList\\\">\\r\\n            <mat-checkbox [value]=\\\"associateList?.AssociateId\\\"\\r\\n                          [checked]=\\\"associateList.selected\\\"\\r\\n                          (change)=\\\"onMangerControlChanged($event,associateList)\\\">\\r\\n            </mat-checkbox>\\r\\n\\r\\n          </mat-cell>\\r\\n\\r\\n        </ng-container>\\r\\n        <mat-header-row *matHeaderRowDef=\\\" displayedColumns\\r\\n            \\\">\\r\\n        </mat-header-row>\\r\\n        <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\">\\r\\n        </mat-row>\\r\\n      </mat-table>\\r\\n    </div>\\r\\n  </mat-card-content>\\r\\n\\r\\n</mat-card>\\r\\n\"","module.exports = \"\"","import {AfterContentChecked, Component, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormControl, FormGroup} from '@angular/forms';\r\nimport {Subscription} from 'rxjs/Subscription';\r\nimport {FormService} from '@custor/validation/custom/form';\r\nimport {ErrorMessage} from '@custor/services/errMessageService';\r\nimport {ActivatedRoute, Params, Router} from '@angular/router';\r\nimport {MatTableDataSource} from '@angular/material';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {DataSharingService} from '../../../Services/data-sharing.service';\r\nimport {AssociateService} from '../../../Services/associate.service';\r\nimport {AssociateModel} from '../../../model/associate.model';\r\nimport {ProjectAssociateService} from '../../../Services/project-associate.service';\r\nimport {ProjectAssociateModel} from '../../../model/ProjectAssociate.model';\r\nimport {ServiceApplicationService} from '../../../Services/service-application.service';\r\nimport {ServiceapplicationService} from '../../setting/services-tabs/serviceApplication/serviceapplication.service';\r\n\r\n@Component({\r\n  selector: 'app-project-associate',\r\n  templateUrl: './project-associate.component.html',\r\n  styleUrls: ['./project-associate.component.scss']\r\n})\r\nexport class ProjectAssociateComponent implements OnInit, AfterContentChecked {\r\n  projectAssForm: FormGroup;\r\n  projectId: number;\r\n  public formErrors = {\r\n    AssociateId: '',\r\n    Postion: ''\r\n  };\r\n  dataSource: any;\r\n\r\n  editMode = false;\r\n  loading = false;\r\n  shareEditIndex: number;\r\n  associateData: ProjectAssociateModel[] = [];\r\n\r\n  subscription: Subscription;\r\n  displayedColumns = ['No', 'AssociateId', 'Action'];\r\n  public steeperIndex: number;\r\n  public associateList: AssociateModel[] = [];\r\n  private ProjectAssociateId: number;\r\n  public associate: ProjectAssociateModel;\r\n  public associateIdList: number[] = [];\r\n  private ServiceId: any;\r\n  private InvestorId: any;\r\n  private workFlowId: any;\r\n  private ServiceApplicationId: any;\r\n\r\n  constructor(private formBuilder: FormBuilder,\r\n              public route: ActivatedRoute,\r\n              public serviceApplicationsServices: ServiceapplicationService,\r\n              public router: Router,\r\n              private errMsg: ErrorMessage,\r\n              private toastr: ToastrService,\r\n              private dataSharing: DataSharingService,\r\n              private formService: FormService,\r\n              // private addressService: AddressService,\r\n              private associateService: AssociateService,\r\n              private projectAssociateService: ProjectAssociateService\r\n  ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.ServiceId = this.route.snapshot.params['ServiceId'];\r\n    this.InvestorId = this.route.snapshot.params['InvestorId'];\r\n    this.workFlowId = this.route.snapshot.params['workFlowId'];\r\n    this.ServiceApplicationId = this.route.snapshot.params['ServiceApplicationId'];\r\n    this.projectId = this.route.snapshot.params['ProjectId'];\r\n\r\n\r\n    this.getAllAssociate();\r\n    // this.getAssociateByProject();\r\n    if (this.projectId > 1) {\r\n      this.getAssociateByProject();\r\n    }\r\n\r\n    this.formBuild();\r\n  }\r\n\r\n  getAssociateByProject() {\r\n    this.projectAssociateService.associateProject(this.projectId).subscribe(result => {\r\n      if (result.length > 0) {\r\n        this.associateData = result;\r\n        // this.dataSource = new MatTableDataSource<ProjectAssociateModel>(this.associateData);\r\n        this.loading = false;\r\n        this.updateList();\r\n      }\r\n    }, error => this.errMsg.getError(error));\r\n  }\r\n\r\n  onSubmit() {\r\n    this.formService.markFormGroupTouched(this.projectAssForm);\r\n    this.projectAssForm.removeControl('ProjectAssociateId');\r\n    if (this.projectAssForm.valid) {\r\n      if (!this.editMode) {\r\n        this.projectAssociateService.create(this.projectAssForm.value)\r\n          .subscribe(result => {\r\n            if (this.associateData.length < 1) {\r\n              // setTimeout(() => this.dataSharing.steeperIndex.next(6), 0);\r\n              setTimeout(() => this.dataSharing.currentIndex.next(8), 0);\r\n            }\r\n            this.projectAssForm.addControl('ProjectAssociateId', new FormControl(''));\r\n            this.associateData.push(result);\r\n            this.dataSource = new MatTableDataSource<ProjectAssociateModel>(this.associateData);\r\n            this.notification('saved');\r\n            this.onClear();\r\n          });\r\n      } else {\r\n        this.projectAssociateService.update(this.projectAssForm.value, this.ProjectAssociateId)\r\n          .subscribe(result => {\r\n            this.notification('updated');\r\n            this.associateData[this.shareEditIndex] = result;\r\n            this.dataSource = new MatTableDataSource<ProjectAssociateModel>(this.associateData);\r\n            this.onClear();\r\n          }, error => this.toastr.error(this.errMsg.getError(error)));\r\n      }\r\n    } else {\r\n      this.formErrors = this.formService.validateForm(this.projectAssForm, this.formErrors, false);\r\n    }\r\n  }\r\n\r\n  formBuild() {\r\n    // console.log(this.projectId);\r\n    this.projectAssForm = this.formBuilder.group({\r\n      ProjectId: new FormControl(this.projectId),\r\n      ProjectAssociateId: new FormControl(['']),\r\n      workFlowId: new FormControl(this.workFlowId),\r\n      AssociateId: new FormControl(null),\r\n      // Postion: new FormControl('', [Validators.required]),\r\n\r\n    });\r\n\r\n    this.projectAssForm.valueChanges.subscribe((data) => {\r\n      this.formErrors = this.formService.validateForm(this.projectAssForm, this.formErrors, true);\r\n    });\r\n  }\r\n\r\n\r\n  private getAllAssociate() {\r\n    this.associateService.getAssociateByInvestorId(+localStorage.getItem('InvestorId'))\r\n      .subscribe(result => {\r\n        this.associateList = result;\r\n        this.updateList();\r\n      });\r\n  }\r\n\r\n  updateList() {\r\n    for (let i = 0; i < this.associateList.length; i++) {\r\n      for (let j = 0; j < this.associateData.length; j++) {\r\n        if (this.associateList[i].AssociateId === this.associateData[j].AssociateId) {\r\n          this.associateList[i].selected = true;\r\n          this.associateList[i].projectAssociate = this.associateData[j];\r\n        } else {\r\n          if (this.associateList[i].selected !== true) {\r\n            this.associateList[i].selected = false;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    // console.log(this.associateList);\r\n    this.dataSource = new MatTableDataSource<AssociateModel>(this.associateList);\r\n\r\n  }\r\n\r\n  onClear() {\r\n    this.editMode = false;\r\n    this.projectAssForm.reset();\r\n  }\r\n\r\n\r\n  notification(message: string) {\r\n    this.toastr.success(` Succesfully ${message} Data.!`, 'Success');\r\n    this.loading = false;\r\n\r\n  }\r\n\r\n\r\n  ngAfterContentChecked(): void {\r\n    // this.projectAssForm.patchValue({\r\n    //   ProjectId: localStorage.getItem('ProjectId')\r\n    // });\r\n    // this.projectAssForm.patchValue({\r\n    //   workFlowId: localStorage.getItem('workFlowId')\r\n    // });\r\n  }\r\n\r\n  onMangerControlChanged($event, data?: AssociateModel) {\r\n    // console.log(data);\r\n    const id = $event.source.value;\r\n    this.projectAssForm.patchValue({\r\n      AssociateId: id\r\n    });\r\n    this.projectAssForm.removeControl('ProjectAssociateId');\r\n    if ($event.checked) {\r\n      this.projectAssociateService.create(this.projectAssForm.value)\r\n        .subscribe(result => {\r\n          this.projectAssForm.addControl('ProjectAssociateId', new FormControl(''));\r\n          this.associateData.push(result);\r\n          this.getAssociateByProject();\r\n          this.notification('saved');\r\n          this.onClear();\r\n        });\r\n    } else if (!$event.checked) {\r\n      this.projectAssociateService.delete(data.projectAssociate.ProjectAssociateId)\r\n        .subscribe(result => {\r\n          this.getAssociateByProject();\r\n          this.notification('deleted');\r\n          this.onClear();\r\n        });\r\n    }\r\n    // console.log($event.target);\r\n    // console.log($event);\r\n    this.associateIdList.push($event.source.value);\r\n    // console.log(this.associateIdList);\r\n  }\r\n\r\n  newAssociate() {\r\n    this.router.navigate(['associate/form/0/2']);\r\n  }\r\n\r\n  UpdateServiceApplication() {\r\n    this.serviceApplicationsServices.finalForApprovalServiceApplications(\r\n      this.ServiceApplicationId)\r\n      .subscribe(result => {\r\n        // console.log(result);\r\n        this.toastr.success('Application submitted successfully we will revise soon as well as  we will notify for any action required');\r\n      });\r\n  }\r\n\r\n  next() {\r\n    this.dataSharing.steeperIndex.next(8);\r\n\r\n  }\r\n}\r\n","module.exports = \"mat-header-row {\\r\\n  background-color: whitesmoke;\\r\\n  border-top: 1px solid #f1f1f1;\\r\\n  border-bottom: 1px solid #f1f1f1 !important;\\r\\n}\\r\\n\\r\\nmat-radio-button {\\r\\n  margin-top: 20px !important;\\r\\n}\\r\\n\\r\\nmat-header-row {\\r\\n   min-height: 30px;\\r\\n}\\r\\n\"","module.exports = \"<mat-card class=\\\"margin-2\\\">\\r\\n  <mat-card-subtitle class=\\\"sub-title\\\">\\r\\n    Project Input\\r\\n    <mat-divider></mat-divider>\\r\\n  </mat-card-subtitle>\\r\\n  <form [formGroup]=\\\"pIOform\\\" novalidate>\\r\\n    <mat-card-content>\\r\\n\\r\\n      <div style=\\\"margin-bottom: 40px;\\\" *ngIf=\\\"ServiceId=='1234'\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\"\\r\\n           fxLayoutGap=\\\"2em\\\">\\r\\n        <div class=\\\"block\\\" fxFlex=\\\"\\\" style=\\\"margin-left: 20px\\\">\\r\\n          <mat-form-field>\\r\\n            <mat-label>Quarter</mat-label>\\r\\n            <mat-select formControlName=\\\"Quarter\\\" required>\\r\\n              <mat-option *ngFor=\\\"let row of Quarter\\\" [value]=\\\"row.Id\\\">\\r\\n                <span>{{row.DescriptionEnglish}}</span>\\r\\n              </mat-option>\\r\\n            </mat-select>\\r\\n          </mat-form-field>\\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"block\\\" fxFlex>\\r\\n          <mat-form-field>\\r\\n            <input placeholder=\\\"Registration Year* :\\\"\\r\\n                   matInput\\r\\n                   formControlName=\\\"RegistrationYear\\\"\\r\\n                   [matDatepicker]=\\\"RegistrationYear\\\">\\r\\n            <mat-datepicker-toggle matSuffix [for]=\\\"RegistrationYear\\\"></mat-datepicker-toggle>\\r\\n            <mat-datepicker #RegistrationYear></mat-datepicker>\\r\\n            <!--<mat-error align=\\\"start\\\" *ngIf=\\\"formErrors.RegistrationYear\\\" class=\\\"form__error\\\">-->\\r\\n            <!--{{ formErrors.RegistrationYear }}-->\\r\\n            <!--</mat-error>-->\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n        <!--<div class=\\\"block\\\" fxFlex=\\\"\\\">-->\\r\\n        <!---->\\r\\n        <!--<mat-form-field>-->\\r\\n        <!--<input #OSF type=\\\"number\\\" formControlName=\\\"CapitalRegistrationDatetime\\\" matInput-->\\r\\n        <!--placeholder=\\\"Capital Registration Datetime * :\\\">-->\\r\\n        <!---->\\r\\n        <!--</mat-form-field>-->\\r\\n        <!--</div>-->\\r\\n        <div class=\\\"block\\\" fxFlex=\\\"\\\">\\r\\n\\r\\n          <mat-form-field>\\r\\n            <mat-select [disabled]=\\\"true\\\" formControlName=\\\"ProjectStatus\\\" required>\\r\\n              <option value=\\\"0\\\">--Select--</option>\\r\\n              <label>Project Status</label>\\r\\n              <mat-option *ngFor=\\\"let status of projectStatus\\\" [value]=\\\"status.Id\\\">\\r\\n                <span>{{status.DescriptionEnglish}}</span>\\r\\n              </mat-option>\\r\\n            </mat-select>\\r\\n\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n      </div>\\r\\n      <mat-card-subtitle *ngIf=\\\"ServiceId=='1234'\\\" class=\\\"sub-title\\\">\\r\\n        Detail\\r\\n        <mat-divider></mat-divider>\\r\\n      </mat-card-subtitle>\\r\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" fxLayoutGap=\\\"2em\\\">\\r\\n        <div class=\\\"block\\\" fxFlex=\\\"\\\">\\r\\n          <mat-form-field>\\r\\n            <mat-label>Electric Power (kwh) :</mat-label>\\r\\n            <input type=\\\"number\\\"\\r\\n                   matInput\\r\\n                   formControlName=\\\"ElectricPower\\\">\\r\\n            <mat-error align=\\\"start\\\" *ngIf=\\\"formErrors.ElectricPower\\\">{{ formErrors.ElectricPower }}</mat-error>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n        <div class=\\\"block\\\" fxFlex=\\\"\\\">\\r\\n          <mat-form-field>\\r\\n            <mat-label>Water (m2) :</mat-label>\\r\\n            <input type=\\\"number\\\"\\r\\n                   matInput\\r\\n                   formControlName=\\\"Water\\\">\\r\\n            <mat-error align=\\\"start\\\" *ngIf=\\\"formErrors.Water\\\">{{ formErrors.Water }}</mat-error>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n        <div class=\\\"block\\\" fxFlex=\\\"\\\">\\r\\n          <mat-form-field>\\r\\n            <mat-label>Other Utility :</mat-label>\\r\\n            <input type=\\\"number\\\"\\r\\n                   matInput\\r\\n                   formControlName=\\\"OtherUtility\\\">\\r\\n            <mat-error align=\\\"start\\\" *ngIf=\\\"formErrors.OtherUtility\\\">{{ formErrors.OtherUtility }}</mat-error>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n        <div class=\\\"block\\\" fxFlex=\\\"\\\">\\r\\n          <mat-form-field>\\r\\n            <mat-label>Land Industrial (Sq.m) :</mat-label>\\r\\n            <input type=\\\"number\\\"\\r\\n                   matInput\\r\\n                   formControlName=\\\"LandIndustrial\\\">\\r\\n            <mat-error align=\\\"start\\\" *ngIf=\\\"formErrors.LandIndustrial\\\">{{ formErrors.LandIndustrial }}</mat-error>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start start\\\" fxLayoutGap=\\\"2em\\\">\\r\\n        <div class=\\\"block\\\" fxFlex=\\\"25%\\\">\\r\\n          <mat-form-field>\\r\\n            <mat-label>Land Agricultural (Sq.m) :</mat-label>\\r\\n            <input type=\\\"number\\\"\\r\\n                   matInput\\r\\n                   formControlName=\\\"LandAgricultural\\\">\\r\\n          </mat-form-field>\\r\\n          <mat-error align=\\\"start\\\" *ngIf=\\\"formErrors.LandAgricultural\\\">{{ formErrors.LandAgricultural }}</mat-error>\\r\\n        </div>\\r\\n        <div class=\\\"block\\\" fxFlex=\\\"25%\\\">\\r\\n          <mat-form-field>\\r\\n            <mat-label>Land Service (Sq.m) :</mat-label>\\r\\n            <input type=\\\"number\\\" matInput formControlName=\\\"LandService\\\">\\r\\n          </mat-form-field>\\r\\n          <mat-error align=\\\"start\\\" *ngIf=\\\"formErrors.LandService\\\">{{ formErrors.LandService }}</mat-error>\\r\\n        </div>\\r\\n        <div class=\\\"block\\\" fxFlex=\\\"25%\\\">\\r\\n          <mat-form-field>\\r\\n            <mat-label>Own Land (Sq.m) :</mat-label>\\r\\n            <input type=\\\"number\\\" matInput formControlName=\\\"OwnLand\\\">\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n        <div class=\\\"block\\\" fxFlex=\\\"25%\\\">\\r\\n          <mat-form-field>\\r\\n            <mat-label>Lease Land (Sq.m) :</mat-label>\\r\\n            <input type=\\\"number\\\" matInput formControlName=\\\"LeaseLand\\\">\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start start\\\" fxLayoutGap=\\\"2em\\\">\\r\\n        <div class=\\\"block\\\" fxFlex=\\\"25%\\\">\\r\\n          <mat-form-field>\\r\\n            <mat-label>Rental Land (Sq.m) :</mat-label>\\r\\n            <input type=\\\"number\\\" matInput formControlName=\\\"RentalLand\\\">\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"block\\\" fxFlex=\\\"48%\\\">\\r\\n          <mat-form-field class=\\\"full-width\\\">\\r\\n            <mat-label>Remark :</mat-label>\\r\\n            <textarea type=\\\"number\\\" matInput formControlName=\\\"Remark\\\"></textarea>\\r\\n          </mat-form-field>\\r\\n          <mat-error align=\\\"start\\\" *ngIf=\\\"formErrors.Remark\\\">{{ formErrors.Remark }}</mat-error>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n\\r\\n    </mat-card-content>\\r\\n    <mat-divider></mat-divider>\\r\\n    <div style=\\\"padding-top: 20px\\\" align=\\\"center\\\">\\r\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\" fxLayoutGap=\\\"2em\\\">\\r\\n\\r\\n        <div fxFlex=\\\"15\\\">\\r\\n\\r\\n          <!--<button class=\\\"custom-button\\\" (click)=\\\"next()\\\" color=\\\"warn\\\" type=\\\"button\\\">-->\\r\\n          <!--Back-->\\r\\n          <!--</button>-->\\r\\n        </div>\\r\\n        <div style=\\\"text-align: center\\\" fxFlex=\\\"67\\\" fxFlexAlign=\\\"center\\\">\\r\\n          <button *ngIf=\\\"!editMode\\\" [disabled]=\\\"!pIOform.valid\\\" mat-raised-button=\\\"\\\" color=\\\"primary\\\"\\r\\n                  (click)=\\\"onSubmit()\\\">\\r\\n            <mat-icon class=\\\"mat-18\\\">done</mat-icon>\\r\\n            <span class=\\\"agree\\\">Save</span>\\r\\n\\r\\n          </button>\\r\\n          <button *ngIf=\\\"editMode\\\" [disabled]=\\\"!pIOform.valid\\\" class=\\\"custom-button\\\" (click)=\\\"onSubmit()\\\">\\r\\n            <mat-icon class=\\\"mat-18\\\">done</mat-icon>\\r\\n            <span>Update</span>\\r\\n          </button>\\r\\n        </div>\\r\\n        <div fxFlex=\\\"15\\\">\\r\\n\\r\\n          <!--<button [disabled]=\\\"!pIOform.valid\\\" class=\\\"custom-button\\\" (click)=\\\"next()\\\" color=\\\"warn\\\" type=\\\"button\\\">-->\\r\\n          <!--Next-->\\r\\n          <!--</button>-->\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n</mat-card>\\r\\n\\r\\n\"","import {AfterContentChecked, Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {FormArray, FormBuilder, FormGroup, Validators} from '@angular/forms';\r\n\r\nimport {ProjectRequirementService} from '../../../Services/project-requirement.service';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {ProjectInputService} from '../../../Services/project-input.service';\r\nimport {Subscription} from 'rxjs/Subscription';\r\nimport {DataSharingService} from '../../../Services/data-sharing.service';\r\nimport {ProjectInputModel} from '../../../model/ProjectInput.model';\r\nimport {MatSnackBar} from '@angular/material';\r\nimport {ProjectRequirementModel} from '../../../model/ProjectRequirement.model';\r\nimport {FormService} from '../../../../@custor/validation/custom/form';\r\nimport {ErrorMessage} from '../../../../@custor/services/errMessageService';\r\nimport {ActivatedRoute, Params} from '@angular/router';\r\nimport {ProjectProfileService} from '../../../Services/project-profile.service';\r\nimport {ProjectStatusModel, QuarterModel} from '../../../model/lookupData';\r\nimport {ProjectStatus, Quarter} from '@custor/const/consts';\r\n\r\n@Component({\r\n  selector: 'app-project-input-output',\r\n  templateUrl: './project-input-output.component.html',\r\n  styleUrls: ['./project-input-output.component.css']\r\n})\r\nexport class ProjectInputOutputComponent implements OnInit, AfterContentChecked {\r\n\r\n  pIOform: FormGroup;\r\n  editMode = false;\r\n  editModeInput = false;\r\n  rawInputId: number;\r\n  loading = false;\r\n  subscription: Subscription;\r\n  projectId: any;\r\n  formErrors = {\r\n    ElectricPower: 'Minimum 0 Maximum 1000 kwh!',\r\n    Water: '',\r\n    OtherUtility: '',\r\n    LandIndustrial: '',\r\n    LandAgricultural: '',\r\n    LandService: '',\r\n    Remark: '',\r\n  };\r\n\r\n  dataSource: any;\r\n  public stepperIndex: number;\r\n  public ServiceId: string;\r\n  public projectStatus: ProjectStatusModel[] = [];\r\n  public Quarter: QuarterModel[] = [];\r\n  private InvestorId: any;\r\n  private ServiceApplicationId: any;\r\n  private workFlowId: any;\r\n\r\n  constructor(private formBuilder: FormBuilder,\r\n              private errMsg: ErrorMessage,\r\n              public route: ActivatedRoute,\r\n              public projectProfileService: ProjectProfileService,\r\n              private toastr: ToastrService,\r\n              private snackbar: MatSnackBar,\r\n              private formService: FormService,\r\n              private dataSharing: DataSharingService,\r\n              private dataSharingService: DataSharingService,\r\n              private pRequirementService: ProjectRequirementService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initForm();\r\n    this.ServiceId = this.route.snapshot.params['ServiceId'];\r\n    this.InvestorId = this.route.snapshot.params['InvestorId'];\r\n    this.workFlowId = this.route.snapshot.params['workFlowId'];\r\n    this.ServiceApplicationId = this.route.snapshot.params['ServiceApplicationId'];\r\n    this.projectId = this.route.snapshot.params['ProjectId']\r\n\r\n    if (this.ServiceId === '1234') {\r\n      this.getProjectStatus(this.route.snapshot.params['ProjectId']);\r\n    }\r\n    if (this.projectId > 1) {\r\n      this.getProjectRequirement();\r\n    }\r\n    this.initStaticData('en');\r\n\r\n  }\r\n\r\n  getProjectRequirement() {\r\n    this.pRequirementService.RequirementByProject(this.projectId).subscribe(result => {\r\n      if (typeof (result) !== 'undefined') {\r\n        this.editMode = true;\r\n        this.projectId = result.ProjectId;\r\n        this.rawInputId = result.ProjectRequirementId;\r\n        this.pIOform.patchValue(result);\r\n      }\r\n\r\n    }, error => this.errMsg.getError(error));\r\n  }\r\n\r\n\r\n  onSubmit() {\r\n    this.formService.markFormGroupTouched(this.pIOform);\r\n\r\n    if (!this.editMode) {\r\n      if (this.pIOform.valid) {\r\n        this.pRequirementService.create(this.getUtility())\r\n          .subscribe(result => {\r\n            this.notification('Saved');\r\n            setTimeout(() => this.dataSharing.steeperIndex.next(3), 0);\r\n            setTimeout(() => this.dataSharing.currentIndex.next(3), 0);\r\n\r\n          }, error => this.toastr.error(this.errMsg.getError(error)));\r\n      } else {\r\n        this.formErrors = this.formService.validateForm(this.pIOform, this.formErrors, false);\r\n      }\r\n    } else {\r\n      this.pRequirementService.update(this.getUtility(), this.rawInputId)\r\n        .subscribe(result => {\r\n          this.notification('update');\r\n          this.dataSharing.currentIndex.next(2);\r\n\r\n        }, error => this.toastr.error(this.errMsg.getError(error)));\r\n\r\n      this.formErrors = this.formService.validateForm(this.pIOform, this.formErrors, false);\r\n    }\r\n  }\r\n\r\n  initForm() {\r\n    this.pIOform = this.formBuilder.group({\r\n      ProjectId: [],\r\n      ElectricPower: [0, [Validators.min(0)]],\r\n      Water: [0, [Validators.min(0)]],\r\n      OtherUtility: [0, [Validators.min(0)]],\r\n      LandIndustrial: [0, [Validators.min(0)]],\r\n      LandAgricultural: [0, [Validators.min(0)]],\r\n      LandService: [0, [Validators.min(0)]],\r\n      OwnLand: [0, [Validators.min(0)]],\r\n      LeaseLand: [0, [Validators.min(0)]],\r\n      RentalLand: [0, [Validators.min(0)]],\r\n      Quarter: [''],\r\n      RegistrationYear: [''],\r\n      ProjectStatus: [''],\r\n      Remark: ['', [Validators.minLength(2)]],\r\n      workFlowId: [this.workFlowId]\r\n    })\r\n    ;\r\n\r\n    this.pIOform.valueChanges.subscribe((data) => {\r\n      this.formErrors = this.formService.validateForm(this.pIOform, this.formErrors, true);\r\n    });\r\n  }\r\n\r\n  onClear() {\r\n    this.editMode = false;\r\n    this.pIOform.reset();\r\n  }\r\n\r\n  notification(message: string) {\r\n    this.toastr.success(` Succesfully ${message} Data.!`, 'Success');\r\n\r\n    this.loading = false;\r\n    this.snackbar.open(` Succesfully ${message} Data.!`, 'Close', {\r\n      duration: 3000,\r\n    });\r\n  }\r\n\r\n  getUtility(): ProjectRequirementModel {\r\n    return {\r\n      ProjectId: this.projectId,\r\n      ElectricPower: this.pIOform.get('ElectricPower').value,\r\n      Water: this.pIOform.get('Water').value,\r\n      OtherUtility: this.pIOform.get('OtherUtility').value,\r\n      LandIndustrial: this.pIOform.get('LandIndustrial').value,\r\n      LandAgricultural: this.pIOform.get('LandAgricultural').value,\r\n      LandService: this.pIOform.get('LandService').value,\r\n      RentalLand: this.pIOform.get('RentalLand').value,\r\n      OwnLand: this.pIOform.get('OwnLand').value,\r\n      LeaseLand: this.pIOform.get('LeaseLand').value,\r\n      Remark: this.pIOform.get('Remark').value,\r\n      workFlowId: this.workFlowId,\r\n    };\r\n  }\r\n\r\n  ngAfterContentChecked(): void {\r\n\r\n    // this.pIOform.patchValue({\r\n    //   workFlowId: localStorage.getItem('workFlowId')\r\n    // });\r\n  }\r\n\r\n  next() {\r\n    this.dataSharing.steeperIndex.next(this.stepperIndex);\r\n    this.dataSharing.steeperIndex.next(3);\r\n\r\n  }\r\n\r\n  initStaticData(currentLang) {\r\n\r\n    let projectStatus1: ProjectStatusModel = new ProjectStatusModel();\r\n    ProjectStatus.forEach(pair => {\r\n      projectStatus1 = {\r\n        'Id': pair.Id.toString(),\r\n        'DescriptionEnglish': pair.DescriptionEnglish,\r\n        'Description': pair.Description\r\n      };\r\n      this.projectStatus.push(projectStatus1);\r\n    });\r\n\r\n    let Quarter1: QuarterModel = new QuarterModel();\r\n    Quarter.forEach(pair => {\r\n      Quarter1 = {\r\n        'Id': pair.Id.toString(),\r\n        'DescriptionEnglish': pair.DescriptionEnglish,\r\n        'Description': pair.Description\r\n      };\r\n      this.Quarter.push(Quarter1);\r\n    });\r\n\r\n  }\r\n\r\n\r\n  private getProjectStatus(projectId: any) {\r\n    this.projectProfileService.getProjectStatus(projectId)\r\n      .subscribe(result => {\r\n        this.pIOform.patchValue({\r\n          ProjectStatus: result.toString()\r\n        });\r\n      });\r\n  }\r\n}\r\n","module.exports = \".panel {\\r\\n  background: #f5f5f5;\\r\\n}\\r\\n\\r\\n.custom-card-title {\\r\\n  /*background: #f5f5f5;*/\\r\\n}\\r\\n\\r\\n.primary-color {\\r\\n  color: #FF4081 !important;\\r\\n}\\r\\n\\r\\n.accent-color {\\r\\n  color: #FF4081 !important;\\r\\n}\\r\\n\\r\\n.background-primary-color {\\r\\n  background-color: #FF4081 !important;\\r\\n}\\r\\n\\r\\n.background-accent-color {\\r\\n  background-color: #FF4081 !important;\\r\\n}\\r\\n\\r\\n.white-text {\\r\\n  color: #FFF !important;\\r\\n}\\r\\n\\r\\n.example-container {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n}\\r\\n\\r\\n.example-container > * {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.second-column {\\r\\n  margin-left: 53px !important;\\r\\n  /*/margin-top: -55px !important;*/\\r\\n}\\r\\n\\r\\n.mat-checkbox-layout {\\r\\n  margin-top: 15px !important;\\r\\n}\\r\\n\\r\\n\"","module.exports = \"<form class=\\\"margin-2\\\" (ngSubmit)=\\\"onSubmit()\\\" [formGroup]=\\\"projectForm\\\" novalidate>\\r\\n<!--<pre>-->\\r\\n  <!--{{projectForm.value | json}}-->\\r\\n<!--</pre>-->\\r\\n  <mat-card class=\\\"border\\\">\\r\\n    <mat-card-subtitle class=\\\"sub-title\\\">\\r\\n      Project Profile\\r\\n      <mat-divider></mat-divider>\\r\\n    </mat-card-subtitle>\\r\\n    <mat-card-content>\\r\\n      <div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"start\\\" class=\\\"content\\\"\\r\\n           fxLayout.lt-sm=\\\"column\\\" fxLayoutGap=\\\"2em\\\">\\r\\n        <div class=\\\"blocks\\\" fxFlex=\\\"\\\">\\r\\n          <mat-form-field>\\r\\n            <mat-label for=\\\"Title\\\">Project Title *:</mat-label>\\r\\n            <input matInput formControlName=\\\"ProjectName\\\">\\r\\n            <mat-error align=\\\"start\\\" *ngIf=\\\"formErrors.ProjectName\\\">{{ formErrors.ProjectName }}</mat-error>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n        <div class=\\\"blocks\\\" fxFlex>\\r\\n          <mat-form-field>\\r\\n            <input placeholder=\\\"Start Date * :\\\"\\r\\n                   formControlName=\\\"StartDate\\\"\\r\\n                   matInput\\r\\n                   [min]=\\\"initMinDate\\\"\\r\\n                   [max]=\\\"maxDate\\\"\\r\\n                   [matDatepicker]=\\\"startDate\\\"\\r\\n                   (dateChange)=\\\"setMinDate($event.value)\\\">\\r\\n            <mat-datepicker-toggle matSuffix [for]=\\\"startDate\\\"></mat-datepicker-toggle>\\r\\n            <mat-datepicker #startDate></mat-datepicker>\\r\\n            <mat-error align=\\\"start\\\" *ngIf=\\\"formErrors.StartDate\\\">{{ formErrors.StartDate }}</mat-error>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n        <div class=\\\"block\\\" fxFlex>\\r\\n          <mat-form-field>\\r\\n            <input placeholder=\\\"Ending Date * :\\\"\\r\\n                   matInput\\r\\n                   [min]=\\\"minDate\\\"\\r\\n                   formControlName=\\\"EndingDate\\\"\\r\\n                   [matDatepicker]=\\\"terminationDate\\\">\\r\\n            <mat-datepicker-toggle matSuffix [for]=\\\"terminationDate\\\"></mat-datepicker-toggle>\\r\\n            <mat-datepicker #terminationDate></mat-datepicker>\\r\\n            <!--<mat-error align=\\\"start\\\" *ngIf=\\\"formErrors.terminationDate\\\">{{ formErrors.terminationDate }}</mat-error>-->\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n        <div class=\\\"blocks\\\" fxFlex>\\r\\n          <!--<mat-label>Start Date :</mat-label>-->\\r\\n          <mat-form-field>\\r\\n            <input formControlName=\\\"OperationDate\\\"\\r\\n                   [min]=\\\"minDate\\\"\\r\\n                   matInput\\r\\n                   placeholder=\\\"Operation Date * :\\\"\\r\\n                   [matDatepicker]=\\\"operationDate\\\"\\r\\n                   (dateChange)=\\\"setMaxDate($event.value)\\\">\\r\\n            <mat-datepicker-toggle matSuffix [for]=\\\"operationDate\\\"></mat-datepicker-toggle>\\r\\n            <mat-datepicker #operationDate></mat-datepicker>\\r\\n            <mat-error align=\\\"start\\\" *ngIf=\\\"formErrors.operationDate\\\">{{ formErrors.operationDate }}</mat-error>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" class=\\\"content\\\" fxLayout.lt-sm=\\\"column\\\" fxLayoutGap=\\\"2em\\\">\\r\\n\\r\\n\\r\\n        <div class=\\\"block\\\" fxFlex=\\\"50%\\\">\\r\\n          <mat-form-field class=\\\"full-width\\\">\\r\\n            <mat-label>Environmental Impact *:</mat-label>\\r\\n            <textarea rows=\\\"2\\\" matInput\\r\\n                      formControlName=\\\"EnvironmentalImpact\\\">\\r\\n             </textarea>\\r\\n            <mat-error align=\\\"start\\\" *ngIf=\\\"formErrors.EnvironmentalImpact\\\">{{ formErrors.EnvironmentalImpact }}\\r\\n            </mat-error>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n        <div class=\\\"block\\\" fxFlex=\\\"\\\">\\r\\n          <mat-form-field class=\\\"full-width\\\">\\r\\n            <mat-label>Project Description :</mat-label>\\r\\n            <textarea rows=\\\"2\\\" matInput formControlName=\\\"ProjectDescription\\\"></textarea>\\r\\n            <mat-error align=\\\"start\\\" *ngIf=\\\"formErrors.ProjectDescription\\\">{{ formErrors.ProjectDescription }}\\r\\n            </mat-error>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n      </div>\\r\\n      <h4 class=\\\"sub-title\\\">Project Address\\r\\n        <mat-divider></mat-divider>\\r\\n      </h4>\\r\\n      <!--<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" class=\\\"content\\\" fxLayout.lt-sm=\\\"column\\\">-->\\r\\n      <!---->\\r\\n      <!--<mat-divider></mat-divider>-->\\r\\n      <!--</div>-->\\r\\n\\r\\n      <div formGroupName=\\\"address\\\">\\r\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" class=\\\"content\\\" fxLayout.lt-sm=\\\"column\\\" fxLayoutGap=\\\"2em\\\">\\r\\n\\r\\n          <div class=\\\"block\\\" fxFlex=\\\"\\\">\\r\\n\\r\\n            <mat-form-field>\\r\\n              <mat-label>Region : *</mat-label>\\r\\n              <mat-select formControlName=\\\"RegionId\\\"\\r\\n                          (selectionChange)=\\\"filterRegion($event.value)\\\">\\r\\n                <mat-option value=\\\"0\\\">--</mat-option>\\r\\n                <mat-option *ngFor=\\\"let region of regions\\\" [value]=\\\"region.RegionId\\\">\\r\\n                  {{region.Description}}\\r\\n                </mat-option>\\r\\n              </mat-select>\\r\\n              <mat-error align=\\\"start\\\" *ngIf=\\\"formErrors.Region\\\">{{ formErrors.Region }}</mat-error>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div class=\\\"block\\\" fxFlex=\\\"\\\">\\r\\n            <mat-form-field>\\r\\n              <mat-label>Zone * :</mat-label>\\r\\n              <mat-select formControlName=\\\"ZoneId\\\" (selectionChange)=\\\"filterZone($event.value)\\\">\\r\\n                <mat-option value=\\\"0\\\">--</mat-option>\\r\\n                <mat-option *ngFor=\\\"let zone of filteredZones\\\" [value]=\\\"zone.ZoneId\\\">\\r\\n                  {{zone.Description}}\\r\\n                </mat-option>\\r\\n              </mat-select>\\r\\n              <mat-error align=\\\"start\\\" *ngIf=\\\"formErrors.Zone\\\">{{ formErrors.Zone }}</mat-error>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div class=\\\"block\\\" fxFlex=\\\"\\\">\\r\\n            <mat-form-field>\\r\\n              <mat-label>Woreda * :</mat-label>\\r\\n              <mat-select formControlName=\\\"WoredaId\\\" (selectionChange)=\\\"getKebeleByWoredaId($event.value)\\\">\\r\\n                <mat-option value=\\\"0\\\">--</mat-option>\\r\\n\\r\\n                <mat-option *ngFor=\\\"let w of filteredWoredas\\\" [value]=\\\"w.WoredaId\\\">\\r\\n                  {{w.Description}}\\r\\n                </mat-option>\\r\\n              </mat-select>\\r\\n              <mat-error align=\\\"start\\\" *ngIf=\\\"formErrors.Woreda\\\">{{ formErrors.Woreda }}</mat-error>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div class=\\\"block\\\" fxFlex=\\\"\\\">\\r\\n            <mat-form-field>\\r\\n              <mat-label>Kebele * :</mat-label>\\r\\n              <mat-select formControlName=\\\"KebeleId\\\">\\r\\n                <mat-option value=\\\"0\\\">--</mat-option>\\r\\n                <mat-option *ngFor=\\\"let k of filteredKebeles\\\" [value]=\\\"k.KebeleId\\\">\\r\\n                  {{k.Description}}\\r\\n                </mat-option>\\r\\n              </mat-select>\\r\\n              <mat-error align=\\\"start\\\" *ngIf=\\\"formErrors.Kebele\\\">{{ formErrors.Kebele }}</mat-error>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n        <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start start\\\" class=\\\"content\\\" fxLayout.lt-sm=\\\"column\\\" fxLayoutGap=\\\"1em\\\">\\r\\n\\r\\n          <div class=\\\"block\\\" fxFlex=\\\"25\\\">\\r\\n            <mat-form-field>\\r\\n              <mat-label>Specific Area Name * :</mat-label>\\r\\n              <input formControlName=\\\"SpecificAreaName\\\" matInput type=\\\"text\\\">\\r\\n              <mat-error align=\\\"start\\\" *ngIf=\\\"formErrors.SpecificAreaName\\\">{{ formErrors.SpecificAreaName }}</mat-error>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n          <div class=\\\"block\\\" fxFlex=\\\"25\\\" style=\\\"margin-top: 10px !important;padding-top: 20px !important;\\\">\\r\\n            <mat-checkbox formControlName=\\\"IsIndustrialPark\\\">\\r\\n              Is Industrial Park ?\\r\\n            </mat-checkbox>\\r\\n          </div>\\r\\n          <div class=\\\"block\\\" fxFlex=\\\"25\\\" *ngIf=\\\"getIsChecked()\\\">\\r\\n            <mat-form-field>\\r\\n              <mat-label>Industrial Park :</mat-label>\\r\\n              <mat-select formControlName=\\\"IndustrialParkId\\\">\\r\\n                <mat-option *ngFor=\\\"let site of allSiteList\\\" [value]=\\\"site.SiteId\\\">\\r\\n                  <span>   {{site.NameEnglish}}</span>\\r\\n                </mat-option>\\r\\n              </mat-select>\\r\\n              <mat-error align=\\\"start\\\" *ngIf=\\\"formErrors.Kebele\\\">{{ formErrors.Kebele }}</mat-error>\\r\\n            </mat-form-field>\\r\\n          </div>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start start\\\" class=\\\"content\\\" fxLayout.lt-sm=\\\"column\\\" fxLayoutGap=\\\"1em\\\">\\r\\n\\r\\n        <div class=\\\"block\\\" fxFlex=\\\"25\\\" style=\\\"margin-top: 10px !important;padding-top: 20px !important;\\\">\\r\\n          <mat-checkbox formControlName=\\\"IsOromiaSpecialZone\\\">\\r\\n            Is Oromia Special Zone ?\\r\\n          </mat-checkbox>\\r\\n        </div>\\r\\n      </div>\\r\\n    </mat-card-content>\\r\\n  </mat-card>\\r\\n  <mat-card class=\\\"border\\\" style=\\\"margin-top: 20px;\\\">\\r\\n\\r\\n    <!--<div>documentForm value: {{projectForm.value | json }}</div>-->\\r\\n\\r\\n    <mat-card-subtitle class=\\\"sub-title\\\">Category\\r\\n      <mat-divider></mat-divider>\\r\\n    </mat-card-subtitle>\\r\\n    <div>\\r\\n      <div class=\\\"block\\\" fxFlex=\\\"\\\">\\r\\n        <mat-form-field class=\\\"full-width\\\">\\r\\n          <mat-label>Sector</mat-label>\\r\\n          <mat-select formControlName=\\\"SectorId\\\" (selectionChange)=\\\"filterSubSector($event.value)\\\">\\r\\n            <mat-option value=\\\"0\\\">--</mat-option>\\r\\n            <mat-option *ngFor=\\\"let sector of sectorList\\\" [value]=\\\"sector.SectorId\\\">\\r\\n              {{sector.DescriptionEnglish}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n          <mat-error align=\\\"start\\\" *ngIf=\\\"formErrors.Sector\\\">{{ formErrors.Sector }}</mat-error>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start\\\" class=\\\"content\\\" fxLayout.lt-sm=\\\"column\\\" fxLayoutGap=\\\"2em\\\">\\r\\n      <div class=\\\"block\\\" fxFlex=\\\"\\\">\\r\\n        <mat-form-field class=\\\"full-width\\\">\\r\\n          <mat-label>SubSector * :</mat-label>\\r\\n\\r\\n          <mat-select formControlName=\\\"SubSectorId\\\" (selectionChange)=\\\"filterActivity($event.value)\\\">\\r\\n            <mat-option value=\\\"0\\\">--</mat-option>\\r\\n            <mat-option *ngFor=\\\"let sub of filterSubSectorList\\\" [value]=\\\"sub.SubSectorId\\\">\\r\\n              {{sub.DescriptionEnglish}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n          <!--<mat-error align=\\\"start\\\" *ngIf=\\\"formErrors.Zone\\\">{{ formErrors.Zone }}</mat-error>-->\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start\\\" class=\\\"content\\\" fxLayout.lt-sm=\\\"column\\\" fxLayoutGap=\\\"2em\\\">\\r\\n      <div class=\\\"block\\\" fxFlex=\\\"\\\">\\r\\n        <mat-form-field class=\\\"full-width\\\">\\r\\n          <mat-label>Activity *:</mat-label>\\r\\n          <mat-select formControlName=\\\"ActivityId\\\" (selectionChange)=\\\"filterInvestmentActivity($event.value)\\\">\\r\\n            <mat-option value=\\\"0\\\">--</mat-option>\\r\\n            <mat-option *ngFor=\\\"let activity of filterActivityLIst \\\" [value]=\\\"activity.ActivityId\\\">\\r\\n              {{activity.DescriptionEnglish}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n          <mat-error></mat-error>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start\\\" class=\\\"content\\\" fxLayout.lt-sm=\\\"column\\\" fxLayoutGap=\\\"2em\\\">\\r\\n      <div class=\\\"block\\\" fxFlex>\\r\\n        <mat-form-field class=\\\"full-width\\\">\\r\\n          <mat-label>Investment activity *:</mat-label>\\r\\n          <mat-select formControlName=\\\"InvActivityId\\\">\\r\\n            <mat-option value=\\\"0\\\">--</mat-option>\\r\\n            <mat-option *ngFor=\\\"let inActivity of filterInvestmentActivityList\\\" [value]=\\\"inActivity.InvActivityId\\\">\\r\\n              {{inActivity.DescriptionEnglish}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n          <mat-error></mat-error>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    </div>\\r\\n    <mat-card-content>\\r\\n    </mat-card-content>\\r\\n  </mat-card>\\r\\n  <!--<mat-divider></mat-divider>-->\\r\\n  <mat-card class=\\\"border\\\" style=\\\"     border-top: 0px;;margin-bottom: 40px; \\\">\\r\\n    <mat-card-content>\\r\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\">\\r\\n\\r\\n        <div fxFlex=\\\"15\\\">\\r\\n\\r\\n          <!--<button class=\\\"custom-button\\\" (click)=\\\"next()\\\" color=\\\"warn\\\" type=\\\"button\\\">-->\\r\\n          <!--Back-->\\r\\n          <!--</button>-->\\r\\n        </div>\\r\\n        <div style=\\\"text-align: center\\\" fxFlex=\\\"67\\\" fxFlexAlign=\\\"center\\\">\\r\\n          <button\\r\\n            [disabled]=\\\"!projectForm.valid\\\"\\r\\n            mat-raised-button=\\\"\\\"\\r\\n            type=\\\"submit\\\"\\r\\n            color=\\\"primary\\\">\\r\\n            <mat-icon class=\\\"mat-18\\\">done</mat-icon>\\r\\n            <span class=\\\"agree\\\">{{editMode ? 'update' : 'Save'}}</span>\\r\\n\\r\\n          </button>\\r\\n          <!--<button style=\\\"margin-left: 5px\\\" mat-raised-button=\\\"\\\" (click)=\\\"onClear()\\\" color=\\\"warn\\\" type=\\\"button\\\">-->\\r\\n          <!--<mat-icon class=\\\"mat-18\\\">clear_all</mat-icon>-->\\r\\n          <!--</button>-->\\r\\n\\r\\n        </div>\\r\\n        <!--<div fxFlex=\\\"15\\\">-->\\r\\n\\r\\n        <!--<button [disabled]=\\\"!projectForm.valid\\\" class=\\\"custom-button\\\" (click)=\\\"next()\\\" color=\\\"warn\\\" type=\\\"button\\\">-->\\r\\n        <!--Next-->\\r\\n        <!--</button>-->\\r\\n        <!--</div>-->\\r\\n      </div>\\r\\n\\r\\n    </mat-card-content>\\r\\n  </mat-card>\\r\\n\\r\\n</form>\\r\\n\\r\\n<div *ngIf=\\\"loading\\\" class=\\\"loadme-circleBounce\\\">\\r\\n  <div class=\\\"loadme-circleBounce1\\\"></div>\\r\\n  <div class=\\\"loadme-circleBounce2\\\"></div>\\r\\n</div>\\r\\n\"","import {AfterContentChecked, Component, OnDestroy, OnInit, ViewChild} from '@angular/core';\r\nimport {Subscription} from 'rxjs';\r\nimport {ProjectModel} from '../../../model/Project.model';\r\nimport {FormBuilder, FormControl, FormGroup, NgForm, Validators} from '@angular/forms';\r\nimport {ActivatedRoute, Params, Router} from '@angular/router';\r\nimport {ProjectProfileService} from '../../../Services/project-profile.service';\r\nimport {AddressModel} from '../../../model/address/Address.model';\r\nimport {AddressService} from '../../../Services/Address/address.service';\r\nimport {RegionModel} from '../../../model/address/Region.model';\r\nimport {ZoneModel} from '../../../model/address/Zone.model';\r\nimport {WoredaModel} from '../../../model/address/Woreda.model';\r\nimport {KebeleModel} from '../../../model/address/Kebele.model';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {SectorService} from '../../../Services/Sector.service';\r\nimport {SectorModel} from '../../../model/Sector.model';\r\nimport {SiteService} from '../../../Services/site.service';\r\nimport {SubSectorModel} from '../../../model/SubSector.model';\r\nimport {MatSnackBar} from '@angular/material/snack-bar';\r\nimport {FormOfOwnershipModel} from '../../../model/EnumModel';\r\nimport {DataSharingService} from '../../../Services/data-sharing.service';\r\nimport {ActivityService} from '../../setting/category-tabs/Activity/activity.service';\r\nimport {ActivityModel} from '../../../model/activity';\r\nimport {InvactivityService} from '../../setting/category-tabs/InvActivity/invactivity.service';\r\nimport {InvActivityModel} from '../../../model/invactivity';\r\nimport {ErrorMessage} from '@custor/services/errMessageService';\r\nimport {FormService} from '@custor/validation/custom/form';\r\nimport {CustomValidators} from '@custor/validation/custom/custom_validators';\r\nimport {FormOfOwnership} from '@custor/const/consts';\r\nimport {InvestorService} from '../../investor/investor.service';\r\nimport {UserActivityDataServices} from '../../../admin/user-detail/user-detail.service';\r\nimport {AccountService} from '@custor/services/security/account.service';\r\nimport {SiteModel} from '../../../model/Site.model';\r\n\r\n@Component({\r\n  selector: 'app-project-profile-form',\r\n  templateUrl: './project-profile-form.component.html',\r\n  styleUrls: ['./project-profile-form.component.css']\r\n})\r\nexport class ProjectProfileFormComponent implements OnInit, AfterContentChecked {\r\n  @ViewChild('costF') costForm: NgForm;\r\n  formOfOwnershipList: FormOfOwnershipModel[] = [];\r\n  subscription: Subscription;\r\n  serviceIdSubscription: Subscription;\r\n  editMode = false;\r\n  loading = false;\r\n  project: ProjectModel;\r\n  address: AddressModel;\r\n  projectId: any;\r\n  projectIdEditing: number;\r\n  addressId: number;\r\n  sectorList: SectorModel[] = [];\r\n  subSectorList: SubSectorModel[] = [];\r\n  regions: RegionModel[] = [];\r\n  zones: ZoneModel[] = [];\r\n  filteredZones: ZoneModel[] = [];\r\n  woredas: WoredaModel[] = [];\r\n  filteredWoredas: WoredaModel[] = [];\r\n  kebeles: KebeleModel[] = [];\r\n  filteredKebeles: KebeleModel[] = [];\r\n  public formErrors = {\r\n    ProjectName: '',\r\n    ProjectDescription: '',\r\n    StartDate: '',\r\n    operationDate: '',\r\n    EndingDate: '',\r\n    Sector: '',\r\n    SubSector: '',\r\n    Region: '',\r\n    Zone: '',\r\n    Woreda: '',\r\n    Kebele: '',\r\n    SpecificAreaName: '',\r\n    Remark: '',\r\n    EnvironmentalImpact: ''\r\n\r\n  };\r\n\r\n  minDate: Date;\r\n  initMinDate: Date;\r\n  maxDate: Date;\r\n  projectForm: FormGroup;\r\n  private addressList: AddressModel;\r\n  public activity: ActivityModel[];\r\n  public filterActivityLIst: ActivityModel[];\r\n\r\n  public investmentActivity: InvActivityModel[];\r\n  public filterInvestmentActivityList: InvActivityModel[];\r\n  public filterSubSectorList: SubSectorModel[];\r\n  public allSiteList: SiteModel[] = [];\r\n  private ServiceId: any;\r\n  private InvestorId: any;\r\n  private workFlowId: any;\r\n  private ServiceApplicationId: any;\r\n\r\n\r\n  constructor(private route: ActivatedRoute,\r\n              private router: Router,\r\n              public activityDataServices: UserActivityDataServices,\r\n              public accountServices: AccountService,\r\n              private formBuilder: FormBuilder,\r\n              private toastr: ToastrService,\r\n              private projectProfileService: ProjectProfileService,\r\n              private addressService: AddressService,\r\n              private investorService: InvestorService,\r\n              private errMsg: ErrorMessage,\r\n              private sectorService: SectorService,\r\n              private siteService: SiteService,\r\n              public formService: FormService,\r\n              public snackbar: MatSnackBar,\r\n              public activityService: ActivityService,\r\n              public invactivityService: InvactivityService,\r\n              private dataSharing: DataSharingService) {\r\n    // this.project = <ProjectModel>{};\r\n    // this.address = <AddressModel>{};\r\n  }\r\n\r\n  setMinDate(minD: Date) {\r\n    this.minDate = minD;\r\n  }\r\n\r\n  setMaxDate(value: Date) {\r\n    this.maxDate = value;\r\n  }\r\n\r\n  updateDateRange() {\r\n    const today = new Date();\r\n    let mm1, dd1;\r\n    const dd = today.getDate();\r\n    const mm = today.getMonth() + 1;\r\n    const yyyy = today.getFullYear();\r\n    if (dd < 10) {\r\n      dd1 = '0' + dd;\r\n    }\r\n    if (mm < 10) {\r\n      mm1 = '0' + mm;\r\n    }\r\n    const today1 = mm1 + '/' + dd1 + '/' + yyyy;\r\n    this.initMinDate = new Date(today);\r\n    if (this.projectForm.value.OperationDate !== null) {\r\n      this.minDate = this.projectForm.value.OperationDate;\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.ServiceId = this.route.snapshot.params['ServiceId'];\r\n    this.InvestorId = this.route.snapshot.params['InvestorId'];\r\n    this.workFlowId = this.route.snapshot.params['workFlowId'];\r\n    this.ServiceApplicationId = this.route.snapshot.params['ServiceApplicationId'];\r\n    this.projectId = this.route.snapshot.params['ProjectId'];\r\n\r\n    this.fillAddressLookups();\r\n    this.formBuild();\r\n    this.updateDateRange();\r\n    this.initStaticData('en');\r\n    if (this.projectId > 1) {\r\n      this.getProjectDetail();\r\n    }\r\n\r\n\r\n  }\r\n\r\n  getProjectDetail() {\r\n    this.projectProfileService\r\n      .getOneById(this.projectId)\r\n      .subscribe(project => {\r\n        if (localStorage.getItem('ParentProjectId') === null) {\r\n          this.editMode = true;\r\n          this.projectIdEditing = project.ProjectId;\r\n        }\r\n        this.projectForm.patchValue(project);\r\n        this.getAddressData(project.ProjectId);\r\n      }, error => this.errMsg.getError(error));\r\n  }\r\n\r\n  getAddressData(parent: number) {\r\n    this.addressService.getAddress(parent)\r\n      .subscribe((result: AddressModel) => {\r\n        this.addressList = result;\r\n        this.getKebeleByWoredaId(result.WoredaId);\r\n        this.addressId = result.AddressId;\r\n        this.projectForm.get('address').patchValue(result);\r\n      }, error => this.errMsg.getError(error));\r\n  }\r\n\r\n\r\n  fillAddressLookups() {\r\n    this.loading = true;\r\n    this.getRegions();\r\n    this.getAllZones();\r\n    this.getAllWoredas();\r\n    this.getAllSector();\r\n    this.getAllSubSector();\r\n    this.getAllActivityService();\r\n    this.getAllInvestmentActivity();\r\n    this.getAllSite();\r\n\r\n  }\r\n\r\n  getAllSector() {\r\n    this.sectorService.getSector()\r\n      .subscribe(result => {\r\n          this.sectorList = result;\r\n        },\r\n        error => this.toastr.error(this.errMsg.getError(error)\r\n        ));\r\n  }\r\n\r\n  getAllSubSector() {\r\n    this.sectorService.getAllSubSector()\r\n      .subscribe(result => {\r\n          this.subSectorList = result;\r\n          this.filterSubSectorList = result;\r\n        },\r\n        error => this.toastr.error(this.errMsg.getError(error)));\r\n  }\r\n\r\n  getAllActivityService() {\r\n    this.activityService.getActivitys()\r\n      .subscribe(result => {\r\n        this.activity = result;\r\n        this.filterActivityLIst = result;\r\n      }, error => this.toastr.error(this.errMsg.getError(error)));\r\n  }\r\n\r\n  getAllInvestmentActivity() {\r\n    this.invactivityService.getInActivitys()\r\n      .subscribe(result => {\r\n        this.investmentActivity = result;\r\n        this.filterInvestmentActivityList = result;\r\n      }, error => this.toastr.error(this.errMsg.getError(error)));\r\n  }\r\n\r\n  getRegions() {\r\n    this.addressService.getRegions()\r\n      .subscribe(result => {\r\n          this.regions = result;\r\n        },\r\n        error => this.toastr.error(this.errMsg.getError(error)));\r\n  }\r\n\r\n  getAllZones() {\r\n    this.addressService.getAllZones()\r\n      .subscribe(result => {\r\n          this.zones = result;\r\n          this.filteredZones = result;\r\n        },\r\n        error => this.toastr.error(this.errMsg.getError(error)));\r\n  }\r\n\r\n  getAllWoredas() {\r\n    this.addressService.getAllWoredas()\r\n      .subscribe(result => {\r\n          this.woredas = result;\r\n          this.filteredWoredas = result;\r\n        },\r\n        error => this.toastr.error(this.errMsg.getError(error)));\r\n  }\r\n\r\n  getKebeleByWoredaId(wordaId: any) {\r\n    this.addressService.getKebelesByWoreda(wordaId)\r\n      .subscribe(result => {\r\n        this.kebeles = result;\r\n        this.loading = false;\r\n        this.filteredKebeles = result;\r\n      });\r\n  }\r\n\r\n  filterRegion(regionCode: string) {\r\n    if (!regionCode) {\r\n      return;\r\n    }\r\n    this.filteredZones = null;\r\n    this.filteredKebeles = null;\r\n    this.filteredWoredas = null;\r\n    this.filteredZones = this.zones.filter((item) => {\r\n      return item.RegionId === regionCode;\r\n    });\r\n  }\r\n\r\n\r\n  filterZone(zoneCode: string) {\r\n    if (!zoneCode) {\r\n      return;\r\n    }\r\n    this.filteredKebeles = null;\r\n    this.filteredWoredas = null;\r\n\r\n    this.filteredWoredas = this.woredas.filter((item) => {\r\n      return item.ZoneId === zoneCode;\r\n    });\r\n  }\r\n\r\n  filterWoreda(woredaCode: string) {\r\n    if (!woredaCode) {\r\n      return;\r\n    }\r\n\r\n  }\r\n\r\n  filterSubSector(SubSecId: string) {\r\n    if (!SubSecId) {\r\n      return;\r\n    }\r\n\r\n    this.filterActivityLIst = null;\r\n    this.filterSubSectorList = this.subSectorList.filter((item) => {\r\n      return item.SectorId === SubSecId;\r\n    });\r\n  }\r\n\r\n  filterActivity(activityId: number) {\r\n    if (!activityId) {\r\n      return;\r\n    }\r\n\r\n    this.filterActivityLIst = this.activity.filter((item) => {\r\n      return item.SubSectorId === activityId;\r\n    });\r\n  }\r\n\r\n  filterInvestmentActivity(InvActivityId: number) {\r\n    if (!InvActivityId) {\r\n      return;\r\n    }\r\n    // console.log(this.investmentActivity);\r\n    this.filterInvestmentActivityList = this.investmentActivity.filter((item) => {\r\n      return item.ActivityId === InvActivityId;\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.loading = true;\r\n    this.formService.markFormGroupTouched(this.projectForm);\r\n    if (this.projectForm.valid) {\r\n      if (!this.editMode) {\r\n        this.projectProfileService.create(this.projectForm.value)\r\n          .subscribe(result => {\r\n            this.projectId = result.ProjectId;\r\n            // localStorage.setItem('ProjectId', this.projectId);\r\n            // this.router.navigate(['pro/', this.projectId]);\r\n            // localStorage.setItem('workFlowId', result.ServiceApplication[0].ServiceWorkflow[0].ServiceWorkflowId);\r\n            // localStorage.setItem('ServiceApplicationId', result.ServiceApplication[0].ServiceApplicationId);\r\n\r\n            this.router.navigate(['pro/' + this.projectId + '/' + result.ServiceApplication[0].ServiceApplicationId + '/' + this.ServiceId + '/' + result.ServiceApplication[0].ServiceWorkflow[0].ServiceWorkflowId + '/' + this.InvestorId]);\r\n\r\n            this.notification('project  saved');\r\n            this.saveAddress();\r\n          });\r\n      } else {\r\n        this.projectProfileService.update(this.projectForm.value, this.projectIdEditing)\r\n          .subscribe(result => {\r\n            this.projectId = result.ProjectId;\r\n\r\n            this.notification('project updated');\r\n            this.saveAddress();\r\n          });\r\n      }\r\n    } else {\r\n      this.formErrors = this.formService.validateForm(this.projectForm, this.formErrors, false);\r\n    }\r\n  }\r\n\r\n\r\n  saveAddress() {\r\n    this.projectForm.get('address').patchValue({\r\n      ParentId: this.projectId\r\n    });\r\n    if (this.editMode && typeof (this.addressId) !== 'undefined') {\r\n      this.addressService.updateAddress(this.projectForm.get('address').value, this.addressId)\r\n        .subscribe(result => {\r\n          this.notification('address updated');\r\n        });\r\n    } else {\r\n      this.addressService.saveAddress(this.projectForm.get('address').value)\r\n        .subscribe(result => {\r\n          setTimeout(() => this.dataSharing.projectId.next(this.projectId), 0);\r\n          this.notification('address saved');\r\n          setTimeout(() => this.dataSharing.steeperIndex.next(2), 0);\r\n          setTimeout(() => this.dataSharing.currentIndex.next(2), 0);\r\n        });\r\n    }\r\n  }\r\n\r\n  formBuild() {\r\n    console.log(this.ServiceId)\r\n    this.projectForm = this.formBuilder.group({\r\n      ProjectName: ['', [Validators.required,\r\n        CustomValidators.validateCharacters, Validators.minLength(2)]],\r\n      InvestorId: [this.InvestorId],\r\n      ServiceId: [this.ServiceId],\r\n      ParentProjectId: ['0'],\r\n      CreatedUserName: this.accountServices.currentUser.UserName,\r\n      ProjectDescription: ['', [Validators.required, Validators.minLength(2)]],\r\n      StartDate: ['', [Validators.required]],\r\n      OperationDate: ['', Validators.required],\r\n      SectorId: [''],\r\n      SubSectorId: [''],\r\n      ActivityId: [''],\r\n      IsOromiaSpecialZone: [''],\r\n      InvActivityId: [''],\r\n      EndingDate: ['', Validators.required],\r\n      EnvironmentalImpact: ['', [Validators.required, Validators.minLength(2)\r\n      ]],\r\n\r\n      'address': new FormGroup({\r\n        ParentId: new FormControl(),\r\n        RegionId: new FormControl(),\r\n        ZoneId: new FormControl(),\r\n        WoredaId: new FormControl(),\r\n        KebeleId: new FormControl(),\r\n        SpecificAreaName: new FormControl(),\r\n        IsIndustrialPark: new FormControl(),\r\n        IndustrialParkId: new FormControl(),\r\n        Remark: new FormControl()\r\n      })\r\n    });\r\n\r\n    this.projectForm.valueChanges.subscribe((data) => {\r\n      this.formErrors = this.formService.validateForm(this.projectForm, this.formErrors, true);\r\n    });\r\n  }\r\n\r\n  initStaticData(currentLang) {\r\n    let formOfOwnership: FormOfOwnershipModel = new FormOfOwnershipModel();\r\n    FormOfOwnership.forEach(pair => {\r\n      formOfOwnership = {\r\n        'Id': pair.Id.toString(),\r\n        'Desc': (currentLang === 'am' ? pair.Description : pair.DescriptionEng)\r\n      };\r\n      this.formOfOwnershipList.push(formOfOwnership);\r\n    });\r\n  }\r\n\r\n  notification(message: string) {\r\n    this.loading = false;\r\n    this.toastr.success(` Succesfully ${message} Data.!`, 'Success');\r\n\r\n  }\r\n\r\n  ngAfterContentChecked(): void {\r\n    this.projectForm.patchValue({\r\n      ServiceId: this.ServiceId\r\n    });\r\n    if (this.ServiceId == 1023 && !this.editMode) {\r\n      this.projectForm.patchValue({\r\n        ParentProjectId: localStorage.getItem('ParentProjectId')\r\n      });\r\n    }\r\n  }\r\n\r\n  next() {\r\n    this.dataSharing.steeperIndex.next(2);\r\n\r\n  }\r\n\r\n  private getAllSite() {\r\n    this.siteService.getAll()\r\n      .subscribe(result => {\r\n        this.filterOnlineUser(result);\r\n      });\r\n\r\n  }\r\n\r\n  getIsChecked() {\r\n    return this.projectForm.get('address').get('IsIndustrialPark').value;\r\n  }\r\n\r\n\r\n  private filterOnlineUser(result: SiteModel[]) {\r\n    this.allSiteList = result.filter((item) => {\r\n      return item.SiteCode !== 'OnlineSite';\r\n    });\r\n  }\r\n}\r\n","module.exports = \"\"","module.exports = \"<mat-card>\\r\\n  <div>\\r\\n    <!--<button type=\\\"button\\\" mat-raised-button (click)=\\\"onNewProject()\\\" color=\\\"primary\\\">-->\\r\\n      <!--<i class=\\\"material-icons\\\">add</i>New-->\\r\\n    <!--</button>-->\\r\\n    <!--<button (click)=\\\"onProjectList()\\\" type=\\\"button\\\" mat-raised-button-->\\r\\n            <!--color=\\\"primary\\\">-->\\r\\n      <!--<i class=\\\"material-icons\\\">list</i> List-->\\r\\n    <!--</button>-->\\r\\n  </div>\\r\\n</mat-card>\\r\\n<mat-card>\\r\\n  <router-outlet></router-outlet>\\r\\n</mat-card>\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-project-profile',\r\n  templateUrl: './project-profile.component.html',\r\n  styleUrls: ['./project-profile.component.css']\r\n})\r\nexport class ProjectProfileComponent implements OnInit {\r\n  constructor(private router: Router,\r\n    private route: ActivatedRoute) {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onProjectList() {\r\n    // console.log(this.router.url);\r\n    this.router.navigate(['../list'], { relativeTo: this.route });\r\n  }\r\n\r\n  onNewProject() {\r\n    // console.log(this.router.url);\r\n    this.router.navigate(['../new'], { relativeTo: this.route });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ProjectStepperComponent } from './project-stepper/project-stepper.component';\r\nimport { ProjectProfileDetailComponent } from './project-profile-detail/project-profile-detail.component';\r\nimport { ProjectListComponent } from './project-list/project-list.component';\r\nimport { ProjectProfileFormComponent } from './project-profile-form/project-profile-form.component';\r\n\r\nconst projectRouting: Routes = [\r\n  {\r\n    path: '', component: ProjectStepperComponent, children: [\r\n      { path: 'new', component: ProjectStepperComponent },\r\n      { path: 'detail/:id', component: ProjectProfileDetailComponent },\r\n      { path: ':id/edit', component: ProjectProfileFormComponent }\r\n    ]\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(projectRouting)\r\n  ],\r\n  exports: [RouterModule],\r\n  declarations: []\r\n})\r\nexport class ProjectRoutingModule {\r\n}","module.exports = \"/*.mat-tab-header-pagination*/\\r\\n/*.mat-tab-header-pagination-before*/\\r\\n/*.mat-elevation-z4*/\\r\\n/*.mat-ripple {*/\\r\\n/*background-color: #00bcd4 !important;*/\\r\\n/*}*/\\r\\n/*::ng-deep .mat-tab-label {*/\\r\\n/*pointer-events: none;*/\\r\\n/*}*/\\r\\n\\r\\n\\r\\n\"","module.exports = \"<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" fxLayoutGap=\\\"0\\\">\\r\\n  <div class=\\\"block\\\" fxFlex=\\\"\\\">\\r\\n    <app-page-header title=\\\"new\\\" icon=\\\"\\\"></app-page-header>\\r\\n\\r\\n  </div>\\r\\n  <div id=\\\"title1\\\" class=\\\"block\\\" fxFlex=\\\"50\\\">\\r\\n    <span class=\\\"page-title\\\">{{title}}</span>\\r\\n    <span class=\\\"slideBorder\\\">/</span>\\r\\n    <span class=\\\"page-title\\\">{{investorName}}</span>\\r\\n    <span class=\\\"slideBorder\\\">/</span>\\r\\n    <span class=\\\"page-title\\\">{{projectName}}</span>\\r\\n\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<mat-tab-group #stepper>\\r\\n\\r\\n  <mat-tab [disabled]=\\\"ServiceId==='1234'\\\" label=\\\"Service Info\\\">\\r\\n    <ng-template matTabContent>\\r\\n      <!--<a [routerLink]=\\\"['/service-info/0']\\\"></a>-->\\r\\n      <app-service-info></app-service-info>\\r\\n    </ng-template>\\r\\n  </mat-tab>\\r\\n  <mat-tab [disabled]=\\\"nextIndex <1 || ServiceId==='1234'\\\" label=\\\"Profile\\\">\\r\\n    <ng-template matTabContent>\\r\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\">\\r\\n        <div fxFlex=\\\"15\\\">\\r\\n          <button class=\\\"next-button\\\" (click)=\\\"back()\\\" type=\\\"button\\\">\\r\\n            Back\\r\\n          </button>\\r\\n        </div>\\r\\n        <div style=\\\"text-align: center\\\" fxFlex=\\\"75\\\" fxFlexAlign=\\\"center\\\">\\r\\n        </div>\\r\\n        <div fxFlex=\\\"10\\\">\\r\\n          <button class=\\\"next-button\\\" (click)=\\\"next()\\\" color=\\\"primary\\\" type=\\\"button\\\">\\r\\n            Next\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <app-project-profile-form></app-project-profile-form>\\r\\n\\r\\n    </ng-template>\\r\\n  </mat-tab>\\r\\n  <mat-tab [disabled]=\\\"nextIndex<2 || ServiceId==='1234'\\\" label=\\\"Input\\\">\\r\\n    <ng-template matTabContent>\\r\\n\\r\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\">\\r\\n        <div fxFlex=\\\"15\\\">\\r\\n          <button class=\\\"next-button\\\" (click)=\\\"back()\\\" type=\\\"button\\\">\\r\\n            Back\\r\\n          </button>\\r\\n        </div>\\r\\n        <div style=\\\"text-align: center\\\" fxFlex=\\\"75\\\" fxFlexAlign=\\\"center\\\">\\r\\n        </div>\\r\\n        <div fxFlex=\\\"10\\\">\\r\\n          <button class=\\\"next-button\\\" (click)=\\\"next()\\\" color=\\\"primary\\\" type=\\\"button\\\">\\r\\n            Next\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n      <app-project-input-output></app-project-input-output>\\r\\n    </ng-template>\\r\\n  </mat-tab>\\r\\n  <mat-tab [disabled]=\\\"nextIndex<3|| ServiceId==='1234'\\\" label=\\\"Raw Material\\\">\\r\\n    <ng-template matTabContent>\\r\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\">\\r\\n        <div fxFlex=\\\"15\\\">\\r\\n          <button class=\\\"next-button\\\" (click)=\\\"back()\\\" type=\\\"button\\\">\\r\\n            Back\\r\\n          </button>\\r\\n        </div>\\r\\n        <div style=\\\"text-align: center\\\" fxFlex=\\\"75\\\" fxFlexAlign=\\\"center\\\">\\r\\n        </div>\\r\\n        <div fxFlex=\\\"10\\\">\\r\\n          <button class=\\\"next-button\\\" (click)=\\\"next()\\\" color=\\\"primary\\\" type=\\\"button\\\">\\r\\n            Next\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n      <app-raw-material-form></app-raw-material-form>\\r\\n    </ng-template>\\r\\n  </mat-tab>\\r\\n  <mat-tab [disabled]=\\\"nextIndex<3\\\" label=\\\"Cost\\\">\\r\\n    <ng-template matTabContent>\\r\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\">\\r\\n        <div fxFlex=\\\"15\\\">\\r\\n          <button class=\\\"next-button\\\" (click)=\\\"back()\\\" type=\\\"button\\\">\\r\\n            Back\\r\\n          </button>\\r\\n        </div>\\r\\n        <div style=\\\"text-align: center\\\" fxFlex=\\\"75\\\" fxFlexAlign=\\\"center\\\">\\r\\n        </div>\\r\\n        <div fxFlex=\\\"10\\\">\\r\\n          <button class=\\\"next-button\\\" (click)=\\\"next()\\\" color=\\\"primary\\\" type=\\\"button\\\">\\r\\n            Next\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n      <app-project-cost></app-project-cost>\\r\\n    </ng-template>\\r\\n  </mat-tab>\\r\\n  <mat-tab [disabled]=\\\"nextIndex<5 || ServiceId==='1234'\\\" label=\\\"Employment\\\">\\r\\n    <ng-template matTabContent>\\r\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\">\\r\\n        <div fxFlex=\\\"15\\\">\\r\\n          <button class=\\\"next-button\\\" (click)=\\\"back()\\\" type=\\\"button\\\">\\r\\n            Back\\r\\n          </button>\\r\\n        </div>\\r\\n        <div style=\\\"text-align: center\\\" fxFlex=\\\"75\\\" fxFlexAlign=\\\"center\\\">\\r\\n        </div>\\r\\n        <div fxFlex=\\\"10\\\">\\r\\n          <button class=\\\"next-button\\\" (click)=\\\"next()\\\" color=\\\"primary\\\" type=\\\"button\\\">\\r\\n            Next\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n      <app-project-employment></app-project-employment>\\r\\n    </ng-template>\\r\\n  </mat-tab>\\r\\n  <mat-tab [disabled]=\\\"nextIndex<6 || ServiceId==='1234'\\\" label=\\\"Share\\\">\\r\\n    <ng-template matTabContent>\\r\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\">\\r\\n        <div fxFlex=\\\"15\\\">\\r\\n          <button class=\\\"next-button\\\" (click)=\\\"back()\\\" type=\\\"button\\\">\\r\\n            Back\\r\\n          </button>\\r\\n        </div>\\r\\n        <div style=\\\"text-align: center\\\" fxFlex=\\\"75\\\" fxFlexAlign=\\\"center\\\">\\r\\n        </div>\\r\\n        <div fxFlex=\\\"10\\\">\\r\\n          <button class=\\\"next-button\\\" (click)=\\\"next()\\\" color=\\\"primary\\\" type=\\\"button\\\">\\r\\n            Next\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n      <app-project-share></app-project-share>\\r\\n    </ng-template>\\r\\n  </mat-tab>\\r\\n  <mat-tab [disabled]=\\\"nextIndex<6 || ServiceId==='1234'\\\" label=\\\"Product\\\">\\r\\n    <ng-template matTabContent>\\r\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\">\\r\\n        <div fxFlex=\\\"15\\\">\\r\\n          <button class=\\\"next-button\\\" (click)=\\\"back()\\\" type=\\\"button\\\">\\r\\n            Back\\r\\n          </button>\\r\\n        </div>\\r\\n        <div style=\\\"text-align: center\\\" fxFlex=\\\"75\\\" fxFlexAlign=\\\"center\\\">\\r\\n        </div>\\r\\n        <div fxFlex=\\\"10\\\">\\r\\n          <button class=\\\"next-button\\\" (click)=\\\"next()\\\" color=\\\"primary\\\" type=\\\"button\\\">\\r\\n            Next\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n      <app-project-product></app-project-product>\\r\\n    </ng-template>\\r\\n  </mat-tab>\\r\\n  <mat-tab [disabled]=\\\"nextIndex<8 || ServiceId==='1234'\\\" label=\\\"Documents\\\">\\r\\n    <ng-template matTabContent>\\r\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\">\\r\\n        <div fxFlex=\\\"15\\\">\\r\\n          <button class=\\\"next-button\\\" (click)=\\\"back()\\\" type=\\\"button\\\">\\r\\n            Back\\r\\n          </button>\\r\\n        </div>\\r\\n        <div style=\\\"text-align: center\\\" fxFlex=\\\"75\\\" fxFlexAlign=\\\"center\\\">\\r\\n        </div>\\r\\n        <div fxFlex=\\\"10\\\">\\r\\n          <button class=\\\"next-button\\\" (click)=\\\"next()\\\" color=\\\"primary\\\" type=\\\"button\\\">\\r\\n            Next\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n      <app-service-prerequisite></app-service-prerequisite>\\r\\n    </ng-template>\\r\\n  </mat-tab>\\r\\n  <mat-tab [disabled]=\\\"nextIndex<8|| ServiceId==='1234'\\\" label=\\\"Associate\\\">\\r\\n    <ng-template matTabContent>\\r\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\">\\r\\n        <div fxFlex=\\\"15\\\">\\r\\n          <button class=\\\"next-button\\\" (click)=\\\"back()\\\" type=\\\"button\\\">\\r\\n            Back\\r\\n          </button>\\r\\n        </div>\\r\\n        <div style=\\\"text-align: center\\\" fxFlex=\\\"75\\\" fxFlexAlign=\\\"center\\\">\\r\\n        </div>\\r\\n        <div fxFlex=\\\"10\\\">\\r\\n          <button class=\\\"next-button\\\" (click)=\\\"next()\\\" color=\\\"primary\\\" type=\\\"button\\\">\\r\\n            Next\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n      <app-project-associate></app-project-associate>\\r\\n    </ng-template>\\r\\n  </mat-tab>\\r\\n  <mat-tab [disabled]=\\\"nextIndex<8|| ServiceId==='1234'\\\" label=\\\"Confirmation\\\">\\r\\n    <ng-template matTabContent>\\r\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\">\\r\\n        <div fxFlex=\\\"15\\\">\\r\\n          <button class=\\\"next-button\\\" (click)=\\\"back()\\\" type=\\\"button\\\">\\r\\n            Back\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n      <app-service-confirmation></app-service-confirmation>\\r\\n    </ng-template>\\r\\n  </mat-tab>\\r\\n\\r\\n\\r\\n</mat-tab-group>\\r\\n<!--<div style=\\\"margin-bottom: 40px\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\">-->\\r\\n<!--<div fxFlex=\\\"15\\\">-->\\r\\n<!--<button class=\\\"next-button\\\" (click)=\\\"back()\\\" type=\\\"button\\\">-->\\r\\n<!--Back-->\\r\\n<!--</button>-->\\r\\n<!--</div>-->\\r\\n<!--<div style=\\\"text-align: center\\\" fxFlex=\\\"75\\\" fxFlexAlign=\\\"center\\\">-->\\r\\n<!--</div>-->\\r\\n<!--<div fxFlex=\\\"10\\\">-->\\r\\n<!--<button class=\\\"next-button\\\" (click)=\\\"next()\\\" color=\\\"primary\\\" type=\\\"button\\\">-->\\r\\n<!--Next-->\\r\\n<!--</button>-->\\r\\n<!--</div>-->\\r\\n<!--</div>-->\\r\\n\"","import {AfterContentChecked, AfterViewInit, Component, OnInit, ViewChild} from '@angular/core';\r\nimport {FormBuilder, FormGroup} from '@angular/forms';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {MatStepper} from '@angular/material';\r\nimport {DataSharingService} from '../../../Services/data-sharing.service';\r\nimport {Subscription} from 'rxjs/Subscription';\r\nimport {InvestorService} from '../../investor/investor.service';\r\nimport {ToastrService} from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-project-stepper',\r\n  templateUrl: './project-stepper.component.html',\r\n  styleUrls: ['./project-stepper.component.css']\r\n})\r\nexport class ProjectStepperComponent implements OnInit, AfterViewInit, AfterContentChecked {\r\n  public isLinear = false;\r\n  firstFormGroup: FormGroup;\r\n  secondFormGroup: FormGroup;\r\n  @ViewChild('stepper') stepper: MatStepper;\r\n  private subscription: Subscription;\r\n  private subscription2: Subscription;\r\n  public steeperIndex = 0;\r\n  // steeperIndex: Observable<number> = Observable.of(0);\r\n\r\n  title: string;\r\n  isSol = true;\r\n  // nextIndex: Observable<number>;\r\n  public nextIndex: number;\r\n  private currentPosition: string;\r\n  private upeerLimit: any;\r\n  public ServiceId: string;\r\n  public projectName: string | null;\r\n  public investorName: string | null;\r\n\r\n  constructor(private _formBuilder: FormBuilder,\r\n              private router: Router,\r\n              private toast: ToastrService,\r\n              private invService: InvestorService,\r\n              private dataSharing: DataSharingService,\r\n              private route: ActivatedRoute) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.currentPosition = 'f';\r\n    this.ServiceId = localStorage.getItem('ServiceId');\r\n\r\n\r\n  }\r\n\r\n  move(index: number) {\r\n    this.stepper.selectedIndex = index;\r\n  }\r\n\r\n\r\n\r\n  ngAfterViewInit(): void {\r\n    this.move(this.steeperIndex);\r\n\r\n  }\r\n\r\n  ngAfterContentChecked() {\r\n    this.title = localStorage.getItem('title');\r\n    this.projectName = localStorage.getItem('projectName');\r\n    this.investorName = localStorage.getItem('investorName');\r\n    this.subscription = this.dataSharing.steeperIndex\r\n      .subscribe(index => {\r\n        this.steeperIndex = index;\r\n        // // console.log(this.steeperIndex);\r\n        this.move(this.steeperIndex);\r\n      });\r\n    this.subscription = this.dataSharing.currentIndex\r\n      .subscribe(index => {\r\n        this.nextIndex = index;\r\n        this.upeerLimit = index;\r\n        // console.log(index);\r\n      });\r\n    // this.nextIndex = +localStorage.getItem('currentIndex');\r\n  }\r\n\r\n  back() {\r\n    if (this.ServiceId === '1234') {\r\n      this.toast.warning('you can not go back because you have not privilege');\r\n    } else {\r\n\r\n      this.currentPosition = 'b';\r\n      if (this.currentPosition === 'f' || this.currentPosition === null) {\r\n        this.steeperIndex--;\r\n      }\r\n      if (this.steeperIndex > 0) {\r\n        this.steeperIndex--;\r\n        this.stepper.selectedIndex = this.steeperIndex;\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  next() {\r\n    if (this.ServiceId === '1234') {\r\n      this.toast.warning('You can not go next because you have not privilege');\r\n    } else {\r\n      this.currentPosition = 'f';\r\n      if (this.currentPosition === 'b' || this.currentPosition === null) {\r\n        this.steeperIndex++;\r\n      }\r\n      if (this.steeperIndex < this.upeerLimit) {\r\n        this.steeperIndex++;\r\n        this.stepper.selectedIndex = this.steeperIndex;\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {ProjectProfileComponent} from './project-profile.component';\r\nimport {ProjectProfileFormComponent} from './project-profile-form/project-profile-form.component';\r\nimport {ProjectStepperComponent} from './project-stepper/project-stepper.component';\r\nimport {ProjectRoutingModule} from './project-routing.module';\r\nimport {SharedModule} from '@custor/modules/shared.module';\r\nimport {ServiceInfoModule} from './service-info/serviceInfo.module';\r\nimport {ServiceConfirmationModule} from './service-confirmation/ServiceConfirmation.module';\r\nimport {ProjectDetailModule} from './project-profile-detail/project-detail.module';\r\nimport {ProjectInputOutputComponent} from './project-input/project-input-output.component';\r\nimport {ProjectCostModule} from './project-cost/ProjectCost.module';\r\nimport {ProductModule} from './project-product/product.module';\r\nimport {EmploymentModule} from './project-employment/employment.module';\r\nimport {ShareModule} from './project-share/Share.module';\r\nimport {AssociateModule} from '../investor/associate/associate.module';\r\nimport {ProjectAssociateComponent} from './project-associate/project-associate.component';\r\nimport {UtilityModule} from './project-input/utility.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ProjectProfileComponent,\r\n    ProjectProfileFormComponent,\r\n\r\n    ProjectInputOutputComponent,\r\n    ProjectStepperComponent,\r\n    ProjectStepperComponent,\r\n    ProjectAssociateComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    ProjectRoutingModule,\r\n    ServiceInfoModule,\r\n    ServiceConfirmationModule,\r\n    ProjectDetailModule,\r\n    ProjectCostModule,\r\n    EmploymentModule,\r\n    ProductModule,\r\n    ShareModule,\r\n    AssociateModule,\r\n    UtilityModule\r\n  ]\r\n})\r\nexport class ProjectModule {\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class FormOfOwnershipModel {\r\n  public Id: number;\r\n  public Desc: string;\r\n}\r\n\r\n@Injectable()\r\nexport class CancellationReasonModel {\r\n  public Id: number;\r\n  public Desc: string;\r\n}\r\n"],"sourceRoot":""}