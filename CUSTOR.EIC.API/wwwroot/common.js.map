{"version":3,"sources":["webpack:///./src/@custor/models/pagination.model.ts","webpack:///./src/@custor/services/pagination.service.ts","webpack:///./src/@custor/validation/custom/custom_validators.ts","webpack:///./src/app/Services/Sector.service.ts","webpack:///./src/app/Services/incentive/bill-of-material.service.ts","webpack:///./src/app/Services/lookup-type.service.ts","webpack:///./src/app/Services/site.service.ts","webpack:///./src/app/components/home/customer-service.service.ts","webpack:///./src/app/components/incentive/incentive-request/requested-items-list/requested-items-list.service.ts","webpack:///./src/app/components/profile-amendment/service/manager.service.ts","webpack:///./src/app/components/setting/lookup-tabs/currency-setting/currency-form/currency-form.component.html","webpack:///./src/app/components/setting/lookup-tabs/currency-setting/currency-form/currency-form.component.scss","webpack:///./src/app/components/setting/lookup-tabs/currency-setting/currency-form/currency-form.component.ts","webpack:///./src/app/components/setting/lookup-tabs/currency-setting/currency-list/currency-list.component.html","webpack:///./src/app/components/setting/lookup-tabs/currency-setting/currency-list/currency-list.component.scss","webpack:///./src/app/components/setting/lookup-tabs/currency-setting/currency-list/currency-list.component.ts","webpack:///./src/app/components/setting/lookup-tabs/currency-setting/currency-setting-routing.module.ts","webpack:///./src/app/components/setting/lookup-tabs/currency-setting/currency-setting.component.html","webpack:///./src/app/components/setting/lookup-tabs/currency-setting/currency-setting.component.scss","webpack:///./src/app/components/setting/lookup-tabs/currency-setting/currency-setting.component.ts","webpack:///./src/app/components/setting/lookup-tabs/currency-setting/currency-setting.module.ts","webpack:///./src/app/components/setting/lookup-tabs/currency-setting/currency-setting.service.ts","webpack:///./src/app/model/QueryParameters.model.ts","webpack:///./src/app/model/Service.model.ts","webpack:///./src/app/model/TodoTask.model.ts"],"names":[],"mappings":"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","file":"common.js","sourcesContent":["export class PaginationModel {\r\n  selectItemsPerPage: number[] = [2, 3, 4, 5, 10, 25, 100];\r\n  pageSize = this.selectItemsPerPage[2];\r\n  pageIndex = 1;\r\n  allItemsLength = 0;\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {PageEvent} from '@angular/material/paginator';\r\n\r\nimport {PaginationModel} from '../models/pagination.model';\r\n\r\n\r\n@Injectable()\r\nexport class PaginationService {\r\n  private paginationModel: PaginationModel;\r\n\r\n  get page(): number {\r\n    return this.paginationModel.pageIndex;\r\n  }\r\n\r\n  Page(index: any) {\r\n    this.paginationModel.pageIndex = index;\r\n  }\r\n\r\n  get selectItemsPerPage(): number[] {\r\n    return this.paginationModel.selectItemsPerPage;\r\n  }\r\n\r\n  get pageCount(): number {\r\n    return this.paginationModel.pageSize;\r\n  }\r\n\r\n  constructor() {\r\n    this.paginationModel = new PaginationModel();\r\n  }\r\n\r\n  change(pageEvent: PageEvent) {\r\n    this.paginationModel.pageIndex = pageEvent.pageIndex + 1;\r\n    this.paginationModel.pageSize = pageEvent.pageSize;\r\n    this.paginationModel.allItemsLength = pageEvent.length;\r\n  }\r\n}\r\n","import {FormControl, FormGroup, ValidationErrors, ValidatorFn, Validators} from '@angular/forms';\r\n\r\n// setup simple regex for white listed characters\r\nconst validCharacters = /[^\\s\\w,.:&\\/()+%'`@-]/;\r\n\r\n// create your class that extends the angular validator class\r\nexport class CustomValidators extends Validators {\r\n  // create a static method for your validation\r\n  static validateCharacters(control: FormControl) {\r\n    // first check if the control has a value\r\n    if (control.value && control.value.length > 0) {\r\n      // match the control value against the regular expression\r\n      const matches = control.value.match(validCharacters);\r\n\r\n      // if there are matches return an object, else return null.\r\n      return matches && matches.length ? {invalid_characters: matches} : null;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  static equityFinance(control: FormControl) {\r\n    // first check if the control has a value\r\n    if (control.value && control.value.length > 0) {\r\n      // match the control value against the regular expression\r\n      const matches = control.value.match(validCharacters);\r\n\r\n      // if there are matches return an object, else return null.\r\n      return matches && matches.length ? {invalid_characters: matches} : null;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n\r\n  static sumOfSourceFinanceValidator: ValidatorFn = (control: FormGroup): ValidationErrors | null => {\r\n    const loanFinance = control.get('LoanFinance');\r\n    const equityFinance = control.get('EquityFinance');\r\n    const otherSourceFinance = control.get('OtherSourceFinance');\r\n    const total = control.get('Total');\r\n    const sourceTotal = loanFinance.value + equityFinance.value + otherSourceFinance.value;\r\n    // console.log(total.value);\r\n    // console.log(sourceTotal.value);\r\n    return total.value !== sourceTotal ? {'sumIsNotEqual': true} : null;\r\n  };\r\n}\r\n","import {catchError, map} from 'rxjs/operators';\r\nimport {Injectable} from '@angular/core';\r\nimport {SectorModel} from '../model/Sector.model';\r\nimport {Observable} from 'rxjs';\r\nimport {AppConfiguration} from '../config/appconfig';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {ErrorMessage} from '../../@custor/services/errMessageService';\r\n\r\n@Injectable()\r\nexport class SectorService {\r\n  constructor(private httpClient: HttpClient,\r\n              private config: AppConfiguration,\r\n              private errMsg: ErrorMessage) {\r\n  }\r\n\r\n  getSector(): Observable<SectorModel[]> {\r\n    return this.httpClient.get<SectorModel>(this.config.urls.url('sectors')).pipe(\r\n      map(result => {\r\n        return result;\r\n      }), catchError(this.errMsg.parseObservableResponseError));\r\n  }\r\n\r\n  getAllSubSector() {\r\n    return this.httpClient.get(this.config.urls.url('subsectors')).pipe(\r\n      map((subSector: Response) => {\r\n        return subSector;\r\n      }),\r\n      catchError(this.errMsg.parseObservableResponseError));\r\n  }\r\n}","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {AppConfiguration} from '../../config/appconfig';\r\nimport {ErrorMessage} from '@custor/services/errMessageService';\r\nimport {BaseService} from '../Base.service';\r\nimport {IncentiveBoMRequestItemModel} from '../../model/incentive/IncentiveBoMRequestItem.model';\r\nimport {Observable} from 'rxjs';\r\nimport {catchError} from 'rxjs/operators';\r\nimport {ServiceApplicationModel} from '../../model/ServiceApplication.model';\r\n\r\n@Injectable(\r\n//   {\r\n//   providedIn: 'root'\r\n// }\r\n)\r\nexport class BillOfMaterialService extends BaseService<IncentiveBoMRequestItemModel> {\r\n\r\n  constructor(\r\n    protected http: HttpClient,\r\n    protected appConfig: AppConfiguration,\r\n    protected  errMsg: ErrorMessage) {\r\n    super(http, appConfig.urls.url('IncentiveBoMImportItems'), errMsg);\r\n  }\r\n\r\n  uploadDocument(resource: FormData): Observable<any[]> {\r\n    return this.httpClient.post(this.appConfig.urls.url('IncentiveBoMImportItem'), resource).pipe(\r\n      catchError(this.errMsg.parseObservableResponseError));\r\n  }\r\n\r\n  finalForApprovalBillOfMaterial(id): Observable<BillOfMaterialService[]> {\r\n    return this.httpClient.get<BillOfMaterialService>(this.appConfig.urls.url('IncentiveBoMImportItemsFinalForApproval', id)).pipe(\r\n      catchError(this.errMsg.parseObservableResponseError));\r\n  }\r\n\r\n  getBillOfMaterialByProjectId(id: number, lang: string): Observable<IncentiveBoMRequestItemModel[]> {\r\n    return this.httpClient.get<IncentiveBoMRequestItemModel>(this.appConfig.urls.url('IncentiveBoMImportItemByProjectId') + '/' + id + '/' + lang).pipe(\r\n      catchError(this.errMsg.parseObservableResponseError));\r\n  }\r\n\r\n  // getBillOfMaterialByProjectId(id: number): Observable<IncentiveBoMRequestItemModel[]> {\r\n  //   return this.httpClient.get<IncentiveBoMRequestItemModel>(this.appConfig.urls.url('IncentiveBoMImportItemByProjectId') + '/' + id).pipe(\r\n  //     catchError(this.errMsg.parseObservableResponseError));\r\n  // }\r\n\r\n  getBillOfMaterialByServiceApplicationId(id: number, lang: string): Observable<IncentiveBoMRequestItemModel[]> {\r\n    return this.httpClient.get<IncentiveBoMRequestItemModel[]>(this.appConfig.urls.url('ServiceApplicationBillOfMaterial') + '/' + id + '/' + lang).pipe(\r\n      catchError(this.errMsg.parseObservableResponseError));\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {ErrorMessage} from '@custor/services/errMessageService';\r\nimport {AppConfiguration} from '../config/appconfig';\r\nimport {BaseService} from './Base.service';\r\nimport {Lookup, LookupType} from '../model/lookupData';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {catchError, map} from 'rxjs/operators';\r\nimport {Observable} from 'rxjs';\r\nimport {LookuptypesModel} from '../model/lookuptypes';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LookupTypeService extends BaseService<LookupType> {\r\n\r\n  constructor(\r\n    protected http: HttpClient,\r\n    protected appConfig: AppConfiguration,\r\n    protected  errMsg: ErrorMessage) {\r\n    super(http, appConfig.urls.url('InvestorTitle'), errMsg);\r\n  }\r\n\r\n  getLookupByParentId(): Observable<LookuptypesModel[]> {\r\n    return this.httpClient.get<LookuptypesModel[]>(this.appConfig.urls.url('incentivecategorylookup')).pipe(\r\n      map(result => {\r\n        return result;\r\n      }),\r\n      catchError(this.errMsg.parseObservableResponseError));\r\n  }\r\n  getAllLookup(): Observable<LookuptypesModel[]> {\r\n    return this.httpClient.get<LookuptypesModel[]>(this.appConfig.urls.url('lookuptype')).pipe(\r\n      map(result => {\r\n        return result;\r\n      }),\r\n      catchError(this.errMsg.parseObservableResponseError));\r\n  }\r\n}\r\n","import {catchError, map} from 'rxjs/operators';\r\nimport {Injectable} from '@angular/core';\r\n\r\nimport {Observable} from 'rxjs';\r\nimport {AppConfiguration} from '../config/appconfig';\r\nimport {HttpClient} from '@angular/common/http';\r\n\r\nimport {SiteModel} from '../model/Site.model';\r\nimport {ErrorMessage} from '../../@custor/services/errMessageService';\r\nimport {BaseService} from './Base.service';\r\n\r\n@Injectable()\r\nexport class SiteService extends BaseService<SiteModel> {\r\n  constructor(\r\n    protected http: HttpClient,\r\n    protected appConfig: AppConfiguration,\r\n    protected  errMsg: ErrorMessage) {\r\n    super(http, appConfig.urls.url('sites'), errMsg);\r\n  }\r\n\r\n\r\n  getAllSite(): Observable<SiteModel[]> {\r\n    return this.httpClient.get<SiteModel[]>(this.appConfig.urls.url('site')).pipe(\r\n      map(result => {\r\n        return result;\r\n      }), catchError(this.errMsg.parseObservableResponseError));\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {catchError, map} from 'rxjs/operators';\r\nimport {ConfigurationService} from '../../../@custor/services/configuration.service';\r\n\r\nimport {ServiceModel} from '../../model/Service.model';\r\nimport {ServicePrerequisite} from '../../model/service-prerequisite';\r\n\r\n@Injectable()\r\nexport class CustomerServicesService {\r\n  constructor(private httpClient: HttpClient, private config: ConfigurationService) {\r\n  }\r\n\r\n  private readonly _servicesUrl: string = 'api/services/en';\r\n  private readonly _serviceUrl: string = 'api/service/';\r\n  private readonly _incentiveServiceUrl: string = 'api/incentiveServices/en';\r\n  private readonly _presUrl: string = 'api/servicePrerequisiteByServiceId';\r\n\r\n  get servicesUrl() {\r\n    return this.config.baseUrl + this._servicesUrl;\r\n  }\r\n\r\n  get incentiveServiceUrl() {\r\n    return this.config.baseUrl + this._incentiveServiceUrl;\r\n  }\r\n\r\n  get presUrl() {\r\n    return this.config.baseUrl + this._presUrl;\r\n  }\r\n\r\n  // Declarations\r\n  serviceList: ServiceModel[] = [];\r\n  service: ServiceModel = new ServiceModel();\r\n  checkList: ServicePrerequisite = new ServicePrerequisite();\r\n  checkLists: ServicePrerequisite[] = [];\r\n\r\n  getServices(): Observable<any> {\r\n    return this.httpClient.get<ServiceModel[]>(this.servicesUrl)\r\n      .pipe(\r\n        map(serviceList => {\r\n          this.serviceList = serviceList;\r\n          // // console.log(serviceListPre);\r\n        }),\r\n        catchError(error => {\r\n          return this.handleError(error);\r\n        })\r\n      );\r\n  }\r\n\r\n  getServices2(): Observable<any> {\r\n    return this.httpClient.get<ServiceModel[]>(this.servicesUrl)\r\n      .pipe(\r\n        map(serviceList => {\r\n          this.serviceList = serviceList;\r\n          return this.serviceList;\r\n          // // console.log(serviceListPre);\r\n        }),\r\n        catchError(error => {\r\n          return this.handleError(error);\r\n        })\r\n      );\r\n  }\r\n\r\n  getIncentiveServices(): Observable<any> {\r\n    return this.httpClient.get<ServiceModel[]>(this.incentiveServiceUrl)\r\n      .pipe(\r\n        map(serviceList => {\r\n          this.serviceList = serviceList;\r\n          return this.serviceList;\r\n          // // console.log(serviceListPre);\r\n        }),\r\n        catchError(error => {\r\n          return this.handleError(error);\r\n        })\r\n      );\r\n  }\r\n\r\n  getService(id): Observable<any> {\r\n    const endpointUrl = `${this._serviceUrl}/${id}`;\r\n    return this.httpClient.get<ServiceModel>(endpointUrl).pipe(\r\n      map(cust => {\r\n        this.service = cust;\r\n        return this.service;\r\n      }),\r\n      catchError(error => {\r\n        return this.handleError(error);\r\n      })\r\n    );\r\n  }\r\n\r\n  getPrerequisites(id): Observable<any> {\r\n    const endpointUrl = `${this.presUrl}/${id}`;\r\n    // // console.log (endpointUrl);\r\n    return this.httpClient.get<ServicePrerequisite[]>(endpointUrl).pipe(\r\n      map(pre => {\r\n        this.checkLists = pre;\r\n        // console.log(this.checkList);\r\n        return this.checkLists;\r\n      }),\r\n      catchError(error => {\r\n        return this.handleError(error);\r\n      })\r\n    );\r\n  }\r\n\r\n  private handleError(error: any) {\r\n    const applicationError = error.headers.get('Application-Error');\r\n    const serverError = error.json();\r\n    let modelStateErrors = '';\r\n\r\n    if (!serverError.type) {\r\n      // console.log(serverError);\r\n      for (const key in serverError) {\r\n        if (serverError[key]) {\r\n          modelStateErrors += serverError[key] + '\\n';\r\n        }\r\n      }\r\n    }\r\n\r\n    modelStateErrors = modelStateErrors = '' ? null : modelStateErrors;\r\n\r\n    // return observableThrowError(applicationError || modelStateErrors || 'Server error');\r\n    return applicationError || modelStateErrors || 'Server error';\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {AppConfiguration} from '../../../../config/appconfig';\r\nimport {ErrorMessage} from '@custor/services/errMessageService';\r\nimport {IncentiveBoMRequestItemModel} from '../../../../model/incentive/IncentiveBoMRequestItem.model';\r\nimport {Observable} from 'rxjs';\r\nimport {catchError, map} from 'rxjs/internal/operators';\r\nimport {IncentiveRequestDetailModel} from '../../../../model/IncentiveRequestDetail.Model';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class IncentiveRequestDetailService {\r\n  incentiveRequestItemList: IncentiveRequestDetailModel[] = [];\r\n  incentiveRequestDetailModel: IncentiveRequestDetailModel;\r\n  incentiveBoMRequestItemList: IncentiveBoMRequestItemModel[] = [];\r\n  incentiveBoMRequestDetailModel: IncentiveBoMRequestItemModel;\r\n\r\n  constructor(private httpClient: HttpClient,\r\n              public appConfig: AppConfiguration,\r\n              private config: AppConfiguration,\r\n              private errMsg: ErrorMessage) {\r\n  }\r\n\r\n  getIncentiveRequestItems(): Observable<IncentiveRequestDetailModel[]> {\r\n    return this.httpClient.get<IncentiveRequestDetailModel[]>(this.config.urls.url('IncentiveRequestDetail')).pipe(\r\n      map(incentiveRequestItemList => this.incentiveRequestItemList = incentiveRequestItemList),\r\n      catchError(this.errMsg.parseObservableResponseError));\r\n  }\r\n\r\n  getIncentiveRequestItemslist(id: any): Observable<IncentiveRequestDetailModel[]> {\r\n    return this.httpClient.get<IncentiveRequestDetailModel>(`${this.appConfig.urls.url('IncentiveRequestDetail')}/${id}`).pipe(\r\n      map((data: any) => data as IncentiveRequestDetailModel),\r\n      catchError(this.errMsg.parseObservableResponseError)\r\n    );\r\n  }\r\n\r\n  getIncentiveRequestDetails(projectId: any): Observable<IncentiveRequestDetailModel[]> {\r\n    return this.httpClient.get<IncentiveRequestDetailModel[]>(this.config.urls.url('IncentiveRequestDetails', projectId)).pipe(\r\n      map(incentiveRequestItemList => this.incentiveRequestItemList = incentiveRequestItemList),\r\n      catchError(this.errMsg.parseObservableResponseError));\r\n  }\r\n\r\n\r\n  getIncentiveRequestDetailsBytCategoryCode(projectId: any, categoryId: any): Observable<IncentiveRequestDetailModel[]> {\r\n    return this.httpClient.get<IncentiveRequestDetailModel[]>(this.config.urls.url('IncentiveRequestDetailsByCategoryId', projectId, categoryId)).pipe(\r\n      map(incentiveRequestItemList => this.incentiveRequestItemList = incentiveRequestItemList),\r\n      catchError(this.errMsg.parseObservableResponseError));\r\n  }\r\n\r\n  getIncentiveRequestDetailsByProjectId(id: any): Observable<IncentiveRequestDetailModel[]> {\r\n    return this.httpClient.get<IncentiveRequestDetailModel[]>(this.config.urls.url('IncentiveRequestDetailsByProjectId', id)).pipe(\r\n      map(incentiveRequestItemList => this.incentiveRequestItemList = incentiveRequestItemList),\r\n      catchError(this.errMsg.parseObservableResponseError));\r\n  }\r\n\r\n  getIncentiveRequestslistByProjectId(projectId: any): Observable<IncentiveRequestDetailModel[]> {\r\n    return this.httpClient.get<IncentiveRequestDetailModel>(this.appConfig.urls.url('IncentiveRequestDetailofSparePart', projectId)).pipe(\r\n      map((data: any) => data as IncentiveRequestDetailModel),\r\n      catchError(this.errMsg.parseObservableResponseError)\r\n    );\r\n  }\r\n\r\n  getIncentiveRequestsDetailByProjectId(projectId: any): Observable<IncentiveRequestDetailModel[]> {\r\n    return this.httpClient.get<IncentiveRequestDetailModel>(this.appConfig.urls.url('incentiveRequestsDetailByProjectId', projectId)).pipe(\r\n      map((data: any) => data as IncentiveRequestDetailModel),\r\n      catchError(this.errMsg.parseObservableResponseError)\r\n    );\r\n  }\r\n\r\n  getIncentiveRequestItem(id): Observable<IncentiveRequestDetailModel> {\r\n    return this.httpClient.get<IncentiveRequestDetailModel>(this.config.urls.url('IncentiveRequestDetail', id)).pipe(\r\n      map(incentiveRequestItemdata => {\r\n        this.incentiveRequestDetailModel = incentiveRequestItemdata;\r\n        return this.incentiveRequestDetailModel;\r\n      }),\r\n      catchError(this.errMsg.parseObservableResponseError));\r\n  }\r\n\r\n  getIncentiveBoMRequestDetails(projectId: any, incentiveCategoryId: any, Phase: any): Observable<IncentiveBoMRequestItemModel[]> {\r\n    // tslint:disable-next-line:max-line-length\r\n    return this.httpClient.get<IncentiveBoMRequestItemModel[]>(this.config.urls.url('IncentiveBoMRequestItems', projectId, incentiveCategoryId,Phase)).pipe(\r\n      map(incentiveBoMRequestItemList => this.incentiveBoMRequestItemList = incentiveBoMRequestItemList),\r\n      catchError(this.errMsg.parseObservableResponseError));\r\n  }\r\n\r\n  getIncentiveBoMRequestDetail(id: number): Observable<IncentiveBoMRequestItemModel> {\r\n    // tslint:disable-next-line:max-line-length\r\n    return this.httpClient.get<IncentiveBoMRequestItemModel>(this.config.urls.url('IncentiveBoMRequestItems', id)).pipe(\r\n      map(incentiveBoMRequestItem => this.incentiveBoMRequestDetailModel = incentiveBoMRequestItem),\r\n      catchError(this.errMsg.parseObservableResponseError));\r\n  }\r\n\r\n  saveIncentiveRequestItem(incentiveRequestItem: IncentiveRequestDetailModel): Observable<IncentiveRequestDetailModel> {\r\n    return this.httpClient.post<IncentiveRequestDetailModel>(this.config.urls.url('IncentiveRequestDetail'), incentiveRequestItem).pipe(\r\n      map(IncentiveRequestItem => {\r\n        this.incentiveRequestDetailModel = IncentiveRequestItem;\r\n        return this.incentiveRequestDetailModel;\r\n      }),\r\n      catchError(this.errMsg.parseObservableResponseError));\r\n  }\r\n\r\n  addIncentiveRequestItem(incentiveRequestItem: IncentiveRequestDetailModel, bOMTableId: number): Observable<IncentiveRequestDetailModel> {\r\n    return this.httpClient.post<IncentiveRequestDetailModel>(this.config.urls.url('IncentiveRequestDetail'), incentiveRequestItem).pipe(\r\n      map(IncentiveRequestItem => {\r\n        this.incentiveRequestDetailModel = IncentiveRequestItem;\r\n        return this.incentiveRequestDetailModel;\r\n      }),\r\n      catchError(this.errMsg.parseObservableResponseError));\r\n  }\r\n\r\n  updateIncentiveRequestItem(incentiveRequestItem: IncentiveRequestDetailModel): Observable<IncentiveRequestDetailModel> {\r\n    return this.httpClient.put<IncentiveRequestDetailModel>(this.config.urls.url('IncentiveRequestDetail'), incentiveRequestItem).pipe(\r\n      map(IncentiveRequestItem => {\r\n        this.incentiveRequestDetailModel = IncentiveRequestItem;\r\n        return this.incentiveRequestDetailModel;\r\n      }),\r\n      catchError(this.errMsg.parseObservableResponseError));\r\n  }\r\n\r\n  deleteIncentiveRequestItem(id): Observable<any> {\r\n    return this.httpClient.delete<boolean>(this.config.urls.url('IncentiveRequestDetail', id)).pipe(\r\n      map(result => {\r\n        return result;\r\n      }),\r\n      catchError(this.errMsg.parsePromiseResponseError),);\r\n  }\r\n\r\n}\r\n","import { Injectable, Injector } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ConfigurationService } from '../../../../@custor/services/configuration.service';\r\nimport { EndpointFactory } from '@custor/services/security/endpoint-factory.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ManagerService extends EndpointFactory  {\r\n    private readonly _managersAuditListUrl = \"api/FAssociate/ManagerListAudit\";\r\n    private readonly _managersListUrl = \"api/FAssociate/ManagersList\";\r\n    private readonly _newManagersListUrl = \"api/FAssociate/NewManagersList\";\r\n    private readonly _newManagerUrl= \"api/FAssociate/NewManagerById\";\r\n    private readonly _managerAuditUrl = \"api/FAssociate/ManagerAuditByInvestorId\"\r\n    private readonly _managerUrl = \"api/FAssociate/ManagerByInvestorId\";\r\n    private readonly _managerByAssociateIdUrl = \"api/FAssociate/ManagerByAssociateId\";\r\n    private readonly _managerAuditByAssociateIdUrl = \"api/FAssociate/ManagerAuditByAssociateId\";\r\n    private readonly _saveManagerDataUrl= \"api/FAssociate/SaveManager\";\r\n    private readonly _updateManagerDataUrl= \"api/FAssociate/UpdateManager\";\r\n    constructor(\r\n        protected httpClient: HttpClient,\r\n        private config: ConfigurationService,\r\n        injector: Injector) {\r\n        super(httpClient, config, injector);\r\n    }\r\n    get managersAuditListUrl() {\r\n        return this.config.baseUrl + this._managersAuditListUrl;\r\n    }\r\n    get managersListUrl() {\r\n        return this.config.baseUrl + this._managersListUrl;\r\n    }\r\n    get newManagersListUrl(){\r\n        return this.config.baseUrl + this._newManagersListUrl;\r\n    }\r\n    get newManagerUrl(){\r\n        return this.config.baseUrl + this._newManagerUrl;\r\n\r\n    }\r\n    get managerAuditUrl() {\r\n        return this.config.baseUrl + this._managerAuditUrl;\r\n    }\r\n    get managerByAssociateIdUrl(){\r\n        \r\n        return this.config.baseUrl + this._managerByAssociateIdUrl;\r\n    }\r\n    get managerAuditByAssociateIdUrl(){\r\n        \r\n        return this.config.baseUrl + this._managerAuditByAssociateIdUrl;\r\n    }\r\n    get managerUrl() {\r\n        return this.config.baseUrl + this._managerUrl;\r\n    }\r\n    get saveManagerDataUrl(){\r\n        return this.config.baseUrl + this._saveManagerDataUrl;\r\n    }\r\n    get updateManagerDataUrl(){\r\n        return this.config.baseUrl + this._updateManagerDataUrl;\r\n    }\r\n    getNewManagerById(id:number){\r\n        var endPointUrl = `${this.newManagerUrl}/${id}`;\r\n        return this.httpClient.get(endPointUrl);\r\n    }\r\n    getAssociateAuditListByInvestorId(investorId: number) {\r\n        var endPointUrl = `${this.managersAuditListUrl}/${investorId}`;\r\n        return this.httpClient.get(endPointUrl);\r\n    }\r\n    getAssociateListByInvestorId(investorId: number) {\r\n        var endPointUrl = `${this.managersListUrl}/${investorId}`;\r\n        return this.httpClient.get(endPointUrl);\r\n    }\r\n    getNewAssociateListByInvestorId(investorId:number, serviceApplicationId){\r\n        var endPointUrl = `${this.newManagersListUrl}/${investorId}/${serviceApplicationId}`;\r\n        return this.httpClient.get(endPointUrl);\r\n    }\r\n    getManagerAuditByInvestorId(investorId: number) {\r\n        var endPointUrl = `${this.managerAuditUrl}/${investorId}`;\r\n        return this.httpClient.get(endPointUrl);\r\n    }\r\n    getManagerByInvestorId(investorId: number) {\r\n        var endPointUrl = `${this.managerUrl}/${investorId}`;\r\n        return this.httpClient.get(endPointUrl);\r\n    }\r\n    getManagerAuditByAssociateId(investorId: number) {\r\n        var endPointUrl = `${this.managerAuditByAssociateIdUrl}/${investorId}`;\r\n        return this.httpClient.get(endPointUrl);\r\n    }\r\n    getManagerByAssociateId(investorId: number) {\r\n        var endPointUrl = `${this.managerByAssociateIdUrl}/${investorId}`;\r\n        return this.httpClient.get(endPointUrl);\r\n    }\r\n    saveManagerData(data:any){\r\n        const endpointUrl = `${this.saveManagerDataUrl}`;\r\n        return this.httpClient.post(endpointUrl, data);\r\n    }\r\n    updateManagerData(data:any){\r\n        const endpointUrl = `${this.updateManagerDataUrl}`;\r\n        return this.httpClient.put(endpointUrl, data);  \r\n    }\r\n}","module.exports = \"<p>\\r\\n  currency-form works!\\r\\n</p>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvY29tcG9uZW50cy9zZXR0aW5nL2xvb2t1cC10YWJzL2N1cnJlbmN5LXNldHRpbmcvY3VycmVuY3ktZm9ybS9jdXJyZW5jeS1mb3JtLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-currency-form',\r\n  templateUrl: './currency-form.component.html',\r\n  styleUrls: ['./currency-form.component.scss']\r\n})\r\nexport class CurrencyFormComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"<!--<div class=\\\"mat-elevation-z8\\\" style=\\\"margin: 15px;\\\">-->\\r\\n\\r\\n  <!--<mat-progress-bar *ngIf=\\\"loadingIndicator\\\" mode=\\\"query\\\"></mat-progress-bar>-->\\r\\n  <!--<mat-table [dataSource]=\\\"dataSource\\\" matSort>-->\\r\\n    <!--<ng-container matColumnDef=\\\"Key\\\">-->\\r\\n      <!--<mat-header-cell *matHeaderCellDef mat-sort-header fxFlex=\\\"100px\\\">Currency  Type</mat-header-cell>-->\\r\\n      <!--<mat-cell *matCellDef=\\\"let row\\\" fxFlex=\\\"100px\\\"> {{row.Key}}</mat-cell>-->\\r\\n    <!--</ng-container>-->\\r\\n    <!--<ng-container matColumnDef=\\\"Value\\\">-->\\r\\n      <!--<mat-header-cell *matHeaderCellDef mat-sort-header fxFlex=\\\"100px\\\">Value  </mat-header-cell>-->\\r\\n      <!--<mat-cell *matCellDef=\\\"let row\\\" fxFlex=\\\"100px\\\"> {{row.Value}}</mat-cell>-->\\r\\n    <!--</ng-container>-->\\r\\n\\r\\n\\r\\n\\r\\n    <!--<ng-container matColumnDef=\\\"actions\\\">-->\\r\\n      <!--<mat-header-cell *matHeaderCellDef fxFlex=\\\"100px\\\">-->\\r\\n        <!--<button mat-button color=\\\"primary\\\" (click)=\\\"edit()\\\">-->\\r\\n          <!--<mat-icon class=\\\"mat-button-icon\\\">add</mat-icon>-->\\r\\n          <!--{{'common.commands.Add' | translate}}-->\\r\\n        <!--</button>-->\\r\\n      <!--</mat-header-cell>-->\\r\\n\\r\\n    <!--</ng-container>-->\\r\\n    <!--<mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>-->\\r\\n    <!--<mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\">-->\\r\\n    <!--</mat-row>-->\\r\\n  <!--</mat-table>-->\\r\\n\\r\\n  <!--<mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>-->\\r\\n<!--</div>-->\\r\\n\\r\\n\\r\\n<p>djnfd</p>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvY29tcG9uZW50cy9zZXR0aW5nL2xvb2t1cC10YWJzL2N1cnJlbmN5LXNldHRpbmcvY3VycmVuY3ktbGlzdC9jdXJyZW5jeS1saXN0LmNvbXBvbmVudC5zY3NzIn0= */\"","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {MatDialog, MatDialogRef, MatPaginator, MatSort, MatTableDataSource} from \"@angular/material\";\r\nimport {AngConfirmDialogComponent} from \"@custor/components/confirm-dialog/confirm-dialog.component\";\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {ErrorMessage} from \"@custor/services/errMessageService\";\r\nimport {ToastrService} from \"ngx-toastr\";\r\nimport {ActivatedRoute, Router} from \"@angular/router\";\r\nimport {ApplicationSettingModel} from \"../../../../../model/ApplicationSetting.Model\";\r\nimport {CurrencySettingService} from \"../currency-setting.service\";\r\n\r\n@Component({\r\n  selector: 'app-currency-list',\r\n  templateUrl: './currency-list.component.html',\r\n  styleUrls: ['./currency-list.component.scss']\r\n})\r\nexport class CurrencyListComponent implements OnInit {\r\n\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  displayedColumns = ['Key', 'Value', 'actions'];\r\n\r\n  public dataSource: MatTableDataSource<ApplicationSettingModel>;\r\n  public loadingIndicator: boolean;\r\n  dialogRef: any;\r\n  confirmDialogRef: MatDialogRef<AngConfirmDialogComponent>;\r\n\r\n\r\n  constructor(private http: HttpClient,\r\n              private settingService: CurrencySettingService,\r\n              private errMsg: ErrorMessage,\r\n              private toastr: ToastrService,\r\n              public dialog: MatDialog,\r\n              private router: Router,\r\n              private route: ActivatedRoute) {\r\n    this.dataSource = new MatTableDataSource();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getExchangeRate();\r\n  }\r\n\r\n  private getCurrency() {\r\n\r\n  }\r\n\r\n  getExchangeRate() {\r\n    this.settingService.getAll().subscribe(result => {\r\n\r\n      this.dataSource.data = result;\r\n    });\r\n  }\r\n\r\n  edit() {\r\n\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from \"@angular/router\";\r\nimport {CurrencyFormComponent} from \"./currency-form/currency-form.component\";\r\n\r\nconst route: Routes = [\r\n\r\n  {path: 'list', component: CurrencyFormComponent},\r\n  {path: 'edit/:id', component: CurrencyFormComponent}\r\n];\r\n\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(route)],\r\n  exports: [RouterModule]\r\n})\r\nexport class CurrencySettingRoutingModule {\r\n}\r\n","module.exports = \"<router-outlet></router-outlet>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvY29tcG9uZW50cy9zZXR0aW5nL2xvb2t1cC10YWJzL2N1cnJlbmN5LXNldHRpbmcvY3VycmVuY3ktc2V0dGluZy5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-currency-setting',\r\n  templateUrl: './currency-setting.component.html',\r\n  styleUrls: ['./currency-setting.component.scss']\r\n})\r\nexport class CurrencySettingComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {CurrencyFormComponent} from './currency-form/currency-form.component';\r\nimport {CurrencyListComponent} from './currency-list/currency-list.component';\r\nimport {CurrencySettingComponent} from \"./currency-setting.component\";\r\nimport {SharedModule} from \"@custor/modules/shared.module\";\r\nimport {CurrencySettingRoutingModule} from \"./currency-setting-routing.module\";\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    CurrencySettingRoutingModule\r\n  ],\r\n  declarations: [\r\n    CurrencyListComponent,\r\n    CurrencyFormComponent,\r\n    CurrencySettingComponent\r\n  ],\r\n  exports: [\r\n    CurrencyListComponent,\r\n    CurrencyFormComponent,\r\n    CurrencySettingComponent]\r\n})\r\nexport class CurrencySettingModule {\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Observable} from \"rxjs\";\r\nimport {catchError} from \"rxjs/operators\";\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {ErrorMessage} from \"@custor/services/errMessageService\";\r\nimport {AppConfiguration} from \"../../../../config/appconfig\";\r\nimport {ApplicationSettingModel} from \"../../../../model/ApplicationSetting.Model\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CurrencySettingService {\r\n\r\n  constructor(private httpClient: HttpClient,\r\n              private errMsg: ErrorMessage,\r\n              private appConfig: AppConfiguration) {\r\n  }\r\n\r\n  getOneById(id: number): Observable<ApplicationSettingModel> {\r\n    return this.httpClient.get<ApplicationSettingModel>(this.appConfig.urls.url('ApplicationSettings') + '/' + id).pipe(\r\n      catchError(this.errMsg.parseObservableResponseError)\r\n    );\r\n  }\r\n  getAll(): Observable<ApplicationSettingModel[]> {\r\n    return this.httpClient.get<ApplicationSettingModel[]>(this.appConfig.urls.url('ApplicationSettings')).pipe(\r\n      catchError(this.errMsg.parseObservableResponseError)\r\n    );\r\n  }\r\n}\r\n","export class QueryParametersModel {\r\n  constructor() {\r\n  }\r\n  public Lang: string;\r\n  public PageIndex: number;\r\n  public PageSize: number;\r\n}\r\n","import { ServiceTariffModel } from './servicetariff';\r\n\r\nexport class ServiceModel {\r\n  public ServiceId: number;\r\n  public Name: string;\r\n  public NameEnglish: string;\r\n  public DisplayName: string;\r\n  public DisplayNameEnglish: string;\r\n  public Abbreviation?: string;\r\n  public Icon?: string;\r\n  public Duration?: number;\r\n  public DurationUnitId?: number;\r\n  public IsActive: boolean;\r\n  public IsDeleted?: boolean;\r\n  public EventDatetime?: Date;\r\n  public CreatedUserId?: number;\r\n  public CreatedUserName?: string;\r\n  public UpdatedEventDatetime?: Date;\r\n  public UpdatedUserId?: number;\r\n  public UpdatedUserName?: string;\r\n  public TypeOfService?: any;\r\n  public ServiceTariff?: ServiceTariffModel[];\r\n  // public ObjectId: Guid;\r\n  // public DurationUnit: Lookup;\r\n  // public ServiceApplication: ICollection<ServiceApplication>;\r\n  // public ServiceSite: ICollection<ServiceSite>;\r\n  // public ServiceStep: ICollection<ServiceStep>;\r\n  // public ServiceTariff: ICollection<ServiceTariff>;\r\n  // public ServiceWorkflow: ICollection<ServiceWorkflow>;\r\n}\r\n","import {ServiceApplicationModel} from './ServiceApplication.model';\r\n\r\nexport class TodoTaskModel {\r\n  constructor() {\r\n\r\n  }\r\n\r\n  public TodoTaskId: number;\r\n  public ServiceApplicationId: string;\r\n  public AssignedDate: any;\r\n  public EndDate: Date;\r\n  public CurrentStatusId: number;\r\n  public AssignedUserId: string;\r\n  public Remark: string;\r\n  public IsActive: boolean;\r\n  public IsDeleted: boolean;\r\n  public EventDatetime: Date;\r\n  public CreatedUserId: any;\r\n  public CreatedUserName: string;\r\n  public UpdatedEventDatetime: Date;\r\n  public UpdatedUserId: number;\r\n  public UpdatedUserName: string;\r\n  public ServiceApplication: ServiceApplicationModel[];\r\n}\r\n"],"sourceRoot":""}