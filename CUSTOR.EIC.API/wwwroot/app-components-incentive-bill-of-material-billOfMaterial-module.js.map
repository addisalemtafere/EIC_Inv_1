{"version":3,"sources":["webpack:///./src/app/components/incentive/bill-of-material/BillOfMaterialRouting.module.ts","webpack:///./src/app/components/incentive/bill-of-material/bill-of-material-tab/bill-of-material-tab.component.html","webpack:///./src/app/components/incentive/bill-of-material/bill-of-material-tab/bill-of-material-tab.component.scss","webpack:///./src/app/components/incentive/bill-of-material/bill-of-material-tab/bill-of-material-tab.component.ts","webpack:///./src/app/components/incentive/bill-of-material/bill-of-material.component.html","webpack:///./src/app/components/incentive/bill-of-material/bill-of-material.component.scss","webpack:///./src/app/components/incentive/bill-of-material/bill-of-material.component.ts","webpack:///./src/app/components/incentive/bill-of-material/billOfMaterial.module.ts"],"names":[],"mappings":"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","file":"app-components-incentive-bill-of-material-billOfMaterial-module.js","sourcesContent":["import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {BillOfMaterialComponent} from './bill-of-material.component';\r\nimport {BillOfMaterialTabComponent} from './bill-of-material-tab/bill-of-material-tab.component';\r\n\r\nconst routes: Routes = [\r\n  {path: '', component: BillOfMaterialTabComponent},\r\n  {path: 'bill-of-material-tab', component: BillOfMaterialTabComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class BillOfMaterialRoutingModule {\r\n\r\n}\r\n","module.exports = \"<mat-tab-group class=\\\"margin-2\\\">\\r\\n  <mat-tab label=\\\"Bill Of Material\\\">\\r\\n    <ng-template matTabContent=\\\"\\\">\\r\\n      <mat-card *ngIf=\\\"!isInvestor\\\" class=\\\"margin-2 simple-card\\\">\\r\\n        <mat-card-header>\\r\\n          <mat-card-subtitle class=\\\"sub-title\\\"></mat-card-subtitle>\\r\\n          <button class=\\\"margin-10 certificate-title\\\" mat-raised-button=\\\"\\\"\\r\\n                  (click)=\\\"addMessage()\\\" color=\\\"primary\\\">\\r\\n            Add Message\\r\\n          </button>\\r\\n        </mat-card-header>\\r\\n      </mat-card>\\r\\n      <app-bill-of-material></app-bill-of-material>\\r\\n    </ng-template>\\r\\n    <div>\\r\\n    </div>\\r\\n  </mat-tab>\\r\\n  <!--<mat-tab *ngIf=\\\"!isInvestor\\\" label=\\\"Letter\\\">-->\\r\\n  <!--<ng-template matTabContent>-->\\r\\n    <!--<app-letter></app-letter>-->\\r\\n  <!--</ng-template>-->\\r\\n<!--</mat-tab>-->\\r\\n  <mat-tab label=\\\"Confirmation\\\">\\r\\n    <ng-template matTabContent>\\r\\n      <app-service-confirmation></app-service-confirmation>\\r\\n    </ng-template>\\r\\n  </mat-tab>\\r\\n\\r\\n</mat-tab-group>\\r\\n\"","module.exports = \"\"","import {Component, OnInit} from '@angular/core';\r\nimport {NotificationComponent} from '../../../project-profile/notification/notification.component';\r\nimport {MatDialog, MatDialogConfig} from '@angular/material';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {ServiceapplicationService} from '../../../setting/services-tabs/serviceApplication/serviceapplication.service';\r\nimport {AccountService} from '@custor/services/security/account.service';\r\nimport {ActivatedRoute} from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-bill-of-material-tab',\r\n  templateUrl: './bill-of-material-tab.component.html',\r\n  styleUrls: ['./bill-of-material-tab.component.scss']\r\n})\r\nexport class BillOfMaterialTabComponent implements OnInit {\r\n\r\n  public isInvestor: boolean;\r\n  private title: string;\r\n  private projectName: string;\r\n  private investorName: string;\r\n  private ServiceApplicationId: any;\r\n  private userName: string;\r\n\r\n  constructor(private serviceApplicationsServices: ServiceapplicationService,\r\n              public accountService: AccountService,\r\n              private route: ActivatedRoute,\r\n              private dialog: MatDialog,\r\n              private toastr: ToastrService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getUserType();\r\n\r\n    this.title = localStorage.getItem('title');\r\n    this.projectName = localStorage.getItem('projectName');\r\n    this.investorName = localStorage.getItem('investorName');\r\n    this.ServiceApplicationId = this.route.snapshot.params['ServiceApplicationId'];\r\n\r\n    this.userName = this.accountService.currentUser.FullName;\r\n  }\r\n\r\n  getUserType() {\r\n    this.isInvestor = this.accountService.getUserType();\r\n  }\r\n\r\n  addMessage() {\r\n    const dialogConfig = new MatDialogConfig();\r\n\r\n    dialogConfig.data = {\r\n      ServiceApplicationId: this.ServiceApplicationId\r\n    };\r\n    // this.dialog.open(NotificationComponent);\r\n    this.dialog.open(NotificationComponent, dialogConfig);\r\n\r\n\r\n  }\r\n}\r\n\r\n\r\n","module.exports = \"<!--<app-page-header icon=\\\"dashboard\\\" title=\\\"dashboard\\\"></app-page-header>-->\\r\\n\\r\\n<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" fxLayoutGap=\\\"2em\\\">\\r\\n  <div *ngIf=\\\"errors.length>0\\\" class=\\\"alert-info\\\" fxLayout=\\\" row wrap\\\" fxLayoutAlign=\\\"center\\\">\\r\\n    <ol type=\\\"i\\\">\\r\\n      <li class=\\\"mat-error\\\" *ngFor=\\\"let error of errors;\\\">{{error}}</li>\\r\\n    </ol>\\r\\n  </div>\\r\\n\\r\\n\\r\\n</div>\\r\\n<mat-card class=\\\"margin-2\\\" style=\\\"background-color: #fafafa;\\\">\\r\\n  <mat-card-content>\\r\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" fxLayoutGap=\\\"2em\\\">\\r\\n      <form *ngIf=\\\"itemList.length<=0\\\" formGroup=\\\"documentForm\\\">\\r\\n\\r\\n        <div class=\\\"block\\\" style=\\\"margin: 20px;padding: 15px;float:left\\\">\\r\\n          <mat-form-field>\\r\\n            <mat-label>{{'billofmaterrial.Phase' | translate}}</mat-label>\\r\\n            <mat-select formControlName=\\\"Phase\\\" style=\\\"font-family: Calibri\\\" type=\\\"text\\\"\\r\\n                        (selectionChange)=\\\"getPhaseId($event.value)\\\"\\r\\n                        [compareWith]=\\\"compareIds\\\" required>\\r\\n              <option value=\\\"0\\\">--Select--</option>\\r\\n              <mat-option *ngFor=\\\"let Phase of PhaseLookups\\\" [value]=\\\"Phase.LookupId\\\">\\r\\n                <span>{{Phase.English}}</span>\\r\\n              </mat-option>\\r\\n            </mat-select>\\r\\n          </mat-form-field>\\r\\n          <a class=\\\"pointer\\\"\\r\\n             (click)=\\\"file.click()\\\">\\r\\n            <span class=\\\"custom-button\\\" style=\\\"padding: 10px\\\">Attach Item List</span>\\r\\n          </a>\\r\\n          <input #file hidden type=\\\"file\\\" multiple (change)=\\\"upload(i,file.files)\\\"/>\\r\\n        </div>\\r\\n        <!--</div>-->\\r\\n      </form>\\r\\n      <div class=\\\"block\\\" fxFlex=\\\"\\\">\\r\\n        <button *ngIf=\\\"itemList.length>0\\\"\\r\\n                style=\\\"margin: 10px\\\" (click)=\\\"UpdateServiceApplication()\\\"\\r\\n                mat-raised-button=\\\"\\\" class=\\\"mr-16\\\"\\r\\n                color=\\\"primary\\\">\\r\\n          <mat-icon color=\\\"primary\\\">done</mat-icon>\\r\\n          <span>Submit Application</span>\\r\\n        </button>\\r\\n      </div>\\r\\n      <div class=\\\"block\\\" fxFlex=\\\"\\\">\\r\\n\\r\\n        <a\\r\\n          *ngIf=\\\"itemList.length<=0\\\"\\r\\n          style=\\\"margin-left: 10px\\\"\\r\\n          mat-raised-button=\\\"\\\" class=\\\"mr-16\\\"\\r\\n          color=\\\"primary\\\">\\r\\n          <mat-icon class=\\\"mat-18\\\">file_download</mat-icon>\\r\\n          <span>Click Here To Download Sample  </span>\\r\\n        </a>\\r\\n      </div>\\r\\n\\r\\n\\r\\n    </div>\\r\\n  </mat-card-content>\\r\\n\\r\\n</mat-card>\\r\\n<mat-card class=\\\"margin-2\\\" style=\\\"box-shadow: none;padding: 15px !important;border: 1px solid #dddddd\\\"\\r\\n          *ngIf=\\\"addshow || editMode\\\">\\r\\n\\r\\n  <form [formGroup]=\\\"billOfMaterialForm\\\" novalidate>\\r\\n    <mat-card-content>\\r\\n\\r\\n      <div fxLayout.xs=\\\"row wrap\\\"\\r\\n           fxLayoutAlign.xs=\\\"start center\\\"\\r\\n           fxLayoutGap=\\\"2em\\\">\\r\\n        <div class=\\\"block\\\" fxLayoutGap=\\\"2em\\\">\\r\\n          <mat-form-field [fxFlex]=\\\"20\\\">\\r\\n            <mat-label>{{'billofmaterrial.Description' | translate}}</mat-label>\\r\\n            <input type=\\\"text\\\" matInput\\r\\n                   formControlName=\\\"Description\\\">\\r\\n          </mat-form-field>\\r\\n          <mat-form-field [fxFlex]=\\\"20\\\">\\r\\n            <mat-label>{{'billofmaterrial.HsCode' | translate}}</mat-label>\\r\\n            <input type=\\\"text\\\" matInput\\r\\n                   formControlName=\\\"HsCode\\\">\\r\\n\\r\\n          </mat-form-field>\\r\\n          <mat-form-field [fxFlex]=\\\"20\\\">\\r\\n            <mat-label>{{'billofmaterrial.Quantity' | translate}}</mat-label>\\r\\n            <input type=\\\"text\\\" matInput\\r\\n                   formControlName=\\\"Quantity\\\">\\r\\n          </mat-form-field>\\r\\n          <mat-form-field [fxFlex]=\\\"20\\\">\\r\\n            <mat-label>{{'billofmaterrial.MesurmentUnit' | translate}}</mat-label>\\r\\n            <mat-select formControlName=\\\"MesurmentUnit\\\" required>\\r\\n              <option value=\\\"0\\\">--Select--</option>\\r\\n              <mat-option *ngFor=\\\"let unit of unitTypes\\\" [value]=\\\"unit.DescriptionEnglish\\\">\\r\\n                <span>{{unit.DescriptionEnglish}}</span>\\r\\n              </mat-option>\\r\\n            </mat-select>\\r\\n          </mat-form-field>\\r\\n          <span *ngIf=\\\"!isInvestor\\\">\\r\\n          <mat-form-field [fxFlex]=\\\"20\\\">\\r\\n            <mat-label>{{'billofmaterrial.RejectionReason' | translate}}</mat-label>\\r\\n            <mat-select formControlName=\\\"RejectionReason\\\" required>\\r\\n              <option value=\\\"0\\\">--Select--</option>\\r\\n              <mat-option *ngFor=\\\"let RejectionReason of Lookups\\\"\\r\\n                          [value]=\\\"RejectionReason.LookupId\\\">\\r\\n                <span>{{RejectionReason.English}}</span>\\r\\n              </mat-option>\\r\\n            </mat-select>\\r\\n          </mat-form-field>\\r\\n          </span>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"block\\\" fxFlex=\\\"15%\\\">\\r\\n          <button [disabled]=\\\"!billOfMaterialForm.valid\\\" class=\\\"custom-button\\\" (click)=\\\"onSubmit()\\\">\\r\\n            <mat-icon color=\\\"accent\\\" class=\\\"mat-18\\\">done</mat-icon>\\r\\n            {{editMode ? 'Update' : 'Add'}}\\r\\n          </button>\\r\\n          <!--<a style=\\\"margin-left: 2px;\\\" mat-raised-button class=\\\"pointer\\\" (click)=\\\"onClear()\\\" matTooltip=\\\"Clear Form\\\">-->\\r\\n          <!--<mat-icon color=\\\"accent\\\" class=\\\"mat-18\\\">clear_all</mat-icon>-->\\r\\n          <!--Clear-->\\r\\n          <!--</a>-->\\r\\n        </div>\\r\\n      </div>\\r\\n    </mat-card-content>\\r\\n  </form>\\r\\n</mat-card>\\r\\n<mat-card class=\\\"margin-2\\\">\\r\\n\\r\\n  <mat-card-content>\\r\\n\\r\\n\\r\\n    <div fxFlex=\\\"100%\\\" *ngIf=\\\"itemList.length>0\\\">\\r\\n\\r\\n      <div class=\\\"spinner-container\\\" *ngIf=\\\"loading\\\">\\r\\n        <mat-progress-bar mode=\\\"query\\\"></mat-progress-bar>\\r\\n      </div>\\r\\n      <mat-table #table [dataSource]=\\\"dataSource\\\">\\r\\n        <ng-container matColumnDef=\\\"No\\\">\\r\\n          <mat-header-cell [fxFlex]=\\\"6\\\" *matHeaderCellDef>No</mat-header-cell>\\r\\n          <mat-cell [fxFlex]=\\\"6\\\" *matCellDef=\\\"let itemList;let i=index;\\\">\\r\\n            {{i+1}}\\r\\n          </mat-cell>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"Description\\\">\\r\\n          <mat-header-cell fxFlex=\\\"30\\\" *matHeaderCellDef>Description</mat-header-cell>\\r\\n          <mat-cell fxFlex=\\\"30\\\" *matCellDef=\\\"let itemList\\\">\\r\\n            {{itemList?.Description}}\\r\\n          </mat-cell>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"HsCode\\\">\\r\\n          <mat-header-cell *matHeaderCellDef>HsCode</mat-header-cell>\\r\\n          <mat-cell *matCellDef=\\\"let itemList\\\">\\r\\n            {{itemList?.HsCode }}\\r\\n          </mat-cell>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"Quantity\\\">\\r\\n          <mat-header-cell *matHeaderCellDef>Quantity</mat-header-cell>\\r\\n          <mat-cell *matCellDef=\\\"let itemList\\\"> {{itemList?.Quantity }}\\r\\n          </mat-cell>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"MesurmentUnit\\\">\\r\\n          <mat-header-cell *matHeaderCellDef>Measurment Unit</mat-header-cell>\\r\\n          <mat-cell *matCellDef=\\\"let itemList\\\"> {{itemList?.MesurmentUnit |\\r\\n            filterPipe: 10}}\\r\\n          </mat-cell>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"RejectionReason\\\">\\r\\n          <mat-header-cell *matHeaderCellDef>Rejection Reason</mat-header-cell>\\r\\n          <mat-cell *matCellDef=\\\"let itemList\\\"> {{itemList?.RejectionReason | lookupReasonPipe : 1}}\\r\\n          </mat-cell>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"approval\\\">\\r\\n          <mat-header-cell *matHeaderCellDef>\\r\\n            <span *ngIf=\\\"isInvestor\\\"> Is Approved</span>\\r\\n            <span *ngIf=\\\"!isInvestor\\\">\\r\\n              <mat-checkbox></mat-checkbox>\\r\\n            Approve All</span>\\r\\n          </mat-header-cell>\\r\\n          <mat-cell *matCellDef=\\\"let itemList\\\">\\r\\n            <!--<mat-checkbox checked=\\\"false\\\">approve</mat-checkbox>-->\\r\\n            <mat-checkbox [disabled]=\\\"isInvestor\\\" [value]=\\\"itemList?.IncentiveBoMRequestItemId\\\"\\r\\n                          [checked]=\\\"itemList.IsApproved\\\"\\r\\n                          (change)=\\\"onMangerControlChanged($event,itemList)\\\">\\r\\n            </mat-checkbox>\\r\\n          </mat-cell>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"Action\\\">\\r\\n          <mat-header-cell fxFlex=\\\"15\\\" *matHeaderCellDef>Action\\r\\n            <button (click)=\\\"addItem()\\\" style=\\\"margin-left: 12px;\\\" color=\\\"primary\\\" mat-raised-button=\\\"\\\"\\r\\n                    type=\\\"button\\\">add\\r\\n\\r\\n            </button>\\r\\n          </mat-header-cell>\\r\\n\\r\\n          <mat-cell fxFlex=\\\"15\\\" *matCellDef=\\\"let itemList;let i=index;\\\">\\r\\n            <div>\\r\\n              <a class=\\\"pointer\\\" mat-min-fab matTooltip=\\\"Click here to edit the product\\\"\\r\\n                 (click)=\\\"onEdit(i)\\\">\\r\\n                <mat-icon color=\\\"primary\\\" class=\\\"mat-18\\\">edit</mat-icon>\\r\\n                Edit\\r\\n              </a>\\r\\n              <a class=\\\"pointer\\\" mat--mini-fab color=\\\"warn\\\" matTooltip=\\\"Click here to delete the product\\\"\\r\\n                 (click)=\\\"delete(i,itemList.IncentiveBoMRequestItemId)\\\">\\r\\n                <mat-icon color=\\\"warn\\\">delete</mat-icon>\\r\\n                Delete\\r\\n              </a>\\r\\n            </div>\\r\\n          </mat-cell>\\r\\n        </ng-container>\\r\\n        <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\">\\r\\n        </mat-header-row>\\r\\n        <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\">\\r\\n        </mat-row>\\r\\n      </mat-table>\\r\\n\\r\\n      <mat-paginator\\r\\n\\r\\n        #paginator\\r\\n        [pageSize]=\\\"8\\\"\\r\\n        [pageSizeOptions]=\\\"[8, 10, 20]\\\">\\r\\n      </mat-paginator>\\r\\n    </div>\\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n\"","module.exports = \"mat-header-row {\\n  min-height: 42px; }\\n\\na {\\n  cursor: pointer !important; }\\n\\nmat-card {\\n  transition: box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);\\n  display: block;\\n  position: relative;\\n  padding: 0px !important;\\n  border-radius: 2px; }\\n\"","import {AfterViewInit, Component, ElementRef, EventEmitter, Input, OnInit, Output, ViewChild} from '@angular/core';\r\nimport {DataSharingService} from '../../../Services/data-sharing.service';\r\nimport {MatDialog, MatPaginator, MatTableDataSource} from '@angular/material';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {FormBuilder, FormControl, FormGroup} from '@angular/forms';\r\nimport {FormService} from '@custor/validation/custom/form';\r\nimport {ServiceModel} from '../../../model/Service.model';\r\nimport {AccountService} from '@custor/services/security/account.service';\r\nimport {ServiceService} from '../../../Services/service.service';\r\nimport {ErrorMessage} from '@custor/services/errMessageService';\r\nimport {ServiceapplicationService} from '../../setting/services-tabs/serviceApplication/serviceapplication.service';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {BillOfMaterialService} from '../../../Services/incentive/bill-of-material.service';\r\nimport {IncentiveBoMRequestItemModel} from '../../../model/incentive/IncentiveBoMRequestItem.model';\r\nimport {UnitType} from '../../../model/lookupData';\r\nimport {UnitTypes} from '@custor/const/consts';\r\nimport {ConfigurationService} from '@custor/services/configuration.service';\r\nimport {LookupsModel} from '../../../model/lookups';\r\nimport {Subscription} from 'rxjs';\r\nimport {LookUpService} from '../../../Services/look-up.service';\r\nimport {determineId} from '@custor/helpers/compare';\r\nimport {IncentiveRequestDetailService} from '../incentive-request/requested-items-list/requested-items-list.service';\r\n\r\n@Component({\r\n  selector: 'app-bill-of-material',\r\n  templateUrl: './bill-of-material.component.html',\r\n  styleUrls: ['./bill-of-material.component.scss']\r\n})\r\nexport class BillOfMaterialComponent implements OnInit, AfterViewInit {\r\n\r\n  dataSource: any;\r\n  loading: boolean;\r\n  searchForm: FormGroup;\r\n  documentForm: FormGroup;\r\n  serviceList: ServiceModel[] = [];\r\n  Lookups: LookupsModel[];\r\n  displayedColumns = [\r\n    'No', 'Description', 'HsCode', 'Quantity', 'MesurmentUnit', 'RejectionReason', 'approval', 'Action'\r\n  ];\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  errors: Array<string> = [];\r\n\r\n  @Input() projectId: number;\r\n  @Input() sectionId: number;\r\n  // @Input() fileExt = 'JPG, GIF, PNG,Pdf';\r\n  @Input() fileExt = 'xlsx,xls';\r\n  @Input() maxFiles = 5;\r\n  @Input() maxSize = 2; // 5MB\r\n  @Output() uploadStatus = new EventEmitter();\r\n\r\n  @ViewChild('fileInput') fileInput: ElementRef;\r\n  @ViewChild('content') content: ElementRef;\r\n  isOfficer = false;\r\n  formErrors: {};\r\n  public assigned: boolean;\r\n  public itemList: IncentiveBoMRequestItemModel[] = [];\r\n  billOfMaterialForm: FormGroup;\r\n\r\n  editMode = false;\r\n\r\n  addshow = false;\r\n  productEditIndex: number;\r\n  lookupSub: Subscription;\r\n\r\n  productEdit: IncentiveBoMRequestItemModel;\r\n  public stepperIndex: number;\r\n  public isInvestor = false;\r\n  public unitTypes: UnitType[] = [];\r\n  PhaseLookups: LookupsModel[];\r\n  public phaseId: number;\r\n  BOMItems: IncentiveBoMRequestItemModel[] = [];\r\n  private currentCategoryId: any;\r\n  private ServiceApplicationId: any;\r\n  private ProjectId: any;\r\n  private currentLang: string;\r\n  private IncentiveCategoryId: number;\r\n  private bool;\r\n\r\n  constructor(private billOfMaterilService: BillOfMaterialService,\r\n              private errMsg: ErrorMessage,\r\n              private serviceApplicationsServices: ServiceapplicationService,\r\n              private router: Router,\r\n              public dialog: MatDialog,\r\n              private serviceApplication: ServiceapplicationService,\r\n              private dataSharing: DataSharingService,\r\n              private route: ActivatedRoute,\r\n              private accountService: AccountService,\r\n              private service: ServiceService,\r\n              private lookUpsService: LookUpService,\r\n              private toast: ToastrService,\r\n              private configService: ConfigurationService,\r\n              private IncentiveRequestItemService: IncentiveRequestDetailService,\r\n              private toastr: ToastrService,\r\n              private formBuilder: FormBuilder,\r\n              private formService: FormService) {\r\n  }\r\n\r\n  get Phase() {\r\n    return this.documentForm.get('Phase');\r\n  }\r\n\r\n  getPhaseId(value: number) {\r\n    this.phaseId = value;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.currentLang = this.configService.language;\r\n    this.getUserType();\r\n    this.initForm();\r\n    this.addForm();\r\n    this.getItemLookup();\r\n    this.getLookup();\r\n    this.currentCategoryId = this.route.snapshot.params['type'];\r\n    if (this.currentCategoryId == 1) {\r\n      this.IncentiveCategoryId = 10778;\r\n    }\r\n    if (this.currentCategoryId == 2) {\r\n      this.IncentiveCategoryId = 10779;\r\n    }\r\n    this.ServiceApplicationId = this.route.snapshot.params['ServiceApplicationId'];\r\n    this.ProjectId = this.route.snapshot.params['ProjectId'];\r\n    this.getBillOfMaterial(this.ServiceApplicationId);\r\n    // this.getBillOfMaterial(this.ProjectId);\r\n    this.initStaticData(this.currentLang);\r\n\r\n  }\r\n\r\n  getUserType() {\r\n    this.isInvestor = this.accountService.getUserType();\r\n  }\r\n\r\n  getItemLookup() {\r\n    this.lookupSub = this.lookUpsService\r\n      .getLookupByParentId(10780)\r\n      .subscribe(result => {\r\n          this.Lookups = result;\r\n        },\r\n        error => this.toastr.error(this.errMsg.getError(error)));\r\n  }\r\n\r\n  onMangerControlChanged($event, data?: IncentiveBoMRequestItemModel) {\r\n    // console.log(data);\r\n    const id = $event.source.value;\r\n\r\n    this.billOfMaterilService.finalForApprovalBillOfMaterial(data.IncentiveBoMRequestItemId)\r\n      .subscribe(result => {\r\n        // console.log(result);\r\n      });\r\n    if ($event.checked) {\r\n      this.toast.success('Item approved  successfully');\r\n\r\n    } else if (!$event.checked) {\r\n      this.toast.success('Item approved cancelled successfully');\r\n    }\r\n\r\n  }\r\n\r\n  onSubmit() {\r\n    this.formService.markFormGroupTouched(this.billOfMaterialForm);\r\n    if (this.billOfMaterialForm.valid) {\r\n      if (!this.editMode) {\r\n        this.billOfMaterialForm.removeControl('IncentiveBoMRequestItemId');\r\n        this.billOfMaterilService.create(this.billOfMaterialForm.value)\r\n          .subscribe((result: IncentiveBoMRequestItemModel) => {\r\n            this.notification('saved');\r\n            this.getBillOfMaterial(this.ServiceApplicationId);\r\n            this.itemList.push(result);\r\n            // this.dataSource = new MatTableDataSource<IncentiveBoMRequestItemModel>(this.itemList);\r\n            // this.getBillOfMaterial();\r\n          }, error => this.toast.error(this.errMsg.getError(error)));\r\n        this.billOfMaterialForm.addControl('IncentiveBoMRequestItemId', new FormControl(''));\r\n        this.onClear();\r\n      } else {\r\n        // console.log(this.billOfMaterialForm.value);\r\n        this.billOfMaterilService.update(this.billOfMaterialForm.value, this.itemList[this.productEditIndex].IncentiveBoMRequestItemId)\r\n          .subscribe(result => {\r\n            this.notification('updated');\r\n            this.itemList[this.productEditIndex] = result;\r\n            this.dataSource = new MatTableDataSource<IncentiveBoMRequestItemModel>(this.itemList);\r\n            this.onClear();\r\n          }, error => this.toast.error(this.errMsg.getError(error)));\r\n      }\r\n    } else {\r\n      this.formErrors = this.formService.validateForm(this.billOfMaterialForm, this.formErrors, false);\r\n    }\r\n  }\r\n\r\n  applyFilter(filterValue: string) {\r\n    filterValue = filterValue.trim(); // Remove whitespace\r\n    filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches\r\n    this.dataSource.filter = filterValue.replace(/[\\W_]/g, '');\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  onClear() {\r\n    this.billOfMaterialForm.reset();\r\n\r\n  }\r\n\r\n  onEdit(index: number) {\r\n    this.editMode = true;\r\n    // console.log(index);\r\n\r\n    this.productEditIndex = index;\r\n    this.productEdit = this.itemList[index];\r\n    this.billOfMaterialForm.patchValue(this.productEdit);\r\n\r\n  }\r\n\r\n  addItem() {\r\n    this.addshow = true;\r\n  }\r\n\r\n  delete(index: number, id: number) {\r\n    this.billOfMaterilService.delete(id)\r\n      .subscribe(() => {\r\n        this.notification('Deleted');\r\n        this.itemList.splice(index, 1);\r\n        this.dataSource = new MatTableDataSource<IncentiveBoMRequestItemModel>(this.itemList);\r\n      });\r\n  }\r\n\r\n  getBillOfMaterial(ServiceApplicationId: any) {\r\n    this.loading = true;\r\n    this.billOfMaterilService.getBillOfMaterialByServiceApplicationId(ServiceApplicationId)\r\n      .subscribe(result => {\r\n        this.itemList = result.IncentiveBoMRequestItem;\r\n        // console.log(result);\r\n        this.dataSource = new MatTableDataSource<IncentiveBoMRequestItemModel>(result.IncentiveBoMRequestItem);\r\n        this.loading = false;\r\n        this.dataSource.paginator = this.paginator;\r\n      }, error => this.errMsg.getError(error));\r\n  }\r\n\r\n  upload(i: number, files: FileList) {\r\n    // console.log(this.phaseId);\r\n    if (this.phaseId == 0 || this.phaseId == null || this.phaseId == undefined) {\r\n      this.toastr.error('Please Select Batch of Construction Materials Incentive');\r\n      return true;\r\n    }\r\n    else if (this.CheckExistance()) {\r\n      return true;\r\n    }\r\n    else {\r\n      // this.loading = true;\r\n      this.errors = []; // Clear error\r\n      // Validate file size and allowed extensions\r\n      // console.log((!this.isValidFiles(files)));\r\n      if (files && files[0].size > 0 && (this.isValidFiles(files))) {\r\n        const formModel = this.documentForm.value;\r\n        this.documentForm.patchValue({\r\n          Name: files[0].name,\r\n          KeyWords: files[0],\r\n        });\r\n\r\n        this.billOfMaterilService\r\n          .uploadDocument(this.prepareSaveUser())\r\n          .subscribe(result => {\r\n            this.itemList = result;\r\n            this.dataSource = new MatTableDataSource<IncentiveBoMRequestItemModel>(result);\r\n            this.loading = false;\r\n            // this.dataSource.paginator = this.paginator;\r\n\r\n            this.itemList = result;\r\n            this.loading = false;\r\n          }, error => this.toast.error(this.errMsg.getError(error)));\r\n        // this.getServicePrerequisite(localStorage.getItem('ServiceId'));\r\n      } else {\r\n        this.toast.error('Error Occurred Please ', 'Error');\r\n      }//TODO BillofQuantity\r\n    }\r\n  }\r\n\r\n  CheckExistance() {\r\n    this.IncentiveRequestItemService\r\n      .getIncentiveBoMRequestDetails(this.ProjectId, 10778, this.phaseId)\r\n      .subscribe((items) => {\r\n        this.BOMItems = items;\r\n        if (this.BOMItems.length > 0) {\r\n          this.toastr.error('You Cannot Import Construction Materials, Because there is Uploaded data in this Batch');\r\n          return true;\r\n        }\r\n      });\r\n\r\n  }\r\n\r\n  prepareSaveUser(): FormData {\r\n    const formModel = this.documentForm.value;\r\n    const formData = new FormData();\r\n    // console.log(formModel.workFlowId);\r\n    // // console.log(this.documentForm.value);\r\n    formData.append('Name', formModel.Name);\r\n    formData.append('ServiceApplicationId', this.ServiceApplicationId);\r\n    formData.append('KeyWords', formModel.KeyWords);\r\n    formData.append('ProjectId', this.ProjectId);\r\n    formData.append('IncentiveCategoryId', this.IncentiveCategoryId.toString());\r\n    formData.append('PhaseId', this.phaseId.toString());//formModel.Phase\r\n    // console.log(this.phaseId);\r\n    return formData;\r\n  }\r\n\r\n  // uploadData(ServiceApplicationId: any) {\r\n  //   this.loading = true;\r\n  //   this.billOfMaterilService.getBillOfMaterialByServiceApplicationId(ServiceApplicationId).subscribe(result => {\r\n  //     this.itemList = result;\r\n  //     this.dataSource = new MatTableDataSource<IncentiveBoMRequestItemModel>(result);\r\n  //     this.loading = false;\r\n  //\r\n  //\r\n  //   });\r\n  // }\r\n\r\n  // }\r\n  ngAfterViewInit() {\r\n    // this.dataSource.paginator = this.paginator;\r\n  }\r\n\r\n  clear() {\r\n    this.billOfMaterialForm.reset();\r\n  }\r\n\r\n  UpdateServiceApplication() {\r\n    this.serviceApplicationsServices.finalForApprovalServiceApplications(\r\n      this.ServiceApplicationId)\r\n      .subscribe(result => {\r\n        this.toast.success('Application submitted successfully we will revise soon as well as  we will notify for any action required');\r\n      });\r\n  }\r\n\r\n  notification(message: string) {\r\n    this.loading = false;\r\n    this.toast.success(` Succesfully ${message} Data.!`, 'Success');\r\n\r\n  }\r\n\r\n\r\n  // ngAfterContentChecked(): void {\r\n  //\r\n  //\r\n\r\n\r\n  initStaticData(currentLang) {\r\n\r\n    let unit: UnitType = new UnitType();\r\n    UnitTypes.forEach(pair => {\r\n      unit = {\r\n        'Id': pair.Id.toString(),\r\n        'DescriptionEnglish': pair.DescriptionEnglish,\r\n        'Description': pair.Description\r\n      };\r\n      this.unitTypes.push(unit);\r\n    });\r\n  }\r\n\r\n  getLookup() {\r\n    this.lookupSub = this.lookUpsService\r\n      .getLookupByParentId(10781)\r\n      .subscribe(result => {\r\n          this.PhaseLookups = result;\r\n        },\r\n        error => this.toastr.error(this.errMsg.getError(error)));\r\n  }\r\n\r\n  compareIds(id1: any, id2: any): boolean {\r\n    const a1 = determineId(id1);\r\n    const a2 = determineId(id2);\r\n    return a1 === a2;\r\n  }\r\n\r\n  private initForm() {\r\n    this.documentForm = this.formBuilder.group({\r\n      Name: new FormControl(),\r\n      KeyWords: new FormControl(null),\r\n      //Phase: new FormControl()\r\n    });\r\n  }\r\n\r\n  private isValidFiles(files) {\r\n    // Check Number of files\r\n    if (files.length > this.maxFiles) {\r\n      this.errors.push('Error: At a time you can upload only ' + this.maxFiles + ' files');\r\n      // this.toast.error('Error: At a time you can upload only ' + this.maxFiles + ' files', 'Error');\r\n      return;\r\n    }\r\n    this.isValidFileExtension(files);\r\n    return this.errors.length === 0;\r\n  }\r\n\r\n  private isValidFileExtension(files) {\r\n    // Make array of file extensions\r\n    const extensions = (this.fileExt.split(','))\r\n      .map(function (x) {\r\n        return x.toLocaleUpperCase().trim();\r\n      });\r\n\r\n    for (let i = 0; i < files.length; i++) {\r\n      // Get file extension\r\n      const ext = files[i].name.toUpperCase().split('.').pop() || files[i].name;\r\n      // Check the extension exists\r\n      const exists = extensions.includes(ext);\r\n      if (!exists) {\r\n        this.errors.push('Error ,Pdf Extension Only allowed to attach : ' + files[i].name);\r\n        // this.toast.error('Error ,Pdf Extension Only allowed to attach :' + files[i].name, 'Error');\r\n\r\n      }\r\n      // Check file size\r\n      this.isValidFileSize(files[i]);\r\n    }\r\n  }\r\n\r\n  private isValidFileSize(file) {\r\n    const fileSizeinMB = file.size / (1024 * 100);\r\n    const size = Math.round(fileSizeinMB * 100) / 100; // convert upto 2 decimal place\r\n    if (size > this.maxSize) {\r\n      this.errors.push('Error (File Size): ' +\r\n        file.name + ': exceed file size limit of ' +\r\n        this.maxSize + 'MB ( ' + size + 'MB )');\r\n      // this.toast.error('Error (File Size): ' + file.name + ': exceed file size limit of ' + this.maxSize + 'MB ( ' + size + 'MB )');\r\n    }\r\n  }\r\n\r\n  private addForm() {\r\n    this.billOfMaterialForm = this.formBuilder.group({\r\n      IncentiveBoMRequestItemId: new FormControl(),\r\n      IncentiveRequestId: 1,\r\n      ProjectId: this.ProjectId,\r\n      ServiceApplicationId: this.ServiceApplicationId,\r\n      Description: new FormControl(),\r\n      RejectionReason: new FormControl(),\r\n      HsCode: new FormControl(),\r\n      Quantity: new FormControl(),\r\n      MesurmentUnit: new FormControl(),\r\n      IsApproved: new FormControl(),\r\n    });\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {SharedModule} from '@custor/modules/shared.module';\r\nimport {BillOfMaterialRoutingModule} from './BillOfMaterialRouting.module';\r\nimport {BillOfMaterialComponent} from './bill-of-material.component';\r\nimport {BillOfMaterialTabComponent} from './bill-of-material-tab/bill-of-material-tab.component';\r\nimport {ServiceConfirmationModule} from '../../project-profile/service-confirmation/ServiceConfirmation.module';\r\nimport {LetterModule} from '../../project-profile/letter/letter.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    BillOfMaterialRoutingModule,\r\n    ServiceConfirmationModule,\r\n    LetterModule\r\n  ],\r\n  declarations: [\r\n    BillOfMaterialComponent,\r\n    BillOfMaterialTabComponent\r\n  ],\r\n  exports: [\r\n    BillOfMaterialComponent,\r\n    BillOfMaterialTabComponent]\r\n})\r\nexport class BillOfMaterialModule {\r\n\r\n}\r\n"],"sourceRoot":""}