{"version":3,"sources":["webpack:///./src/app/Services/Registration/BudgetYearType.service.ts","webpack:///./src/app/Services/Registration/Registration.service.ts","webpack:///./src/app/components/registration/Registration-tab/registration-tab-routing.module.ts","webpack:///./src/app/components/registration/Registration-tab/registration-tab.component.html","webpack:///./src/app/components/registration/Registration-tab/registration-tab.component.scss","webpack:///./src/app/components/registration/Registration-tab/registration-tab.component.ts","webpack:///./src/app/components/registration/Registration-tab/registration-tab.module.ts","webpack:///./src/app/components/registration/registration-address/registration-address.component.html","webpack:///./src/app/components/registration/registration-address/registration-address.component.scss","webpack:///./src/app/components/registration/registration-address/registration-address.component.ts","webpack:///./src/app/components/registration/registration-routing.module.ts","webpack:///./src/app/components/registration/registration.component.html","webpack:///./src/app/components/registration/registration.component.scss","webpack:///./src/app/components/registration/registration.component.ts","webpack:///./src/app/components/registration/registration.module.ts"],"names":[],"mappings":"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","file":"app-components-registration-Registration-tab-registration-tab-module.js","sourcesContent":["import {Injectable} from '@angular/core';\r\nimport {ErrorMessage} from '@custor/services/errMessageService';\r\nimport {AppConfiguration} from '../../config/appconfig';\r\nimport {BaseService} from '../Base.service';\r\nimport {BudgetYearType} from '../../model/Registration/BudgetYearType';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {catchError, map} from 'rxjs/operators';\r\nimport {Observable} from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BudgetYearTypeService extends BaseService<BudgetYearType> {\r\n\r\n  constructor(\r\n    protected http: HttpClient,\r\n    protected appConfig: AppConfiguration,\r\n    protected  errMsg: ErrorMessage) {\r\n    super(http, appConfig.urls.url('RegistrationTitle'), errMsg);\r\n  }\r\n\r\n\r\n  getAllBugetYearTypes(): Observable<BudgetYearType[]> {\r\n    return this.httpClient.get<BudgetYearType[]>(this.appConfig.urls.url('GetAllBudgetYearTypes')).pipe(\r\n      map(result => {\r\n        return result;\r\n      }),\r\n      catchError(this.errMsg.parseObservableResponseError));\r\n  }\r\n}\r\n","import {Injectable, Injector} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {catchError, map} from 'rxjs/operators';\r\nimport {AppConfiguration} from '../../config/appconfig';\r\nimport {BaseService} from '../Base.service';\r\nimport {ErrorMessage} from '@custor/services/errMessageService';\r\nimport {IncentiveRequestModel} from '../../model/IncentiveRequest.model';\r\nimport {RegistrationModel} from '../../model/Registration/RegistrationModel';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RegistrationService {\r\n  constructor(private httpClient: HttpClient,\r\n              public appConfig: AppConfiguration,\r\n              private config: AppConfiguration, private errMsg: ErrorMessage) {\r\n  }\r\n\r\n  registrationMoedl: RegistrationModel;\r\n /* getRegistrationByTin(Tin: any): Observable<Registration> {\r\n    return this.httpClient.get<Registration>(this.appConfig.urls.url('GetRegistrationByTin') + '/' + Tin).pipe(\r\n      map((data: any) => data as Registration),\r\n      catchError(this.errMsg.parseObservableResponseError)\r\n    );\r\n  }*/\r\n\r\n  getRegistrationByTin(Tin): Observable<RegistrationModel> {\r\n    return this.httpClient.get<RegistrationModel>(this.config.urls.url('GetRegistrationByTin', Tin)).pipe(\r\n      map(registrationInfo => {\r\n        this.registrationMoedl = registrationInfo;\r\n        return this.registrationMoedl;\r\n      }),\r\n      catchError(this.errMsg.parseObservableResponseError));\r\n  }\r\n\r\n\r\n  saveRegistration(registrationInfo: RegistrationModel): Observable<RegistrationModel> {\r\n    return this.httpClient.post<RegistrationModel>(this.config.urls.url('SaveRegistration'), registrationInfo).pipe(\r\n      map(Reg => {\r\n        // console.log(this.registrationMoedl);\r\n        this.registrationMoedl = registrationInfo;\r\n        return this.registrationMoedl;\r\n      }),\r\n      catchError(this.errMsg.parseObservableResponseError));\r\n  }\r\n\r\n\r\n  UpdateRegistration(registrationInfo: RegistrationModel): Observable<RegistrationModel> {\r\n    return this.httpClient.post<RegistrationModel>(this.config.urls.url('UpdateRegistration'), registrationInfo).pipe(\r\n      map(Reg => {\r\n        // console.log(this.registrationMoedl);\r\n        this.registrationMoedl = registrationInfo;\r\n        return this.registrationMoedl;\r\n      }),\r\n      catchError(this.errMsg.parseObservableResponseError));\r\n  }\r\n\r\n  /*saveRegistrationNew(registration: Registration): Observable<any[]> {\r\n      return this.httpClient.post(this.appConfig.urls.url('SaveRegistration'), registration).pipe(\r\n        catchError(this.errMsg.parseObservableResponseError));\r\n    }*/\r\n\r\n}\r\n","import {RouterModule, Routes} from \"@angular/router\";\r\nimport {NgModule} from \"@angular/core\";\r\nimport {RegistratioinTabComponent} from './registration-tab.component';\r\n\r\n\r\nconst route: Routes = [{\r\n  path: '', component: RegistratioinTabComponent\r\n}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(route)],\r\n  exports: [RouterModule]\r\n})\r\nexport class RegistrationTabRoutingModule {\r\n}\r\n","module.exports = \"<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" fxLayoutGap=\\\"0\\\">\\r\\n  <div class=\\\"block\\\" fxFlex=\\\"\\\">\\r\\n    <app-page-header title=\\\"CommercialRegistration\\\" icon=\\\"\\\"></app-page-header>\\r\\n\\r\\n  </div>\\r\\n  <div id=\\\"title1\\\" class=\\\"block\\\" fxFlex=\\\"50\\\">\\r\\n    <span class=\\\"page-title\\\">{{title}}</span>\\r\\n    <span class=\\\"slideBorder\\\">/</span>\\r\\n    <span class=\\\"page-title\\\">{{investorName}}</span>\\r\\n    <span class=\\\"slideBorder\\\">/</span>\\r\\n    <span class=\\\"page-title\\\">{{projectName}}</span>\\r\\n\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n<mat-tab-group>\\r\\n\\r\\n  <mat-tab label=\\\"Service Info\\\">\\r\\n    <ng-template matTabContent>\\r\\n      <app-service-info></app-service-info>\\r\\n    </ng-template>\\r\\n  </mat-tab>\\r\\n\\r\\n  <mat-tab label=\\\"Registration Information\\\">\\r\\n    <ng-template matTabContent>\\r\\n    <!--<app-registration></app-registration>-->\\r\\n    </ng-template>\\r\\n  </mat-tab>\\r\\n  <mat-tab label=\\\"Address\\\">\\r\\n    <ng-template matTabContent>\\r\\n     <app-registration-address></app-registration-address>\\r\\n    </ng-template>\\r\\n  </mat-tab>\\r\\n  <mat-tab label=\\\"Manger\\\">\\r\\n    <ng-template matTabContent>\\r\\n      <app-associate-form></app-associate-form>\\r\\n    </ng-template>\\r\\n  </mat-tab>\\r\\n  <mat-tab label=\\\"Document\\\">\\r\\n    <ng-template matTabContent>\\r\\n      <mat-card *ngIf=\\\"!isInvestor\\\" class=\\\"margin-2 simple-card\\\">\\r\\n        <mat-card-header>\\r\\n          <mat-card-subtitle class=\\\"sub-title\\\"></mat-card-subtitle>\\r\\n          <button class=\\\"margin-10 certificate-title\\\" mat-raised-button=\\\"\\\"\\r\\n                  (click)=\\\"addMessage()\\\" color=\\\"primary\\\">\\r\\n            Add Message\\r\\n          </button>\\r\\n        </mat-card-header>\\r\\n      </mat-card>\\r\\n      <app-service-prerequisite></app-service-prerequisite>\\r\\n    </ng-template>\\r\\n  </mat-tab>\\r\\n\\r\\n  <mat-tab *ngIf=\\\"!isInvestor\\\" label=\\\"Payment\\\">\\r\\n    <ng-template matTabContent>\\r\\n      <app-payment></app-payment>\\r\\n    </ng-template>\\r\\n  </mat-tab>\\r\\n  <mat-tab *ngIf=\\\"!isInvestor\\\" label=\\\"Certificate\\\">\\r\\n    <ng-template matTabContent>\\r\\n      <!--<app-registration-certificate></app-registration-certificate>-->\\r\\n    </ng-template>\\r\\n  </mat-tab>\\r\\n  <mat-tab *ngIf=\\\"isInvestor\\\" label=\\\"Confirmation\\\">\\r\\n    <ng-template matTabContent>\\r\\n      <app-service-confirmation></app-service-confirmation>\\r\\n    </ng-template>\\r\\n  </mat-tab>\\r\\n\\r\\n</mat-tab-group>\\r\\n\\r\\n\"","module.exports = \"\"","import {Component, OnInit} from '@angular/core';\r\nimport {AccountService} from \"@custor/services/security/account.service\";\r\nimport {Router} from \"@angular/router\";\r\nimport {MatDialog} from \"@angular/material\";\r\nimport {DataSharingService} from \"../../../Services/data-sharing.service\";\r\nimport {NotificationComponent} from \"../../project-profile/notification/notification.component\";\r\nimport {Investor} from '../../../model/investor';\r\nimport {InvestorService} from '../../investor/investor.service';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {ErrorMessage} from '@custor/services/errMessageService';\r\n\r\n@Component({\r\n  selector: 'app-registration-tab',\r\n  templateUrl: './registration-tab.component.html',\r\n  styleUrls: ['./registration-tab.component.scss']\r\n})\r\nexport class RegistratioinTabComponent implements OnInit {\r\n\r\n  public tin: string;\r\n  public legalStatus: string;\r\n  public selectedIndex = 0;\r\n  public title: string;\r\n  public projectName: string;\r\n  public investorName: string;\r\n  public isInvestor: boolean;\r\n  public userName: string;\r\n  investor: Investor;\r\n  constructor(private accountService: AccountService,\r\n              public router: Router,\r\n              public dialog: MatDialog,\r\n              private toastr: ToastrService,\r\n              public errMsg: ErrorMessage,\r\n              private investorService: InvestorService,\r\n              public dataSharing: DataSharingService) {  }\r\n\r\n\r\n  ngOnInit() {\r\n    this.getInvsetorInformation();\r\n    this.getUserType();\r\n    this.title = localStorage.getItem('title');\r\n    this.projectName = localStorage.getItem('projectName');\r\n    this.investorName = localStorage.getItem('investorName');\r\n    this.userName = this.accountService.currentUser.FullName;\r\n    this.tin = localStorage.getItem('tin');\r\n    //this.legalStatus = localStorage.getItem('LegalStatus');\r\n  }\r\n\r\n  getInvsetorInformation() {\r\n    this.investorService.getInvestor(localStorage.getItem('InvestorId'))\r\n      .subscribe(result => {\r\n          this.investor = result;\r\n          // console.log(this.investor.Tin);\r\n          if(this.investor.Tin.trim() == \"\")\r\n          {\r\n            this.toastr.warning('Please  complete investor profile before request any service!!', 'Info');\r\n            this.router.navigate(['investor-tab/0/', 0]);\r\n          }\r\n          else {\r\n\r\n            localStorage.setItem('Tin', this.investor.Tin.toString());\r\n            localStorage.setItem('LegalStatus', this.investor.LegalStatus.toString());\r\n           /* localStorage.setItem('TradeName', this.investor.TradeName.toString());\r\n            localStorage.setItem('TradeNameEnglish', this.investor.TradeNameEnglish.toString());*/\r\n          }\r\n        },\r\n        error => this.toastr.error(error));\r\n\r\n  }\r\n\r\n\r\n  getUserType() {\r\n    this.isInvestor = this.accountService.getUserType();\r\n  }\r\n\r\n  addMessage() {\r\n    this.dialog.open(NotificationComponent);\r\n\r\n  }\r\n}\r\n\r\n","import {NgModule} from \"@angular/core\";\r\nimport {CommonModule} from \"@angular/common\";\r\nimport {SharedModule} from \"@custor/modules/shared.module\";\r\nimport {InvestorTabRoutingModule} from \"../../investor/investor-tab/investor-tab-routing.module\";\r\nimport {InvestorModule} from \"../../investor/investor.module\";\r\nimport {AssociateModule} from \"../../investor/associate/associate.module\";\r\nimport {OfficerModule} from \"../../officer-Task/officer.module\";\r\nimport {ServiceConfirmationModule} from \"../../project-profile/service-confirmation/ServiceConfirmation.module\";\r\nimport {ServiceInfoModule} from \"../../project-profile/service-info/serviceInfo.module\";\r\nimport {InvestorTabComponent} from \"../../investor/investor-tab/investor-tab.component\";\r\nimport {CompanyClearanceFormComponent} from \"../../investor/company-clearance-form/company-clearance-form.component\";\r\nimport {RegistratioinTabComponent} from \"./registration-tab.component\";\r\nimport {RegistrationTabRoutingModule} from './registration-tab-routing.module';\r\nimport {BusinessTabComponent} from '../../business/business-tab/business-tab.component';\r\nimport {RegistrationModule} from '../registration.module';\r\nimport {RegistrationAddressComponent} from '../registration-address/registration-address.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    RegistrationTabRoutingModule,\r\n    InvestorModule,\r\n    AssociateModule,\r\n    OfficerModule,\r\n    ServiceConfirmationModule,\r\n    ServiceInfoModule,\r\n    RegistrationModule\r\n  ],\r\n  declarations: [\r\n    RegistratioinTabComponent,\r\n    RegistrationAddressComponent\r\n  ],\r\n  exports: [RegistratioinTabComponent]\r\n})\r\nexport class RegistrationTabModule {\r\n}\r\n","module.exports = \"<app-page-header title=\\\"address\\\" icon=\\\"address\\\"></app-page-header>\\r\\n\\r\\n<form class=\\\"margin-2\\\" (ngSubmit)=\\\"onSubmit()\\\" [formGroup]=\\\"registrationAddressForm\\\" novalidate>\\r\\n\\r\\n  <mat-card class=\\\"border\\\">\\r\\n    <mat-card-content>\\r\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" class=\\\"content\\\" fxLayout.lt-sm=\\\"column\\\" fxLayoutGap=\\\"2em\\\">\\r\\n          <mat-form-field  fxFlex  fxFlex=\\\"15\\\">\\r\\n            <mat-label>{{'registrationAddress.editor.Region' | translate}}</mat-label>\\r\\n            <mat-select formControlName=\\\"RegionId\\\"\\r\\n                        (selectionChange)=\\\"filterRegion($event.value)\\\">\\r\\n              <mat-option value=\\\"0\\\">-</mat-option>\\r\\n              <mat-option *ngFor=\\\"let region of regions\\\" [value]=\\\"region.RegionId\\\">\\r\\n                {{region.Description}}\\r\\n              </mat-option>\\r\\n            </mat-select>\\r\\n            <mat-error align=\\\"start\\\" *ngIf=\\\"formErrors.Region\\\">{{ formErrors.Region }}</mat-error>\\r\\n          </mat-form-field>\\r\\n          <mat-form-field  fxFlex  fxFlex=\\\"15\\\">\\r\\n            <mat-label>{{'registrationAddress.editor.Town' | translate}}</mat-label>\\r\\n            <mat-select formControlName=\\\"TownId\\\">\\r\\n              <mat-option value=\\\"0\\\">-</mat-option>\\r\\n              <mat-option *ngFor=\\\"let town of filteredTowns\\\" [value]=\\\"town.TownId\\\">\\r\\n                {{town.Description}}\\r\\n              </mat-option>\\r\\n            </mat-select>\\r\\n            <mat-error align=\\\"start\\\" *ngIf=\\\"formErrors.Town\\\">{{ formErrors.Town }}</mat-error>\\r\\n          </mat-form-field>\\r\\n         <mat-form-field  fxFlex  fxFlex=\\\"15\\\">\\r\\n            <mat-label>{{'registrationAddress.editor.Zone' | translate}}</mat-label>\\r\\n            <mat-select formControlName=\\\"ZoneId\\\" (selectionChange)=\\\"filterZone($event.value)\\\">\\r\\n              <mat-option value=\\\"0\\\">-</mat-option>\\r\\n              <mat-option *ngFor=\\\"let zone of filteredZones\\\" [value]=\\\"zone.ZoneId\\\">\\r\\n                {{zone.Description}}\\r\\n              </mat-option>\\r\\n            </mat-select>\\r\\n            <mat-error align=\\\"start\\\" *ngIf=\\\"formErrors.Zone\\\">{{ formErrors.Zone }}</mat-error>\\r\\n          </mat-form-field>\\r\\n\\r\\n          <mat-form-field  fxFlex  fxFlex=\\\"15\\\">\\r\\n            <mat-label>{{'registrationAddress.editor.Woreda' | translate}}</mat-label>\\r\\n            <mat-select formControlName=\\\"WoredaId\\\" (selectionChange)=\\\"getKebeleByWoredaId($event.value)\\\">\\r\\n              <mat-option value=\\\"0\\\">-</mat-option>\\r\\n              <mat-option *ngFor=\\\"let w of filteredWoredas\\\" [value]=\\\"w.WoredaId\\\">\\r\\n                {{w.Description}}\\r\\n              </mat-option>\\r\\n            </mat-select>\\r\\n            <mat-error align=\\\"start\\\" *ngIf=\\\"formErrors.Woreda\\\">{{ formErrors.Woreda }}</mat-error>\\r\\n          </mat-form-field>\\r\\n\\r\\n          <mat-form-field fxFlex  fxFlex=\\\"15\\\">\\r\\n            <mat-label>{{'registrationAddress.editor.Kebele' | translate}}</mat-label>\\r\\n            <mat-select formControlName=\\\"KebeleId\\\">\\r\\n              <mat-option value=\\\"0\\\">-</mat-option>\\r\\n              <mat-option *ngFor=\\\"let k of filteredKebeles\\\" [value]=\\\"k.KebeleId\\\">\\r\\n                {{k.Description}}\\r\\n              </mat-option>\\r\\n            </mat-select>\\r\\n            <mat-error align=\\\"start\\\" *ngIf=\\\"formErrors.Kebele\\\">{{ formErrors.Kebele }}</mat-error>\\r\\n          </mat-form-field>\\r\\n        <mat-form-field  fxFlex  fxFlex=\\\"15\\\">\\r\\n          <mat-label>{{'registrationAddress.editor.HouseNo' | translate}}</mat-label>\\r\\n          <input matInput formControlName=\\\"HouseNo\\\" required/>\\r\\n          <!--<mat-error align=\\\"start\\\" *ngIf=\\\"formErrors.HouseNo\\\">{{ formErrors.HouseNo }}</mat-error>-->\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" class=\\\"content\\\" fxLayout.lt-sm=\\\"column\\\" fxLayoutGap=\\\"2em\\\">\\r\\n\\r\\n        <mat-form-field   fxFlex  fxFlex=\\\"15\\\">\\r\\n          <mat-label>{{'registrationAddress.editor.PhoneDirect' | translate}}</mat-label>\\r\\n          <input matInput formControlName=\\\"DirectTeleNo\\\"/>\\r\\n        <!--  <mat-error align=\\\"start\\\" *ngIf=\\\"formErrors.DirectTeleNo\\\">{{ formErrors.DirectTeleNo }}</mat-error>-->\\r\\n        </mat-form-field>\\r\\n\\r\\n\\r\\n        <mat-form-field   fxFlex  fxFlex=\\\"15\\\">\\r\\n          <mat-label>{{'registrationAddress.editor.PhoneMobile' | translate}}</mat-label>\\r\\n          <input matInput formControlName=\\\"CellPhoneNumber\\\"/>\\r\\n          <!--<mat-error align=\\\"start\\\" *ngIf=\\\"formErrors.CellPhoneNumber\\\">{{ formErrors.CellPhoneNumber }}</mat-error>-->\\r\\n        </mat-form-field>\\r\\n\\r\\n        <mat-form-field   fxFlex  fxFlex=\\\"15\\\">\\r\\n          <mat-label>{{'registrationAddress.editor.Fax' | translate}}</mat-label>\\r\\n          <input matInput formControlName=\\\"Fax\\\"/>\\r\\n        </mat-form-field>\\r\\n\\r\\n\\r\\n        <mat-form-field   fxFlex  fxFlex=\\\"15\\\">\\r\\n          <mat-label>{{'registrationAddress.editor.Pobox' | translate}}</mat-label>\\r\\n          <input matInput formControlName=\\\"Pobox\\\"/>\\r\\n        </mat-form-field>\\r\\n\\r\\n          <mat-form-field  fxFlex  fxFlex=\\\"15\\\">\\r\\n            <mat-label>{{'registrationAddress.editor.SpecificAreaName' | translate}}</mat-label>\\r\\n            <input formControlName=\\\"SpecificAreaName\\\" matInput type=\\\"text\\\">\\r\\n            <!--<mat-error align=\\\"start\\\" *ngIf=\\\"formErrors.SpecificAreaName\\\">{{ formErrors.SpecificAreaName }}</mat-error>-->\\r\\n          </mat-form-field>\\r\\n\\r\\n        <mat-checkbox formControlName=\\\"IsMainOffice\\\">{{'registrationAddress.editor.IsMainOffice' | translate}}\\r\\n        </mat-checkbox>\\r\\n\\r\\n      </div>\\r\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\">\\r\\n        <div style=\\\"text-align: center\\\" fxFlex=\\\"67\\\" fxFlexAlign=\\\"center\\\">\\r\\n          <button\\r\\n            mat-raised-button=\\\"\\\"\\r\\n            type=\\\"submit\\\"\\r\\n            color=\\\"primary\\\">\\r\\n            <mat-icon class=\\\"mat-18\\\">done</mat-icon>\\r\\n            <span class=\\\"agree\\\">{{editMode ? 'update' : 'Save'}}</span>\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </mat-card-content>\\r\\n  </mat-card>\\r\\n\\r\\n  <!--<mat-card class=\\\"border\\\" style=\\\"border-top: 0px;margin-bottom: 40px; \\\">\\r\\n    <mat-card-content>\\r\\n      <mat-table #table [dataSource]=\\\"dataSource\\\">\\r\\n        <ng-container matColumnDef=\\\"Region\\\">\\r\\n          <mat-header-cell *matHeaderCellDef fxFlex=\\\"15\\\">{{'registrationAddress.editor.Region' | translate}}</mat-header-cell>\\r\\n          <mat-cell *matCellDef=\\\"let items\\\" fxFlex=\\\"15\\\"> {{items.Region }}\\r\\n          </mat-cell>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"Zone\\\">\\r\\n          <mat-header-cell *matHeaderCellDef fxFlex=\\\"15\\\">{{'registrationAddress.editor.Zone' | translate}}</mat-header-cell>\\r\\n          <mat-cell *matCellDef=\\\"let items\\\" fxFlex=\\\"15\\\"> {{items.Zone }}\\r\\n          </mat-cell>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"Woreda\\\">\\r\\n          <mat-header-cell *matHeaderCellDef fxFlex=\\\"15\\\">{{'registrationAddress.editor.Woreda' | translate}}</mat-header-cell>\\r\\n          <mat-cell *matCellDef=\\\"let items\\\" fxFlex=\\\"15\\\"> {{items.Woreda }}\\r\\n          </mat-cell>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"Kebele\\\">\\r\\n          <mat-header-cell *matHeaderCellDef fxFlex=\\\"15\\\">{{'registrationAddress.editor.Kebele' | translate}}</mat-header-cell>\\r\\n          <mat-cell *matCellDef=\\\"let items\\\" fxFlex=\\\"15\\\"> {{items.Kebele }}\\r\\n          </mat-cell>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"HouseNo\\\">\\r\\n          <mat-header-cell *matHeaderCellDef fxFlex=\\\"15\\\">{{'registrationAddress.editor.HouseNo' | translate}}</mat-header-cell>\\r\\n          <mat-cell *matCellDef=\\\"let items\\\" fxFlex=\\\"15\\\"> {{items.HouseNo }}\\r\\n          </mat-cell>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"PhoneMobile\\\">\\r\\n          <mat-header-cell *matHeaderCellDef fxFlex=\\\"15\\\">{{'registrationAddress.editor.PhoneMobile' | translate}}</mat-header-cell>\\r\\n          <mat-cell *matCellDef=\\\"let items\\\" fxFlex=\\\"15\\\"> {{items.PhoneMobile }}\\r\\n          </mat-cell>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"IsMainOffice\\\">\\r\\n          <mat-header-cell *matHeaderCellDef fxFlex=\\\"14\\\">{{'registrationAddress.editor.IsMainOffice' | translate}}</mat-header-cell>\\r\\n          <mat-cell *matCellDef=\\\"let items\\\" fxFlex=\\\"14\\\"> {{items.IsMainOffice }}\\r\\n          </mat-cell>\\r\\n        </ng-container>\\r\\n      </mat-table>\\r\\n    </mat-card-content>\\r\\n  </mat-card>-->\\r\\n</form>\\r\\n\\r\\n<div *ngIf=\\\"loading\\\" class=\\\"loadme-circleBounce\\\">\\r\\n  <div class=\\\"loadme-circleBounce1\\\"></div>\\r\\n  <div class=\\\"loadme-circleBounce2\\\"></div>\\r\\n</div>\\r\\n\"","module.exports = \"\"","import {AfterContentChecked, Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {MatSnackBar} from '@angular/material/snack-bar';\r\nimport {KebeleModel} from '../../../model/address/Kebele.model';\r\nimport {AddressService} from '../../../Services/Address/address.service';\r\nimport {ErrorMessage} from '@custor/services/errMessageService';\r\nimport {ZoneModel} from '../../../model/address/Zone.model';\r\nimport {AddressModel} from '../../../model/address/Address.model';\r\nimport {RegionModel} from '../../../model/address/Region.model';\r\nimport {ActivatedRoute, Params, Router} from '@angular/router';\r\nimport {WoredaModel} from '../../../model/address/Woreda.model';\r\nimport {AccountService} from '@custor/services/security/account.service';\r\nimport {FormService} from '@custor/validation/custom/form';\r\nimport {TownModel} from '../../../model/address/Town.model';\r\nimport {FormBuilder, FormGroup} from '@angular/forms';\r\nimport {UserActivityDataServices} from '../../../admin/user-detail/user-detail.service';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {DataSharingService} from '../../../Services/data-sharing.service';\r\nimport {RegistrationModel} from '../../../model/Registration/RegistrationModel';\r\n\r\n\r\n@Component({\r\n  selector: 'app-registration-address',\r\n  templateUrl: './registration-address.component.html',\r\n  styleUrls: ['./registration-address.component.scss']\r\n})\r\nexport class RegistrationAddressComponent  implements OnInit, OnDestroy, AfterContentChecked {\r\n\r\n  regions: RegionModel[] = [];\r\n  zones: ZoneModel[] = [];\r\n  filteredZones: ZoneModel[] = [];\r\n  towns: TownModel[] = [];\r\n  filteredTowns: TownModel[] = [];\r\n  woredas: WoredaModel[] = [];\r\n  filteredWoredas: WoredaModel[] = [];\r\n  kebeles: KebeleModel[] = [];\r\n  filteredKebeles: KebeleModel[] = [];\r\n  dataSource: any;\r\n  displayedColumns = [\r\n    'Region', 'Zone', 'Town', 'Woreda', 'Kebele', 'HouseNo', 'PhoneMobile', 'IsMainOffice'\r\n  ];\r\n\r\n  public formErrors = {\r\n    Region: '',\r\n    Zone: '',\r\n    Town: '',\r\n    Woreda: '',\r\n    Kebele: '',\r\n    HouseNo: '',\r\n    /*DirectTeleNo: '',\r\n    CellPhoneNumber: '',\r\n    Fax: '',\r\n    Pobox: '',\r\n    IsMainOffice: false,\r\n    SpecificAreaName: '',*/\r\n    Remark: '',\r\n    EnvironmentalImpact: ''\r\n\r\n  };\r\n\r\n\r\n  public registrationAddressForm: FormGroup;\r\n  public loading: boolean;\r\n  public editMode = false;\r\n  private registrationAddressList: AddressModel;\r\n  private projectId: number;\r\n  private addressId: number | undefined;\r\n\r\n  constructor(private route: ActivatedRoute,\r\n              private router: Router,\r\n              public activityDataServices: UserActivityDataServices,\r\n              public accountServices: AccountService,\r\n              private formBuilder: FormBuilder,\r\n              private toastr: ToastrService,\r\n              private addressService: AddressService,\r\n              private errMsg: ErrorMessage,\r\n              public formService: FormService,\r\n              public snackbar: MatSnackBar,\r\n              private dataSharing: DataSharingService) {\r\n\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    this.fillAddressLookups();\r\n    this.formBuild();\r\n    this.route.params\r\n      .subscribe((params: Params) => {\r\n        this.projectId = +params['id'];\r\n        // this.projectId = this.route.snapshot.params['id'];\r\n        if (this.projectId > 1) {\r\n          // console.log(this.projectId);\r\n          this.getAddressData(this.projectId);\r\n          this.editMode = true;\r\n        }\r\n      });\r\n  }\r\n\r\n\r\n  getAddressData(parent: number) {\r\n    this.addressService.getAddress(parent)\r\n      .subscribe((result: AddressModel) => {\r\n        this.registrationAddressList = result;\r\n        // // console.log(result)\r\n        this.getKebeleByWoredaId(result.WoredaId);\r\n        this.addressId = result.AddressId;\r\n        this.registrationAddressForm.patchValue(result);\r\n      }, error => this.errMsg.getError(error));\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    // this.subscription.unsubscribe();\r\n  }\r\n\r\n  fillAddressLookups() {\r\n    // To-do bring all in one go caching\r\n    this.loading = true;\r\n    this.getRegions();\r\n    this.getAllTowns();\r\n    this.getAllZones();\r\n    this.getAllWoredas();\r\n    // this.getAllKebeles();\r\n\r\n    // this.getAllSite();\r\n  }\r\n\r\n\r\n  getRegions() {\r\n    this.addressService.getRegions()\r\n      .subscribe(result => {\r\n          this.regions = result;\r\n        },\r\n        error => this.toastr.error(this.errMsg.getError(error)));\r\n  }\r\n\r\n  getAllZones() {\r\n    this.addressService.getAllZones()\r\n      .subscribe(result => {\r\n          this.zones = result;\r\n          this.filteredZones = result;\r\n        },\r\n        error => this.toastr.error(this.errMsg.getError(error)));\r\n  }\r\n\r\n  getAllTowns() {\r\n    this.addressService.getAllTowns()\r\n      .subscribe(result => {\r\n          this.towns = result;\r\n          this.filteredTowns = result;\r\n        },\r\n        error => this.toastr.error(this.errMsg.getError(error)));\r\n  }\r\n\r\n  getAllWoredas() {\r\n    this.addressService.getAllWoredas()\r\n      .subscribe(result => {\r\n          this.woredas = result;\r\n          this.filteredWoredas = result;\r\n        },\r\n        error => this.toastr.error(this.errMsg.getError(error)));\r\n  }\r\n\r\n  getKebeleByWoredaId(wordaId: any) {\r\n    this.addressService.getKebelesByWoreda(wordaId)\r\n      .subscribe(result => {\r\n        this.kebeles = result;\r\n        // // console.log(result);\r\n        this.loading = false;\r\n        this.filteredKebeles = result;\r\n      });\r\n  }\r\n\r\n  filterRegion(regionCode: string) {\r\n    // console.log(regionCode);\r\n    if (!regionCode) {\r\n      return;\r\n    }\r\n    this.filteredZones = null;\r\n    this.filteredTowns = null;\r\n    this.filteredKebeles = null;\r\n    this.filteredWoredas = null;\r\n    this.filteredZones = this.zones.filter((item) => {\r\n      return item.RegionId === regionCode;\r\n    });\r\n    this.filteredTowns = this.towns.filter((item) => {\r\n      return item.RegionId === regionCode;\r\n    });\r\n  }\r\n\r\n  filterTown(regionCode: string) {\r\n    if (!regionCode) {\r\n      return;\r\n    }\r\n    this.filteredTowns = null;\r\n    this.filteredTowns = this.towns.filter((item) => {\r\n      return item.RegionId === regionCode;\r\n    });\r\n  }\r\n\r\n  filterZone(zoneCode: string) {\r\n    if (!zoneCode) {\r\n      return;\r\n    }\r\n    this.filteredKebeles = null;\r\n    this.filteredWoredas = null;\r\n\r\n    this.filteredWoredas = this.woredas.filter((item) => {\r\n      return item.ZoneId === zoneCode;\r\n    });\r\n  }\r\n\r\n  filterWoreda(woredaCode: string) {\r\n    if (!woredaCode) {\r\n      return;\r\n    }\r\n    // console.log(woredaCode);\r\n\r\n  }\r\n\r\n\r\n  // onClear() {\r\n  //   this.addressForm.reset();\r\n  // }\r\n\r\n  onSubmit() {\r\n    this.registrationAddressForm.patchValue({\r\n      ParentId: localStorage.getItem('Tin')\r\n    });\r\n    if (this.editMode && typeof (this.addressId) !== 'undefined') {\r\n      this.addressService.updateAddress(this.registrationAddressForm.value, this.addressId)\r\n        .subscribe(result => {\r\n          this.notification('address updated');\r\n          // this.onClear();\r\n        });\r\n    } else {\r\n      this.addressService.saveAddress(this.registrationAddressForm.value)\r\n        .subscribe(result => {\r\n          setTimeout(() => this.dataSharing.projectId.next(this.projectId), 0);\r\n          this.notification('address saved');\r\n          // this.onClear();\r\n\r\n        });\r\n    }\r\n  }\r\n\r\n\r\n /* public AddressId?: number;\r\n  public ParentId?: number;\r\n  public AddressType?: number;\r\n  public IsMainOffice?: boolean;\r\n  public SpecificAreaName?: string;\r\n  public RegionId: string;\r\n  public TownId?: string;\r\n  public ZoneId: string;\r\n  public WoredaId: string;\r\n  public KebeleId: string;\r\n  public HouseNo?: string;\r\n  public TeleNo?: string;\r\n  public Pobox?: string;\r\n  public Fax?: string;\r\n  public CellPhoneNo?: string;\r\n  public Email?: string;\r\n  public IsIndustrialPark?: boolean;\r\n  public IndustrialParkId?: number;\r\n  public OtherAddress?: string;\r\n  public Remark?: string;\r\n  public Kebele?: KebeleModel;\r\n  public Woreda?: WoredaModel;\r\n  public Zone?: ZoneModel;\r\n  public Region?: RegionModel;\r\n  */\r\n\r\n\r\n  formBuild() {\r\n    this.registrationAddressForm = this.formBuilder.group({\r\n      ParentId: '',\r\n      RegionId: '',\r\n      ZoneId: '',\r\n      TownId: '',\r\n      WoredaId: '',\r\n      KebeleId: '',\r\n      HouseNo: '',\r\n      DirectTeleNo: '',\r\n      CellPhoneNumber: '',\r\n      Fax: '',\r\n      Pobox: '',\r\n      IsMainOffice: false,\r\n      SpecificAreaName: '',\r\n      Remark: ''\r\n    });\r\n\r\n    this.registrationAddressForm.valueChanges.subscribe((data) => {\r\n      this.formErrors = this.formService.validateForm(this.registrationAddressForm, this.formErrors, true);\r\n    });\r\n  }\r\n\r\n\r\n  notification(message: string) {\r\n    this.loading = false;\r\n    this.toastr.success(` Succesfully ${message} Data.!`, 'Success');\r\n\r\n    this.snackbar.open(` Succesfully ${message} Data.!`, 'Close', {\r\n      duration: 3000,\r\n    });\r\n  }\r\n\r\n  ngAfterContentChecked(): void {\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {RegistrationComponent} from './registration.component';\r\nimport {RegistrationCertificateComponent} from './registration-certificate/registration-certificate.component';\r\nconst route: Routes = [\r\n  {\r\n    path: '', component: RegistrationComponent, children: [\r\n      {path: '', component: RegistrationComponent},\r\n      {path: 'list', component: RegistrationComponent},\r\n      {path: 'edit/:id', component: RegistrationComponent},\r\n      {path: 'RegistrationCertificate', component: RegistrationCertificateComponent}\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(route)],\r\n  exports: [RouterModule]\r\n})\r\nexport class RegistrationRoutingModule {\r\n\r\n}\r\n","module.exports = \"<app-page-header title=\\\"Registration\\\" icon=\\\"person\\\"></app-page-header>\\r\\n<div [@fadeInOut] class=\\\"page-content mat-elevation-z8\\\">\\r\\n  <mat-progress-bar *ngIf=\\\"loadingIndicator\\\" mode=\\\"query\\\"></mat-progress-bar>\\r\\n  <form #form=\\\"ngForm\\\" [formGroup]=\\\"registrationForm\\\" novalidate (ngSubmit)=\\\"onSubmit()\\\"\\r\\n        fxLayout=\\\"column\\\"\\r\\n        autocomplete=\\\"off\\\">\\r\\n\\r\\n    <div id=\\\"divRegistrationInfo\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"2em\\\" class=\\\"row\\\">\\r\\n      <mat-form-field [fxFlex] [fxFlex]=\\\"32\\\">\\r\\n        <mat-label>{{'registration.editor.CompanyNameAmharic' | translate}}</mat-label>\\r\\n        <input matInput formControlName=\\\"cCompanyNameAmharic\\\" required/>\\r\\n        <mat-error *ngIf=\\\"companyNameAmharic.hasError('required')\\\">\\r\\n          {{'common.validation.Required' | translate}}\\r\\n        </mat-error>\\r\\n        <mat-error *ngIf=\\\"!companyNameAmharic.hasError('required') && companyNameAmharic.hasError('minlength')\\\">\\r\\n          Name should be at least 2 characters long\\r\\n        </mat-error>\\r\\n        <mat-error *ngIf=\\\"!companyNameAmharic.hasError('required') && !companyNameAmharic.hasError('minlength')\\\">\\r\\n          {{'common.validation.MinLengthChar' | translate: {'min':'2'} }}\\r\\n        </mat-error>\\r\\n        <mat-error *ngIf=\\\"!companyNameAmharic.hasError('required') && !companyNameAmharic.hasError('minlength')\\r\\n                            && companyNameAmharic.hasError('pattern')\\\">\\r\\n          {{'common.validation.UseEthiopicOnly' | translate}}\\r\\n        </mat-error>\\r\\n      </mat-form-field>\\r\\n      <mat-form-field [fxFlex] [fxFlex]=\\\"32\\\">\\r\\n        <mat-label>{{'registration.editor.CompanyNameEnglish' | translate}}</mat-label>\\r\\n        <input matInput formControlName=\\\"cCompanyNameEnglish\\\" required/>\\r\\n        <mat-error *ngIf=\\\"companyNameEnglish.hasError('required')\\\">\\r\\n          {{'common.validation.Required' | translate}}\\r\\n        </mat-error>\\r\\n        <mat-error *ngIf=\\\"!companyNameEnglish.hasError('required') && companyNameEnglish.hasError('minlength')\\\">\\r\\n          {{'common.validation.MinLengthChar' | translate: {'min':'2'} }}\\r\\n        </mat-error>\\r\\n        <mat-error *ngIf=\\\"!companyNameEnglish.hasError('required') && !companyNameEnglish.hasError('minlength')\\r\\n                         && companyNameEnglish.hasError('pattern')\\\">\\r\\n          {{'common.validation.UseLatinOnly' | translate}}\\r\\n        </mat-error>\\r\\n      </mat-form-field>\\r\\n      <mat-form-field [fxFlex] [fxFlex]=\\\"32\\\">\\r\\n        <mat-label>{{'registration.editor.CompanyNameRegional' | translate}}</mat-label>\\r\\n        <input matInput formControlName=\\\"cCompanyNameRegional\\\" required/>\\r\\n        <mat-error *ngIf=\\\"companyNameRegional.hasError('required')\\\">\\r\\n          {{'common.validation.Required' | translate}}\\r\\n        </mat-error>\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n    <div fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"2em\\\">\\r\\n      <mat-form-field fxFlex=\\\"14\\\">\\r\\n        <mat-label name=\\\"lblTIN\\\">{{'users.editor.TIN' | translate}}</mat-label>\\r\\n        <input matInput formControlName=\\\"cTin\\\" NaturalNumberOnlyDir/>\\r\\n        <mat-error *ngIf=\\\"tin.hasError('maxlength')\\\">\\r\\n          {{'common.validation.MinLengthChar' | translate: {'min':'10'} }}\\r\\n        </mat-error>\\r\\n      </mat-form-field>\\r\\n      <mat-form-field fxFlex fxFlex=\\\"14\\\">\\r\\n        <mat-label name=\\\"lblRegNumber\\\">{{'registration.editor.RegNumber' | translate}}</mat-label>\\r\\n        <input matInput formControlName=\\\"cRegNumber\\\"/>\\r\\n        <mat-error *ngIf=\\\"regNumber.hasError('minlength')\\\">\\r\\n          {{'common.validation.MinLengthChar' | translate: {'min':'10'} }}\\r\\n        </mat-error>\\r\\n      </mat-form-field>\\r\\n      <mat-form-field fxFlex fxFlex=\\\"15\\\">\\r\\n        <mat-label name=\\\"lblRegDate\\\">{{'registration.editor.RegDate' | translate}}</mat-label>\\r\\n        <input [matDatepicker]=\\\"cRegDate\\\" matInput formControlName=\\\"cRegDate\\\"/>\\r\\n        <mat-datepicker-toggle matSuffix [for]=\\\"cRegDate\\\"></mat-datepicker-toggle>\\r\\n        <mat-datepicker #cRegDate></mat-datepicker>\\r\\n      </mat-form-field>\\r\\n      <mat-form-field fxFlex fxFlex=\\\"14\\\">\\r\\n        <mat-label name=\\\"lblPaidCapital\\\">{{'registration.editor.PaidCapital' | translate}}</mat-label>\\r\\n        <input matInput formControlName=\\\"cPaidCapital\\\"/>\\r\\n      </mat-form-field>\\r\\n      <mat-form-field fxFlex fxFlex=\\\"15\\\">\\r\\n        <mat-label name=\\\"lblSighnedCapital\\\">{{'registration.editor.SighnedCapital' | translate}}</mat-label>\\r\\n        <input matInput formControlName=\\\"cSighnedCapital\\\" />\\r\\n      </mat-form-field>\\r\\n      <mat-form-field fxFlex fxFlex=\\\"14\\\">\\r\\n        <mat-label name=\\\"lblSingleShareValue\\\">{{'registration.editor.SingleShareValue' | translate}}</mat-label>\\r\\n        <input matInput formControlName=\\\"cSingleShareValue\\\"/>\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n    <div fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"2em\\\" class=\\\"row\\\">\\r\\n\\r\\n      <mat-checkbox formControlName=\\\"cWithForighners\\\">{{'registration.editor.IsWithForighner' | translate}}\\r\\n      </mat-checkbox>\\r\\n\\r\\n      <mat-form-field fxFlex  fxFlex=\\\"16\\\">\\r\\n        <mat-label name=\\\"lblEthiopiansShare\\\">{{'registration.editor.EthiopiansShare' | translate}}</mat-label>\\r\\n        <input matInput formControlName=\\\"cEthiopiansShare\\\" />\\r\\n      </mat-form-field>\\r\\n      <mat-form-field fxFlex  fxFlex=\\\"32\\\">\\r\\n        <mat-label>{{'registration.editor.BudgetCatagory' | translate}}</mat-label>\\r\\n        <mat-select formControlName=\\\"cBudgetYearCatagory\\\">\\r\\n          <mat-option *ngFor=\\\"let budgetYearType of budgetYearTypes\\\" [value]=\\\"budgetYearType.Code\\\">\\r\\n            {{budgetYearType.Description}}\\r\\n          </mat-option>\\r\\n        </mat-select>\\r\\n      </mat-form-field>\\r\\n      <mat-form-field fxFlex>\\r\\n        <mat-label>{{'registration.editor.RegistrationStatus' | translate}}</mat-label>\\r\\n        <mat-select formControlName=\\\"cRegistrationStatus\\\">\\r\\n          <mat-option *ngFor=\\\"let status of regStatus\\\" [value]=\\\"status.Id\\\">\\r\\n            {{status.Desc}}\\r\\n          </mat-option>\\r\\n        </mat-select>\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n\\r\\n    <div id=\\\"divCommercialRepresentative\\\" *ngIf=\\\"isCommercialRepresentative\\\">\\r\\n      <div id=\\\"divRepresentativeName\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"2em\\\" class=\\\"row\\\">\\r\\n        <mat-form-field [fxFlex]=\\\"32\\\">\\r\\n          <mat-label>{{'registration.editor.RepresentativeNameAmharic' | translate}}</mat-label>\\r\\n          <input matInput formControlName=\\\"cRepresentativeNameAmharic\\\" required/>\\r\\n          <mat-error *ngIf=\\\"representativeNameAmharic.hasError('required')\\\">\\r\\n            {{'common.validation.Required' | translate}}\\r\\n          </mat-error>\\r\\n          <mat-error\\r\\n            *ngIf=\\\"!representativeNameAmharic.hasError('required') && representativeNameAmharic.hasError('minlength')\\\">\\r\\n            {{'common.validation.MinLengthChar' | translate: {'min':'2'} }}\\r\\n          </mat-error>\\r\\n          <mat-error *ngIf=\\\"!representativeNameAmharic.hasError('required') && !representativeNameAmharic.hasError('minlength')\\r\\n                         && representativeNameAmharic.hasError('pattern')\\\">\\r\\n            {{'common.validation.UseEthiopicOnly' | translate}}\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n        <mat-form-field [fxFlex]=\\\"32\\\">\\r\\n          <mat-label>{{'registration.editor.RepresentativeNameEnglish' | translate}}</mat-label>\\r\\n          <input matInput formControlName=\\\"cRepresentativeNameEnglish\\\" required/>\\r\\n          <mat-error *ngIf=\\\"representativeNameEnglish.hasError('required')\\\">\\r\\n            {{'common.validation.Required' | translate}}\\r\\n          </mat-error>\\r\\n          <mat-error\\r\\n            *ngIf=\\\"!representativeNameEnglish.hasError('required') && representativeNameEnglish.hasError('minlength')\\\">\\r\\n            Name should be at least 2 characters long\\r\\n          </mat-error>\\r\\n          <mat-error\\r\\n            *ngIf=\\\"!representativeNameEnglish.hasError('required') && !representativeNameEnglish.hasError('minlength')\\\">\\r\\n            {{'common.validation.MinLengthChar' | translate: {'min':'2'} }}\\r\\n          </mat-error>\\r\\n          <mat-error *ngIf=\\\"!representativeNameEnglish.hasError('required') && !representativeNameEnglish.hasError('minlength')\\r\\n                            && representativeNameEnglish.hasError('pattern')\\\">\\r\\n            {{'common.validation.UseLatinOnly' | translate}}\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n        <mat-form-field [fxFlex]=\\\"32\\\">\\r\\n          <mat-label>{{'registration.editor.RepresentativeNameRegional' | translate}}</mat-label>\\r\\n          <input matInput formControlName=\\\"cRepresentativeNameRegional\\\" required/>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n      <div id=\\\"divRepresentativeManagerName\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"2em\\\" class=\\\"row\\\">\\r\\n\\r\\n        <mat-form-field [fxFlex]=\\\"32\\\">\\r\\n          <mat-label>{{'registration.editor.RepresentativeManagerNameAmharic' | translate}}</mat-label>\\r\\n          <input matInput formControlName=\\\"cRepresentativeManagerNameAmharic\\\" required/>\\r\\n          <mat-error *ngIf=\\\"representativeManagerNameAmharic.hasError('required')\\\">\\r\\n            {{'common.validation.Required' | translate}}\\r\\n          </mat-error>\\r\\n          <mat-error\\r\\n            *ngIf=\\\"!representativeManagerNameAmharic.hasError('required') && representativeManagerNameAmharic.hasError('minlength')\\\">\\r\\n            {{'common.validation.MinLengthChar' | translate: {'min':'2'} }}\\r\\n          </mat-error>\\r\\n          <mat-error *ngIf=\\\"!representativeManagerNameAmharic.hasError('required') && !representativeManagerNameAmharic.hasError('minlength')\\r\\n                         && representativeManagerNameAmharic.hasError('pattern')\\\">\\r\\n            {{'common.validation.UseEthiopicOnly' | translate}}\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n        <mat-form-field [fxFlex]=\\\"32\\\">\\r\\n          <mat-label>{{'registration.editor.RepresentativeManagerNameEnglish' | translate}}</mat-label>\\r\\n          <input matInput formControlName=\\\"cRepresentativeManagerNameEnglish\\\" required/>\\r\\n          <mat-error *ngIf=\\\"representativeManagerNameEnglish.hasError('required')\\\">\\r\\n            {{'common.validation.Required' | translate}}\\r\\n          </mat-error>\\r\\n          <mat-error\\r\\n            *ngIf=\\\"!representativeManagerNameEnglish.hasError('required') && representativeManagerNameEnglish.hasError('minlength')\\\">\\r\\n            Name should be at least 2 characters long\\r\\n          </mat-error>\\r\\n          <mat-error\\r\\n            *ngIf=\\\"!representativeManagerNameEnglish.hasError('required') && !representativeManagerNameEnglish.hasError('minlength')\\\">\\r\\n            {{'common.validation.MinLengthChar' | translate: {'min':'2'} }}\\r\\n          </mat-error>\\r\\n          <mat-error *ngIf=\\\"!representativeManagerNameEnglish.hasError('required') && !representativeManagerNameEnglish.hasError('minlength')\\r\\n                            && representativeNameEnglish.hasError('pattern')\\\">\\r\\n            {{'common.validation.UseLatinOnly' | translate}}\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n        <mat-form-field [fxFlex]=\\\"32\\\">\\r\\n          <mat-label>{{'registration.editor.RepresentativeManagerNameRegional' | translate}}</mat-label>\\r\\n          <input matInput formControlName=\\\"cRepresentativeManagerNameRegional\\\" required/>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <div id=\\\"divMainOfficeCountry\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"2em\\\" class=\\\"row\\\">\\r\\n\\r\\n        <mat-form-field [fxFlex]=\\\"32\\\">\\r\\n          <mat-label>{{'registration.editor.MainOfficeCountryNameAmharic' | translate}}</mat-label>\\r\\n          <input matInput formControlName=\\\"cMainOfficeCountryNameAmharic\\\" required/>\\r\\n          <mat-error *ngIf=\\\"mainOfficeCountryNameAmharic.hasError('required')\\\">\\r\\n            {{'common.validation.Required' | translate}}\\r\\n          </mat-error>\\r\\n          <mat-error\\r\\n            *ngIf=\\\"!mainOfficeCountryNameAmharic.hasError('required') && mainOfficeCountryNameAmharic.hasError('minlength')\\\">\\r\\n            {{'common.validation.MinLengthChar' | translate: {'min':'2'} }}\\r\\n          </mat-error>\\r\\n          <mat-error *ngIf=\\\"!mainOfficeCountryNameAmharic.hasError('required') && !mainOfficeCountryNameAmharic.hasError('minlength')\\r\\n                         && mainOfficeCountryNameAmharic.hasError('pattern')\\\">\\r\\n            {{'common.validation.UseEthiopicOnly' | translate}}\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n        <mat-form-field [fxFlex]=\\\"32\\\">\\r\\n          <mat-label>{{'registration.editor.MainOfficeCountryNameEnglish' | translate}}</mat-label>\\r\\n          <input matInput formControlName=\\\"cMainOfficeCountryNameEnglish\\\" required/>\\r\\n          <mat-error *ngIf=\\\"mainOfficeCountryNameEnglish.hasError('required')\\\">\\r\\n            {{'common.validation.Required' | translate}}\\r\\n          </mat-error>\\r\\n          <mat-error\\r\\n            *ngIf=\\\"!mainOfficeCountryNameEnglish.hasError('required') && mainOfficeCountryNameEnglish.hasError('minlength')\\\">\\r\\n            Name should be at least 2 characters long\\r\\n          </mat-error>\\r\\n          <mat-error\\r\\n            *ngIf=\\\"!mainOfficeCountryNameEnglish.hasError('required') && !mainOfficeCountryNameEnglish.hasError('minlength')\\\">\\r\\n            {{'common.validation.MinLengthChar' | translate: {'min':'2'} }}\\r\\n          </mat-error>\\r\\n          <mat-error *ngIf=\\\"!mainOfficeCountryNameEnglish.hasError('required') && !mainOfficeCountryNameEnglish.hasError('minlength')\\r\\n                            && representativeNameEnglish.hasError('pattern')\\\">\\r\\n            {{'common.validation.UseLatinOnly' | translate}}\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n        <mat-form-field [fxFlex]=\\\"32\\\">\\r\\n          <mat-label>{{'registration.editor.MainOfficeCountryNameRegional' | translate}}</mat-label>\\r\\n          <input matInput formControlName=\\\"cMainOfficeCountryNameRegional\\\" required/>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <div id=\\\"divMainOfficeAddress\\\" fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"2em\\\" class=\\\"row\\\">\\r\\n        <mat-form-field [fxFlex]=\\\"32\\\">\\r\\n          <mat-label>{{'registration.editor.MainOfficeAddressAmharic' | translate}}</mat-label>\\r\\n          <input matInput formControlName=\\\"cMainOfficeAddressAmharic\\\" required/>\\r\\n          <mat-error *ngIf=\\\"mainOfficeAddressAmharic.hasError('required')\\\">\\r\\n            {{'common.validation.Required' | translate}}\\r\\n          </mat-error>\\r\\n          <mat-error\\r\\n            *ngIf=\\\"!mainOfficeAddressAmharic.hasError('required') && mainOfficeAddressAmharic.hasError('minlength')\\\">\\r\\n            {{'common.validation.MinLengthChar' | translate: {'min':'2'} }}\\r\\n          </mat-error>\\r\\n          <mat-error *ngIf=\\\"!mainOfficeAddressAmharic.hasError('required') && !mainOfficeAddressAmharic.hasError('minlength')\\r\\n                         && mainOfficeAddressAmharic.hasError('pattern')\\\">\\r\\n            {{'common.validation.UseEthiopicOnly' | translate}}\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n        <mat-form-field [fxFlex]=\\\"32\\\">\\r\\n          <mat-label>{{'registration.editor.MainOfficeAddressEnglish' | translate}}</mat-label>\\r\\n          <input matInput formControlName=\\\"cMainOfficeAddressEnglish\\\" required/>\\r\\n          <mat-error *ngIf=\\\"mainOfficeAddressEnglish.hasError('required')\\\">\\r\\n            {{'common.validation.Required' | translate}}\\r\\n          </mat-error>\\r\\n          <mat-error\\r\\n            *ngIf=\\\"!mainOfficeAddressEnglish.hasError('required') && mainOfficeAddressEnglish.hasError('minlength')\\\">\\r\\n            Name should be at least 2 characters long\\r\\n          </mat-error>\\r\\n          <mat-error\\r\\n            *ngIf=\\\"!mainOfficeAddressEnglish.hasError('required') && !mainOfficeAddressEnglish.hasError('minlength')\\\">\\r\\n            {{'common.validation.MinLengthChar' | translate: {'min':'2'} }}\\r\\n          </mat-error>\\r\\n          <mat-error *ngIf=\\\"!mainOfficeAddressEnglish.hasError('required') && !mainOfficeAddressEnglish.hasError('minlength')\\r\\n                            && mainOfficeAddressEnglish.hasError('pattern')\\\">\\r\\n            {{'common.validation.UseLatinOnly' | translate}}\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n        <mat-form-field [fxFlex]=\\\"32\\\">\\r\\n          <mat-label>{{'registration.editor.MainOfficeAddressRegional' | translate}}</mat-label>\\r\\n          <input matInput formControlName=\\\"cMainOfficeAddressRegional\\\" required/>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n        <div  fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"2em\\\">\\r\\n          <mat-form-field fxFlex fxFlex=\\\"100\\\">\\r\\n            <mat-select placeholder=\\\"ዘርፍ *\\\" formControlName=\\\"cMajorDivision\\\" multiple>\\r\\n              <mat-option *ngFor=\\\"let MajorDivision of majorDivisions\\\" [value]=\\\"MajorDivision.Id\\\">{{MajorDivision.Description}}</mat-option>\\r\\n            </mat-select>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n    <!--<mat-card class=\\\"border\\\" style=\\\"margin-top: 20px;\\\">-->\\r\\n      <!--<mat-card-subtitle class=\\\"sub-title\\\">{{RegistrationName.Value}} የተሰማራባቸው መስኮች-->\\r\\n        <!--<mat-divider></mat-divider>-->\\r\\n      <!--</mat-card-subtitle>-->\\r\\n\\r\\n      <!--<div fxLayout=\\\"row\\\" fxLayout.lt-md=\\\"column\\\" fxLayoutGap=\\\"2em\\\" class=\\\"row\\\">-->\\r\\n\\r\\n\\r\\n          <!--<div formGroupName=\\\"Catagory\\\">-->\\r\\n            <!--<mat-selection-list aria-colcount=\\\"2\\\" formControlName=\\\"cMajorDivision\\\" dense [required]=\\\"true\\\">-->\\r\\n              <!--<h3 matSubheader>ዘርፍ *:</h3>-->\\r\\n              <!--<mat-list-option aria-colcount=\\\"2\\\" [checkboxPosition]=\\\"left\\\" *ngFor=\\\"let MajorDivision of majorDivisions\\\"-->\\r\\n                               <!--[value]=\\\"MajorDivision.Id\\\">-->\\r\\n                <!--{{MajorDivision.Description}}-->\\r\\n              <!--</mat-list-option>-->\\r\\n            <!--</mat-selection-list>-->\\r\\n\\r\\n           <!-- <mat-form-field>\\r\\n              <mat-select placeholder=\\\"ዘርፍ *\\\" [formControl]=\\\"majorDivisions\\\"multiple>\\r\\n                <mat-select-trigger>\\r\\n                  {{majorDivisions.value ? majorDivisions.value[0] : ''}}\\r\\n                  <span *ngIf=\\\"majorDivisions.value?.length > 1\\\" class=\\\"additional-selection\\\">\\r\\n                      (+{{majorDivisions.value.length - 1}} {{majorDivisions.value?.length === 2 ? 'other' : 'others'}})\\r\\n                  </span>\\r\\n                </mat-select-trigger>\\r\\n                <mat-option *ngFor=\\\"let MajorDivision of majorDivisions\\\" [value]=\\\"MajorDivision.Id\\\">{{MajorDivision.Description}}</mat-option>\\r\\n              </mat-select>\\r\\n            </mat-form-field>\\r\\n          </div>-->\\r\\n      <!--</div>-->\\r\\n      <!--<mat-card-content>-->\\r\\n      <!--</mat-card-content>-->\\r\\n    <!--</mat-card>-->\\r\\n\\r\\n\\r\\n    <div mat-dialog-actions style=\\\"margin: 15px; text-align: center\\\">\\r\\n      <button mat-raised-button type=\\\"submit\\\" color=\\\"primary\\\" style=\\\"margin-right: 10px\\\">\\r\\n        {{'common.commands.Save' | translate}}\\r\\n      </button>\\r\\n      <button mat-raised-button (click)=\\\"onBack()\\\" color=\\\"warn\\\" type=\\\"button\\\">\\r\\n        {{'common.commands.Cancel' | translate}}\\r\\n      </button>\\r\\n    </div>\\r\\n\\r\\n    <!--<pre>\\r\\n      {{registrationForm.value | json}}\\r\\n    </pre>-->\\r\\n  </form>\\r\\n</div>\\r\\n\\r\\n\"","module.exports = \".additional-selection {\\n  opacity: 0.75;\\n  font-size: 0.75em; }\\n\"","import {fadeInOut} from '@custor/services/animations';\r\nimport {FormBuilder, FormControl, FormGroup, NgForm, Validators} from '@angular/forms';\r\nimport {AfterContentChecked, AfterViewInit, Component, OnDestroy, OnInit, ViewChild} from '@angular/core';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Subscription} from 'rxjs';\r\nimport {Utilities} from '@custor/helpers/utilities';\r\nimport {ALPHABET_WITHSPACE_REGEX, ET_ALPHABET_WITHSPACE_REGEX, GENDERS, STATUS} from '../../const/consts';\r\nimport {BudgetYearType} from '../../model/Registration/BudgetYearType';\r\nimport {AddressService} from '../../Services/Address/address.service';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {BudgetYearTypeService} from '../../Services/Registration/BudgetYearType.service';\r\nimport {Lookup, RegistrationStatus} from '../../model/lookupData';\r\nimport {MajorDivision} from '../../model/catagory/MajorDivision.model';\r\nimport {CatagoryService} from '../../Services/Catagory/Catagory.service';\r\nimport {Investor} from '../../model/investor';\r\nimport {RegistrationService} from '../../Services/Registration/Registration.service';\r\nimport {RegistrationCatagory} from '../../model/Registration/RegistrationCatagory';\r\nimport {RegistrationCatagoryService} from '../../Services/Registration/RegistrationCatagory.service';\r\nimport {RegistrationModel} from '../../model/Registration/RegistrationModel';\r\nimport {ServiceTariffModel} from '../../model/servicetariff';\r\nimport {AddressModel} from '../../model/address/Address.model';\r\n\r\n@Component({\r\n  selector: 'app-registration',\r\n  templateUrl: './registration.component.html',\r\n  styleUrls: ['./registration.component.scss'],\r\n  animations: [fadeInOut]\r\n})\r\nexport class RegistrationComponent implements OnInit {\r\n  registrationForm: FormGroup;\r\n  loadingIndicator: boolean;\r\n  isCommercialRepresentative: boolean;\r\n  budgetYearTypes: BudgetYearType[] = [];\r\n  regStatus: RegistrationStatus[] = [];\r\n  majorDivisions: MajorDivision[] = [];\r\n  registrationCatagoryList: RegistrationCatagory[] = [];\r\n  registrationModel: RegistrationModel;\r\n  isNewRegistration = true;\r\n  constructor(private budgetYearTypeService: BudgetYearTypeService,\r\n              private registrationCatagoryService: RegistrationCatagoryService,\r\n              private catagoryService: CatagoryService,\r\n              private toastr: ToastrService,\r\n              private registrationService: RegistrationService,\r\n              private fb: FormBuilder) {\r\n\r\n    this.initForm();\r\n    this.initStaticData('am');\r\n  }\r\n\r\n\r\n  initForm() {\r\n    this.registrationForm = this.fb.group({\r\n      cCompanyNameRegional: [''],\r\n      cCompanyNameEnglish: ['', [Validators.compose([Validators.required, Validators.minLength(2),\r\n        Validators.pattern(ALPHABET_WITHSPACE_REGEX)])]],\r\n      cCompanyNameAmharic: ['', [Validators.compose([Validators.required, Validators.minLength(2),\r\n        Validators.pattern(ET_ALPHABET_WITHSPACE_REGEX)])]],\r\n      cTin: ['', [Validators.compose([Validators.required, Validators.minLength(10),])]],\r\n      cRegNumber: ['', [Validators.compose([Validators.required, Validators.minLength(10),])]],\r\n      cRegDate: ['', [Validators.compose([Validators.required, Validators.minLength(2),])]],\r\n      cPaidCapital: ['', [Validators.compose([Validators.required, Validators.minLength(2),])]],\r\n      cSighnedCapital: [''],\r\n      cSingleShareValue: [''],\r\n      cWithForighners: false,\r\n      cEthiopiansShare: [''],\r\n      cBudgetYearCatagory: [''],\r\n      cRegistrationStatus: [''],\r\n      cRepresentativeNameAmharic: [''],\r\n      cRepresentativeNameEnglish: [''],\r\n\r\n      cRepresentativeNameRegional: [''],\r\n      cRepresentativeManagerNameAmharic: [''],\r\n      cRepresentativeManagerNameEnglish: [''],\r\n      cRepresentativeManagerNameRegional: [''],\r\n\r\n      cMainOfficeAddressAmharic: [''],\r\n      cMainOfficeAddressEnglish: [''],\r\n      cMainOfficeAddressRegional: [''],\r\n\r\n\r\n      cMainOfficeCountryNameAmharic: [''],\r\n      cMainOfficeCountryNameEnglish: [''],\r\n      cMainOfficeCountryNameRegional: [''],\r\n      cMajorDivision: []\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    if(localStorage.getItem('LegalStatus') != \"999\")\r\n      this.isCommercialRepresentative = false;\r\n\r\n    this.getMajorDivisions();\r\n\r\n    if(localStorage.getItem('LegalStatus') == null || localStorage.getItem('LegalStatus') == \"4\") {\r\n      this.ClearCommercialRepresentativeValidators();\r\n    }\r\n    if(localStorage.getItem('LegalStatus') == \"2\" || localStorage.getItem('LegalStatus') == \"3\") {\r\n    }\r\n    else {\r\n      //Do Something\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.fillAllLookups();\r\n  }\r\n\r\n  fillAllLookups() {\r\n    this.getBudgetYearTypes();\r\n    //this.getAllNation();\r\n  }\r\n\r\n  getBudgetYearTypes() {\r\n    this.budgetYearTypeService.getAllBugetYearTypes()\r\n      .subscribe(result => {\r\n          this.budgetYearTypes = result;\r\n        },\r\n        error => this.toastr.error(error));\r\n  }\r\n\r\n  getMajorDivisions() {\r\n    this.catagoryService.getMajorDivision()\r\n      .subscribe(result => {\r\n          this.majorDivisions = result;\r\n        },\r\n        error => this.toastr.error(error));\r\n  }\r\n\r\n  initStaticData(currentLang) {\r\n    let registration_Status: RegistrationStatus = new RegistrationStatus();\r\n    STATUS.forEach(pair => {\r\n      registration_Status = {'Id': pair.Id.toString(), 'Desc': (currentLang === 'am' ? pair.Description : pair.DescriptionEnglish)};\r\n      this.regStatus.push(registration_Status);\r\n    });\r\n  }\r\n\r\n  public onSubmit() {\r\n    if (!this.registrationForm.valid) {\r\n      return;\r\n    }\r\n    if (this.isNewRegistration)\r\n    {\r\n      this.loadingIndicator = true;\r\n      return this.registrationService.saveRegistration(this.getEditedRegistration())\r\n        .subscribe((registrationModel: RegistrationModel) => {\r\n            this.saveCompleted(registrationModel);\r\n            localStorage.setItem('Tin', registrationModel.Tin.toString());\r\n          },\r\n          error => this.toastr.error(error));\r\n    }\r\n    else\r\n      {\r\n        this.loadingIndicator = true;\r\n        return this.registrationService.UpdateRegistration(this.getEditedRegistration())\r\n          .subscribe((registrationModel: RegistrationModel) => {\r\n              this.saveCompleted(registrationModel);\r\n              localStorage.setItem('Tin', registrationModel.Tin.toString());\r\n            },\r\n            error => this.toastr.error(error));\r\n      }\r\n  }\r\n\r\n  getRegistrationDetail() {\r\n    var OwnerTin = localStorage.getItem('Tin');\r\n\r\n    if (OwnerTin === null)\r\n      return;\r\n      this.registrationService.getRegistrationByTin(OwnerTin).subscribe(registration => {\r\n      this.isNewRegistration = true;\r\n      this.registrationForm.patchValue(registration);\r\n      this.getRegistrationCatagoryData(registration.Tin);\r\n    }, error => this.toastr.error(error));\r\n  }\r\n\r\n  getRegistrationCatagoryData(Tin: string) {\r\n    this.registrationCatagoryService.getRegistrationCatagoriesByTin(Tin)\r\n      .subscribe((result: RegistrationCatagory[]) => {\r\n        this.registrationCatagoryList = result;\r\n        this.registrationForm.get('cMajorDivision').patchValue(result);\r\n      }, error => this.toastr.error(error));\r\n  }\r\n\r\n  private saveCompleted(registrationModel?: RegistrationModel) {\r\n    if (registrationModel) {\r\n      this.registrationModel = registrationModel;\r\n    }\r\n    this.loadingIndicator = false;\r\n    this.toastr.success('Record saved successfully!');\r\n  }\r\n\r\n  private getEditedRegistration(): RegistrationModel {\r\n    const formModel = this.registrationForm.value;\r\n    return {\r\n      ID: this.isNewRegistration ? 0 : this.registrationModel.ID,\r\n      Tin: formModel.cTin,\r\n      MainGuid: '65197b05-8787-4859-b6dd-000014e63a72',\r\n      ParentGuid: '93c39239-5c2f-4347-95d1-0000527f5339',\r\n      LegalCondtion: 1,\r\n      BusinessNameAmh: formModel.cCompanyNameAmharic,\r\n      BusinessName: formModel.cCompanyNameEnglish,\r\n      BusinessNameRegional: formModel.cCompanyNameRegional,\r\n      RegNo: formModel.cRegNumber,\r\n      RegDate: formModel.cRegDate,\r\n      PaidUpCapital: formModel.cPaidCapital,\r\n      SignedCapital: formModel.cSighnedCapital,\r\n      SingleShareAmount: formModel.cSingleShareValue,\r\n      IsSharedWithForeigner: formModel.cWithForighners,\r\n      LocalPersonCapital: formModel.cEthiopiansShare,\r\n      BudgetYearCode: formModel.cBudgetYearCatagory,\r\n      Status: formModel.cRegistrationStatus,\r\n      GrantorName: formModel.cRepresentativeNameAmharic,\r\n      GrantorNameEng: formModel.cRepresentativeNameEnglish,\r\n      GrantorNameRegional: formModel.cRepresentativeNameRegional,\r\n      GrantorCountry: formModel.cMainOfficeCountryNameAmharic,\r\n      GrantorCountryEng: formModel.cMainOfficeCountryNameEnglish,\r\n      GrantorCountryRegional: formModel.cMainOfficeCountryNameRegional,\r\n      GrantorManagerName: formModel.cRepresentativeManagerNameAmharic,\r\n      GrantorManagerNameEng: formModel.cRepresentativeManagerNameEnglish,\r\n      GrantorManagerNameRegional: formModel.cRepresentativeManagerNameRegional,\r\n      GrantorMainAddress: formModel.cMainOfficeAddressAmharic,\r\n      GrantorMainAddressEng: formModel.cMainOfficeAddressEnglish,\r\n      GrantorMainAddressRegional: formModel.cMainOfficeAddressRegional,\r\n      RegistrationCatagories: formModel.cMajorDivision,\r\n      Username: '',\r\n      //EventDateTime: Date.Now.to,\r\n      UpdatedUsername: '',\r\n      //UpdatedEventDatetime: Date.now(),\r\n    };\r\n  }\r\n\r\n\r\n  ClearCommercialRepresentativeValidators() {\r\n    /*alert('Clear Commerical registration validation');*/\r\n    this.representativeManagerNameAmharic.clearValidators();\r\n    this.registrationForm.get('cRepresentativeManagerNameAmharic').updateValueAndValidity();\r\n\r\n    this.representativeManagerNameEnglish.clearValidators();\r\n    this.representativeManagerNameRegional.clearValidators();\r\n\r\n    this.representativeNameAmharic.clearValidators();\r\n    this.representativeNameEnglish.clearValidators();\r\n    this.representativeNameRegional.clearValidators();\r\n\r\n    this.mainOfficeCountryNameAmharic.clearValidators();\r\n    this.mainOfficeCountryNameEnglish.clearValidators();\r\n    this.mainOfficeCountryNameRegional.clearValidators();\r\n\r\n    this.mainOfficeAddressAmharic.clearValidators();\r\n    this.mainOfficeAddressEnglish.clearValidators();\r\n    this.mainOfficeAddressRegional.clearValidators();\r\n  }\r\n\r\n\r\n/*  saveRegistrationCatagory() {\r\n    this.registrationForm.patchValue({\r\n      cTin: localStorage.getItem('Tin')\r\n    });\r\n    // // console.log(this.registrationForm.get('cMajorDivisions').value);\r\n\r\n    return this.registrationCatagoryService.saveRegistrationCatagory(\r\n      this.getEditedRegistrationCatagory()).subscribe(\r\n      (registrationcatagory: RegistrationCatagory) => {\r\n        // console.log(registrationcatagory);\r\n      },\r\n      error => this.toastr.error(error));\r\n  }*/\r\n\r\n /* private getEditedRegistrationCatagory(): RegistrationCatagory {\r\n    const formModel = this.registrationForm.value;\r\n    return {\r\n      ID: 0,\r\n      Tin: localStorage.getItem('Tin'),\r\n      MainGuid: null,\r\n      MajorCatagoryCode: formModel.cMajorDivision\r\n    };\r\n  }*/\r\n\r\n\r\n  onBack() {\r\n    window.history.back();\r\n  }\r\n\r\n\r\n  get companyNameAmharic() {\r\n    return this.registrationForm.get('cCompanyNameAmharic');\r\n  }\r\n\r\n  get companyNameEnglish() {\r\n    return this.registrationForm.get('cCompanyNameEnglish');\r\n  }\r\n\r\n  get companyNameRegional() {\r\n    return this.registrationForm.get('cCompanyNameRegional');\r\n  }\r\n\r\n  get representativeNameAmharic() {\r\n    return this.registrationForm.get('cRepresentativeNameAmharic');\r\n  }\r\n\r\n  get representativeNameEnglish() {\r\n    return this.registrationForm.get('cRepresentativeNameEnglish');\r\n  }\r\n\r\n  get representativeNameRegional() {\r\n    return this.registrationForm.get('cRepresentativeNameRegional');\r\n  }\r\n\r\n  get representativeManagerNameAmharic() {\r\n    return this.registrationForm.get('cRepresentativeManagerNameAmharic');\r\n  }\r\n\r\n  get representativeManagerNameEnglish() {\r\n    return this.registrationForm.get('cRepresentativeManagerNameEnglish');\r\n  }\r\n\r\n  get representativeManagerNameRegional() {\r\n    return this.registrationForm.get('cRepresentativeManagerNameRegional');\r\n  }\r\n\r\n  get mainOfficeAddressAmharic() {\r\n    return this.registrationForm.get('cMainOfficeAddressAmharic');\r\n  }\r\n\r\n  get mainOfficeAddressEnglish() {\r\n    return this.registrationForm.get('cMainOfficeAddressEnglish');\r\n  }\r\n\r\n  get mainOfficeAddressRegional() {\r\n    return this.registrationForm.get('cMainOfficeAddressRegional');\r\n  }\r\n\r\n  get mainOfficeCountryNameAmharic() {\r\n    return this.registrationForm.get('cMainOfficeCountryNameAmharic');\r\n  }\r\n\r\n  get mainOfficeCountryNameEnglish() {\r\n    return this.registrationForm.get('cMainOfficeCountryNameEnglish');\r\n  }\r\n\r\n  get mainOfficeCountryNameRegional() {\r\n    return this.registrationForm.get('cMainOfficeCountryNameRegional');\r\n  }\r\n\r\n  get tin() {\r\n    return this.registrationForm.get('cTin');\r\n  }\r\n\r\n  get regNumber() {\r\n    return this.registrationForm.get('cRegNumber');\r\n  }\r\n\r\n  get regDate() {\r\n    return this.registrationForm.get('cRegDate');\r\n  }\r\n\r\n  get singleShareValue() {\r\n    return this.registrationForm.get('cSingleShareValue');\r\n  }\r\n\r\n  get sighnedCapital() {\r\n    return this.registrationForm.get('cSighnedCapital');\r\n  }\r\n\r\n  get paidCapital() {\r\n    return this.registrationForm.get('cPaidCapital');\r\n  }\r\n\r\n  get withForighners() {\r\n    return this.registrationForm.get('cWithForighners');\r\n  }\r\n\r\n  get ethiopiansShare() {\r\n    return this.registrationForm.get('cEthiopiansShare');\r\n  }\r\n\r\n  get budgetYearCatagory() {\r\n    return this.registrationForm.get('cBudgetYearCatagory');\r\n  }\r\n\r\n  get registrationStatus() {\r\n    return this.registrationForm.get('cRegistrationStatus');\r\n  }\r\n\r\n  get RegistrationName() {\r\n    return this.registrationForm.get('cCompanyNameAmharic');\r\n  }\r\n}\r\n\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {SharedModule} from '@custor/modules/shared.module';\r\nimport {RegistrationComponent} from './registration.component';\r\nimport {RegistrationRoutingModule} from './registration-routing.module';\r\nimport { RegistrationCertificateComponent } from './registration-certificate/registration-certificate.component';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    RegistrationRoutingModule\r\n  ],\r\n  declarations: [\r\n    RegistrationComponent,\r\n   // RegistrationCertificateComponent\r\n    ],\r\n  exports: [\r\n\r\n\r\n  ]\r\n})\r\nexport class RegistrationModule {\r\n}\r\n"],"sourceRoot":""}