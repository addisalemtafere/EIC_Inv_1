{"version":3,"sources":["webpack:///./src/app/admin/user-routing.module.ts","webpack:///./src/app/admin/user.module.ts","webpack:///./src/app/admin/users/edit-user-dialog.component.html","webpack:///./src/app/admin/users/edit-user-dialog.component.scss","webpack:///./src/app/admin/users/edit-user-dialog.component.ts","webpack:///./src/app/admin/users/user-list.component.html","webpack:///./src/app/admin/users/user-list.component.scss","webpack:///./src/app/admin/users/user-list.component.ts"],"names":[],"mappings":"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","file":"app-admin-user-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { UserListComponent } from './users/user-list.component';\r\n\r\nconst route: Routes = [\r\n  { path: '', component: UserListComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(route)],\r\n})\r\nexport class UserRoutingModule {\r\n}","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {UserListComponent} from './users/user-list.component';\r\nimport {EditUserDialogComponent} from './users/edit-user-dialog.component';\r\nimport {SharedModule} from '@custor/modules/shared.module';\r\nimport {UserRoutingModule} from './user-routing.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    UserRoutingModule\r\n  ],\r\n  declarations: [\r\n    UserListComponent,\r\n    EditUserDialogComponent,\r\n  ],\r\n  entryComponents: [\r\n    EditUserDialogComponent,\r\n\r\n  ]\r\n})\r\nexport class UserModule {\r\n}","module.exports = \"<div>\\r\\n    <mat-toolbar color=\\\"primary\\\" mat-dialog-title>\\r\\n            <h1 mat-dialog-title>{{userName ? ('users.management.EditUser' | translate:userName) : ('users.management.NewUser' | translate)}}</h1>\\r\\n    </mat-toolbar>\\r\\n    <div>\\r\\n        <div mat-dialog-content>\\r\\n            <user-editor [user]=\\\"data.user\\\" [roles]=\\\"data.roles\\\" isEditMode=\\\"true\\\"></user-editor>\\r\\n        </div>\\r\\n        <div mat-dialog-actions style=\\\"text-align: center; margin-left: 30%\\\">\\r\\n            <button mat-raised-button (click)=\\\"editUser.save();\\\" color=\\\"primary\\\">Save</button>\\r\\n            <button mat-raised-button (click)=\\\"cancel()\\\" color=\\\"warn\\\">Cancel</button>\\r\\n        </div>\\r\\n    </div>\\r\\n </div> \"","module.exports = \".mat-toolbar {\\n  margin: -24px;\\n  margin-bottom: 0;\\n  width: auto; }\\n\\n.mat-dialog-content {\\n  margin: 0 -24px;\\n  padding: 0 !important; }\\n\\n.mat-toolbar-row, .mat-toolbar-single-row {\\n  height: 40px !important; }\\n\"","import {AfterViewInit, Component, Inject, ViewChild} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material';\r\n\r\nimport {User} from '../../model/security/user.model';\r\nimport {Role} from '../../model/security/role.model';\r\n\r\nimport {UserEditorComponent} from './user-editor.component';\r\n\r\n@Component({\r\n  selector: 'app-edit-user-dialog',\r\n  templateUrl: 'edit-user-dialog.component.html',\r\n  styleUrls: ['edit-user-dialog.component.scss']\r\n})\r\nexport class EditUserDialogComponent implements AfterViewInit {\r\n  @ViewChild(UserEditorComponent)\r\n  editUser: UserEditorComponent;\r\n\r\n  get userName(): any {\r\n    return this.data.user ? {name: this.data.user.UserName} : null;\r\n  }\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<EditUserDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: { user: User, roles: Role[] }) {\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.editUser.userSaved$.subscribe(user => this.dialogRef.close(user));\r\n  }\r\n\r\n  cancel(): void {\r\n    this.dialogRef.close(null);\r\n  }\r\n}","module.exports = \"<app-page-header title=\\\"Users\\\" icon=\\\"people\\\"></app-page-header>\\r\\n<div [@fadeInOut] class=\\\"page-content\\\">\\r\\n\\r\\n    <div class=\\\"search-box\\\">\\r\\n        <mat-form-field>\\r\\n            <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"{{'users.management.Search' | translate}}\\\">\\r\\n        </mat-form-field>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"mat-elevation-z8\\\">\\r\\n        <mat-progress-bar *ngIf=\\\"loadingIndicator\\\" mode=\\\"query\\\"></mat-progress-bar>\\r\\n        <mat-table [dataSource]=\\\"dataSource\\\" matSort>\\r\\n\\r\\n            <ng-container matColumnDef=\\\"tin\\\">\\r\\n                <mat-header-cell *matHeaderCellDef mat-sort-header> {{'users.management.TIN' | translate}} </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let row\\\"> {{row.Tin}}</mat-cell>\\r\\n            </ng-container>\\r\\n\\r\\n            <ng-container matColumnDef=\\\"userName\\\">\\r\\n                <mat-header-cell *matHeaderCellDef mat-sort-header> {{'users.management.UserName' | translate}} </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let row\\\"> {{row.UserName}} </mat-cell>\\r\\n            </ng-container>\\r\\n\\r\\n            <ng-container matColumnDef=\\\"fullName\\\">\\r\\n                <mat-header-cell *matHeaderCellDef mat-sort-header> {{'users.management.FullName' | translate}} </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let row\\\"> {{row.FullName}} </mat-cell>\\r\\n            </ng-container>\\r\\n\\r\\n            <ng-container matColumnDef=\\\"email\\\">\\r\\n                <mat-header-cell *matHeaderCellDef mat-sort-header> {{'users.management.Email' | translate}} </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let row\\\"> {{row.Email}} </mat-cell>\\r\\n            </ng-container>\\r\\n\\r\\n            <ng-container *ngIf=\\\"canManageUsers\\\" matColumnDef=\\\"actions\\\">\\r\\n                <mat-header-cell *matHeaderCellDef fxFlex=\\\"140px\\\">\\r\\n                    <button *ngIf=\\\"canAssignRoles\\\" mat-button color=\\\"primary\\\" matTooltip=\\\"{{'users.management.NewUser' | translate}}\\\" (click)=\\\"editUser()\\\">\\r\\n                        <mat-icon class=\\\"mat-button-icon\\\">person_add</mat-icon>{{'users.management.NewUser' | translate}}\\r\\n                    </button>\\r\\n                </mat-header-cell>\\r\\n                <mat-cell *matCellDef=\\\"let user\\\" fxFlex=\\\"140px\\\">\\r\\n                    <button mat-icon-button matTooltip=\\\"{{'users.management.Edit' | translate}}\\\" (click)=\\\"editUser(user)\\\">\\r\\n                        <mat-icon>edit</mat-icon>\\r\\n                    </button>\\r\\n                    <button mat-icon-button matTooltip=\\\"{{'users.management.Delete' | translate}}\\\" (click)=\\\"confirmDelete(user)\\\">\\r\\n                        <mat-icon color=\\\"warn\\\">delete</mat-icon>\\r\\n                    </button>\\r\\n                </mat-cell>\\r\\n            </ng-container>\\r\\n\\r\\n            <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\r\\n            <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\">\\r\\n            </mat-row>\\r\\n        </mat-table>\\r\\n\\r\\n        <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\\r\\n    </div>\\r\\n</div>\"","module.exports = \".search-box {\\n  flex-direction: column;\\n  box-sizing: border-box;\\n  display: flex; }\\n\\n.search-box .mat-form-field {\\n  padding: 0 2em; }\\n\"","import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog, MatPaginator, MatSnackBar, MatSort, MatTableDataSource } from '@angular/material';\r\n\r\nimport { EditUserDialogComponent } from './edit-user-dialog.component';\r\nimport { fadeInOut } from '../../../@custor/services/animations';\r\nimport { User } from '../../model/security/user.model';\r\nimport { Role } from '../../model/security/role.model';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AppTranslationService } from '../../../@custor/services/translation.service';\r\nimport { AccountService } from '../../../@custor/services/security/account.service';\r\nimport { Utilities } from '../../../@custor/helpers/utilities';\r\nimport { Permission } from '../../model/security/permission.model';\r\nimport { AuthService } from '../../../@custor/services/security/auth.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-user-list',\r\n  templateUrl: './user-list.component.html',\r\n  styleUrls: ['./user-list.component.scss'],\r\n  animations: [fadeInOut]\r\n})\r\nexport class UserListComponent implements OnInit, AfterViewInit {\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  displayedColumns = ['tin', 'userName', 'fullName', 'email'];\r\n  dataSource: MatTableDataSource<User>;\r\n  sourceUser: User;\r\n  loadingIndicator: boolean;\r\n  allRoles: Role[] = [];\r\n\r\n  constructor(\r\n    private alertService: ToastrService,\r\n    private translationService: AppTranslationService,\r\n    private accountService: AccountService,\r\n    private snackBar: MatSnackBar, private authService: AuthService,\r\n    private dialog: MatDialog, private router: Router) {\r\n    if (this.canManageUsers) {\r\n      this.displayedColumns.push('actions');\r\n    }\r\n\r\n    // Assign the data to the data source for the table to render\r\n    this.dataSource = new MatTableDataSource();\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (!this.canManageUsers) {\r\n      this.router.navigate(['denied']);\r\n    }\r\n    this.loadData();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  public applyFilter(filterValue: string) {\r\n    this.dataSource.filter = filterValue;\r\n  }\r\n\r\n  private refresh() {\r\n    // Causes the filter to refresh there by updating with recently added data.\r\n    this.applyFilter(this.dataSource.filter);\r\n  }\r\n\r\n  private updateUsers(user: User) {\r\n    if (this.sourceUser) {\r\n      Object.assign(this.sourceUser, user);\r\n      this.alertService.info(`Changes to user \\\"${user.UserName}\\\" was saved successfully`, 'Success');\r\n      this.sourceUser = null;\r\n    } else {\r\n      this.dataSource.data.push(user);\r\n      this.refresh();\r\n      this.alertService.info(`User \\\"${user.UserName}\\\" was created successfully`, 'Success');\r\n    }\r\n  }\r\n\r\n  private loadData() {\r\n    this.loadingIndicator = true;\r\n    if (this.canAssignRoles) {\r\n      this.accountService.getUsersAndRoles().subscribe(\r\n        results => this.onDataLoadSuccessful(results[0], results[1]),\r\n        error => this.onDataLoadFailed(error)\r\n      );\r\n    } else {\r\n      this.accountService.getUsers().subscribe(\r\n        users => this.onDataLoadSuccessful(users, this.accountService.currentUser.Roles.map(r => new Role(r))),\r\n        error => this.onDataLoadFailed(error)\r\n      );\r\n    }\r\n  }\r\n\r\n  private onDataLoadSuccessful(users: User[], roles: Role[]) {\r\n    this.loadingIndicator = false;\r\n    // console.log(users);\r\n    const ADMIN_ROLE = 'Site Administrators'; // check case sensitivity\r\n    if (!this.canManageAdmins) {\r\n      users = users.filter((item) => {\r\n        return item.SiteCode === this.currentUser.SiteCode;\r\n      });\r\n    } else {\r\n      users = users.filter((item) => {\r\n        return (item.Roles.includes (ADMIN_ROLE) );\r\n      });\r\n    }\r\n    this.dataSource.data = users;\r\n    // this.dataSource.data.filter=th\r\n    this.allRoles = roles;\r\n  }\r\n\r\n  private onDataLoadFailed(error: any) {\r\n    this.loadingIndicator = false;\r\n    this.alertService.error(`Unable to retrieve users from the server.\\r\\nErrors: \"${Utilities.getHttpResponseMessage(error)}\"`,\r\n      'Load Error');\r\n  }\r\n\r\n  private editUser(user?: User) {\r\n    this.sourceUser = user;\r\n\r\n    const dialogRef = this.dialog.open(EditUserDialogComponent,\r\n      {\r\n        panelClass: 'mat-dialog-lg',\r\n        data: { user: user, roles: [...this.allRoles] }\r\n      });\r\n    dialogRef.afterClosed().subscribe(user => {\r\n      if (user) {\r\n        this.updateUsers(user);\r\n      }\r\n    });\r\n  }\r\n\r\n  private confirmDelete(user: User) {\r\n    this.snackBar.open(`Delete ${user.UserName}?`, 'DELETE', { duration: 5000 })\r\n      .onAction().subscribe(() => {\r\n        this.loadingIndicator = true;\r\n\r\n        this.accountService.deleteUser(user)\r\n          .subscribe(results => {\r\n            this.loadingIndicator = false;\r\n            this.dataSource.data = this.dataSource.data.filter(item => item !== user);\r\n          },\r\n            error => {\r\n              this.loadingIndicator = false;\r\n              // tslint:disable-next-line:max-line-length\r\n              this.alertService.error(`An error occured whilst deleting the user.\\r\\nError: \"${Utilities.getHttpResponseMessage(error)}\"`,\r\n                'Delete Error');\r\n            });\r\n      });\r\n  }\r\n\r\n  get canManageAdmins() {\r\n    return this.accountService.userHasPermission(Permission.manageSiteAdministratorsPermission);\r\n  }\r\n\r\n  get canManageUsers() {\r\n    return this.accountService.userHasPermission(Permission.manageUsersPermission);\r\n  }\r\n\r\n  get canViewRoles() {\r\n    return this.accountService.userHasPermission(Permission.viewRolesPermission);\r\n  }\r\n\r\n  get canAssignRoles() {\r\n    return this.accountService.userHasPermission(Permission.assignRolesPermission);\r\n  }\r\n  get currentUser() {\r\n    return this.authService.currentUser;\r\n  }\r\n}\r\n"],"sourceRoot":""}