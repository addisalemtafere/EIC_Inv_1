{"version":3,"sources":["webpack:///./src/app/components/project-profile/project-share/Share.module.ts","webpack:///./src/app/components/project-profile/project-share/project-share-list/project-share-list.component.html","webpack:///./src/app/components/project-profile/project-share/project-share-list/project-share-list.component.scss","webpack:///./src/app/components/project-profile/project-share/project-share-list/project-share-list.component.ts","webpack:///./src/app/components/project-profile/project-share/project-share.component.css","webpack:///./src/app/components/project-profile/project-share/project-share.component.html","webpack:///./src/app/components/project-profile/project-share/project-share.component.ts","webpack:///./src/app/components/project-profile/project-share/share-routing.module.ts"],"names":[],"mappings":"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","file":"components-project-profile-project-module~components-project-profile-project-share-Share-module.js","sourcesContent":["import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {ShareRoutingModule} from './share-routing.module';\r\nimport {ProjectShareListComponent} from './project-share-list/project-share-list.component';\r\nimport {SharedModule} from '@custor/modules/shared.module';\r\nimport {ProjectShareComponent} from './project-share.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    ShareRoutingModule\r\n  ],\r\n  declarations: [ProjectShareListComponent, ProjectShareComponent],\r\n  exports: [ProjectShareListComponent, ProjectShareComponent]\r\n})\r\nexport class ShareModule {\r\n\r\n}\r\n","module.exports = \"<table style=\\\"height: 320px;display: block;overflow: auto;\\\" class=\\\"scrollbar table full-width\\\">\\r\\n  <thead>\\r\\n  <th>No</th>\\r\\n  <th>Nationality</th>\\r\\n  <th>quantity</th>\\r\\n  <th>SharePercent</th>\\r\\n  <th>Description</th>\\r\\n\\r\\n  </thead>\\r\\n  <tbody style=\\\"overflow: auto;\\\">\\r\\n  <tr class=\\\"planned\\\">\\r\\n    <td></td>\\r\\n    <td>{{plannedShareList?.Nationality | countryPipe}}</td>\\r\\n    <td>{{plannedShareList?.Qty}}</td>\\r\\n    <td>{{plannedShareList?.SharePercent}}</td>\\r\\n    <td>{{plannedShareList?.Description}}</td>\\r\\n  </tr>\\r\\n  <tr *ngFor=\\\"let share of shareList;let i=index;\\\">\\r\\n    <td>{{i+1}}</td>\\r\\n    <td>{{share.Nationality | countryPipe}}</td>\\r\\n    <td>{{share.Qty}}</td>\\r\\n    <td>{{share.SharePercent}}</td>\\r\\n    <td>{{share.Description}}</td>\\r\\n  </tr>\\r\\n  </tbody>\\r\\n</table>\\r\\n\"","module.exports = \".table td {\\n  padding: 4px 90px 4px 5px;\\n  font-size: 13px;\\n  border-top: 1px solid #FAFAFA; }\\n\\n.table th {\\n  padding: 4px 90px 4px 5px;\\n  font-size: 13px;\\n  border-top: 1px solid #FAFAFA; }\\n\\ntable tbody tr:nth-child(2) td {\\n  border: 1px solid #0d8055;\\n  background-color: #0d8055;\\n  color: white;\\n  font-weight: bolder; }\\n\"","import {Component, OnInit} from '@angular/core';\r\nimport {ProjectNationalityCompositionService} from '../../../../Services/project-nationality-composition.service';\r\nimport {ProjectNationalityCompositionModel} from '../../../../model/ProjectNationalityComposition.model.';\r\nimport {ActivatedRoute} from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-project-share-list',\r\n  templateUrl: './project-share-list.component.html',\r\n  styleUrls: ['./project-share-list.component.scss']\r\n})\r\nexport class ProjectShareListComponent implements OnInit {\r\n  public shareList: ProjectNationalityCompositionModel[];\r\n  public plannedShareList: ProjectNationalityCompositionModel;\r\n  private ProjectId: any;\r\n\r\n  constructor(public shareService: ProjectNationalityCompositionService,\r\n              private route: ActivatedRoute) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.ProjectId = this.route.snapshot.params['ProjectId'];\r\n\r\n    this.getShareAfterCare();\r\n    this.getPlannedShareAfterCare();\r\n  }\r\n\r\n  getShareAfterCare() {\r\n    this.shareService.getAll()\r\n      .subscribe(result => {\r\n        this.shareList = result;\r\n      });\r\n  }\r\n\r\n  getPlannedShareAfterCare() {\r\n    this.shareService.getAll()\r\n      .subscribe(result => {\r\n        this.plannedShareList = result[0];\r\n      });\r\n  }\r\n}\r\n","module.exports = \"mat-header-row {\\r\\n  background-color: white;\\r\\n  border-top: 1px solid #f1f1f1;\\r\\n  border-bottom: 1px solid #f1f1f1 !important;\\r\\n}\\r\\n\\r\\n.mat-card-header {\\r\\n  min-height: 30px;\\r\\n  background-color: #fafafa;\\r\\n}\\r\\n\"","module.exports = \"<mat-card class=\\\"margin-2\\\" style=\\\"box-shadow: none;border: 1px solid #dddddd\\\" *ngIf=\\\"!isSol\\\">\\r\\n  <!--<mat-card-subtitle class=\\\"sub-title\\\">-->\\r\\n  <!--<mat-icon color=\\\"primary\\\" class=\\\"mat-18\\\">add</mat-icon>-->\\r\\n  <!--Add Share-->\\r\\n  <!--<mat-divider></mat-divider>-->\\r\\n  <!--</mat-card-subtitle>-->\\r\\n\\r\\n  <mat-card-content>\\r\\n    <form [formGroup]=\\\"projectShareForm\\\" novalidate>\\r\\n\\r\\n      <div fxLayout=\\\"row\\\"\\r\\n           fxLayoutAlign=\\\"start center\\\"\\r\\n           class=\\\"content\\\"\\r\\n           fxLayout.lt-sm=\\\"column\\\"\\r\\n           fxLayoutGap=\\\"2em\\\">\\r\\n\\r\\n        <div class=\\\"block\\\" fxLayoutGap=\\\"2em\\\">\\r\\n          <mat-form-field fxLayoutGap=\\\"4em\\\" [fxFlex]=\\\"20\\\">\\r\\n            <mat-label>Nationality * :</mat-label>\\r\\n            <mat-select formControlName=\\\"Nationality\\\">\\r\\n              <mat-option *ngFor=\\\"let nation of nationList\\\" [value]=\\\"nation.id\\\">\\r\\n                {{nation.descriptionEnglish}}\\r\\n              </mat-option>\\r\\n            </mat-select>\\r\\n            <mat-error align=\\\"start\\\" *ngIf=\\\"formErrors.Nationality\\\" class=\\\"form__error\\\">{{ formErrors.Nationality }}\\r\\n            </mat-error>\\r\\n            <mat-error align=\\\"start\\\" *ngIf=\\\"projectShareForm.get('Nationality').hasError('value')\\\" class=\\\"form__error\\\">\\r\\n              Redundant nation is not allowed\\r\\n            </mat-error>\\r\\n          </mat-form-field>\\r\\n\\r\\n          <mat-form-field fxLayoutGap=\\\"4em\\\" [fxFlex]=\\\"20\\\">\\r\\n            <mat-label>Quantity *:</mat-label>\\r\\n            <input type=\\\"number\\\" formControlName=\\\"Qty\\\" matInput>\\r\\n            <mat-error align=\\\"start\\\" *ngIf=\\\"formErrors.Qty\\\" class=\\\"form__error\\\">{{ formErrors.Qty }}\\r\\n            </mat-error>\\r\\n          </mat-form-field>\\r\\n          <mat-form-field fxLayoutGap=\\\"4em\\\" [fxFlex]=\\\"20\\\">\\r\\n            <mat-label>Share Percent % *:</mat-label>\\r\\n            <input type=\\\"number\\\"\\r\\n                   pattern=\\\"^([0-9]{1,2}){1}(\\\\.[0-9]{1,2})?$\\\"\\r\\n                   formControlName=\\\"SharePercent\\\"\\r\\n                   matInput>\\r\\n            <mat-error align=\\\"start\\\" *ngIf=\\\"formErrors.SharePercent\\\" class=\\\"form__error\\\">{{ formErrors.SharePercent }}\\r\\n            </mat-error>\\r\\n            <mat-error align=\\\"start\\\" *ngIf=\\\"projectShareForm.get('SharePercent').hasError('value')\\\" class=\\\"form__error\\\">\\r\\n              Sum of all share percent is exceeded 100\\r\\n            </mat-error>\\r\\n          </mat-form-field>\\r\\n\\r\\n          <mat-form-field class=\\\"full-width\\\" fxLayoutGap=\\\"4em\\\" [fxFlex]=\\\"30\\\">\\r\\n            <mat-label>Description :</mat-label>\\r\\n            <textarea formControlName=\\\"Description\\\" matInput>\\r\\n                 </textarea>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n        <!--<div class=\\\"block\\\" fxFlex=\\\"40%\\\">-->\\r\\n\\r\\n        <!--&lt;!&ndash;Total:{{totalShare}}&ndash;&gt;-->\\r\\n        <!--</div>-->\\r\\n        <div class=\\\"block\\\" fxFlex=\\\"10%\\\">\\r\\n          <button class=\\\"custom-button \\\" [disabled]=\\\"!projectShareForm.valid\\\"\\r\\n                  (click)=\\\"onSubmit()\\\"\\r\\n                  matTooltip=\\\"Add Share\\\">\\r\\n            <mat-icon color=\\\"accent\\\" class=\\\" mat-18\\\">done</mat-icon>\\r\\n            {{editMode ? 'Update' : 'Add'}}\\r\\n          </button>\\r\\n          <!--<a style=\\\"margin-left: 4px\\\" mat-raised-button class=\\\"pointer\\\" (click)=\\\"onClear()\\\" matTooltip=\\\"Clear Form\\\">-->\\r\\n          <!--<mat-icon color=\\\"accent\\\" class=\\\"mat-18\\\">clear_all</mat-icon>-->\\r\\n          <!--clear-->\\r\\n          <!--</a>-->\\r\\n        </div>\\r\\n      </div>\\r\\n    </form>\\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n\\r\\n<mat-card class=\\\"margin-2 padding-0\\\" *ngIf=\\\"nationalityCompositionData.length>0 && !isSol\\\">\\r\\n  <mat-card-header>\\r\\n    <mat-card-subtitle class=\\\"sub-title\\\">List of Share\\r\\n      <!--<mat-divider></mat-divider>-->\\r\\n    </mat-card-subtitle>\\r\\n  </mat-card-header>\\r\\n  <mat-card-content>\\r\\n    <div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"center \\\">\\r\\n\\r\\n      <mat-table class=\\\"full-width\\\" #table [dataSource]=\\\"dataSource\\\">\\r\\n        <ng-container style=\\\"width: 10px !important;\\\" matColumnDef=\\\"No\\\">\\r\\n          <mat-header-cell style=\\\"width: 10px !important;\\\" *matHeaderCellDef>No</mat-header-cell>\\r\\n          <mat-cell style=\\\"width: 10px !important;\\\" *matCellDef=\\\"let nationalityCompositionData;let i=index;\\\">{{i+1}}\\r\\n          </mat-cell>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"Nationality\\\">\\r\\n          <mat-header-cell *matHeaderCellDef>Nationality</mat-header-cell>\\r\\n          <mat-cell *matCellDef=\\\"let nationalityCompositionData\\\"> {{nationalityCompositionData.Nationality | countryPipe\\r\\n            : 1\\r\\n            }}\\r\\n          </mat-cell>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"Qty\\\">\\r\\n          <mat-header-cell *matHeaderCellDef>Quantity</mat-header-cell>\\r\\n          <mat-cell *matCellDef=\\\"let nationalityCompositionData\\\"> {{nationalityCompositionData.Qty}}\\r\\n          </mat-cell>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"SharePercent\\\">\\r\\n          <mat-header-cell *matHeaderCellDef> Share Percent</mat-header-cell>\\r\\n          <mat-cell *matCellDef=\\\"let nationalityCompositionData\\\"> {{nationalityCompositionData.SharePercent }}\\r\\n          </mat-cell>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"Description\\\">\\r\\n          <mat-header-cell *matHeaderCellDef>Description</mat-header-cell>\\r\\n          <mat-cell *matCellDef=\\\"let nationalityCompositionData\\\">{{nationalityCompositionData.Description }}</mat-cell>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"Action\\\">\\r\\n          <mat-header-cell *matHeaderCellDef>Action</mat-header-cell>\\r\\n          <mat-cell *matCellDef=\\\"let nationalityCompositionData;let i=index;\\\">\\r\\n            <div>\\r\\n              <a class=\\\"pointer\\\" mat-min-fab matTooltip=\\\"Click here to edit the Share\\\"\\r\\n                 (click)=\\\"onEditShare(i,nationalityCompositionData.ProjectNationalityCompositionId)\\\">\\r\\n                <mat-icon color=\\\"primary\\\" class=\\\"mat-18\\\">edit</mat-icon>\\r\\n                Edit\\r\\n              </a>\\r\\n              <a class=\\\"pointer\\\" mat-min-fab color=\\\"warn\\\" matTooltip=\\\"Click here to delete the dhare\\\"\\r\\n                 (click)=\\\"deleteShare(i,nationalityCompositionData.ProjectNationalityCompositionId)\\\">\\r\\n                <mat-icon color=\\\"warn\\\">delete</mat-icon>\\r\\n                Delete\\r\\n              </a>\\r\\n            </div>\\r\\n          </mat-cell>\\r\\n        </ng-container>\\r\\n        <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\">\\r\\n        </mat-header-row>\\r\\n        <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\">\\r\\n        </mat-row>\\r\\n      </mat-table>\\r\\n    </div>\\r\\n  </mat-card-content>\\r\\n\\r\\n  <div align=\\\"center\\\">\\r\\n    <div style=\\\"padding: 20px\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center\\\" fxLayoutGap=\\\"2em\\\">\\r\\n\\r\\n      <div fxFlex=\\\"15\\\">\\r\\n\\r\\n        <!--<button class=\\\"custom-button\\\" (click)=\\\"next()\\\" color=\\\"warn\\\" type=\\\"button\\\">-->\\r\\n        <!--Back-->\\r\\n        <!--</button>-->\\r\\n      </div>\\r\\n      <div style=\\\"text-align: center\\\" fxFlex=\\\"67\\\" fxFlexAlign=\\\"center\\\">\\r\\n\\r\\n      </div>\\r\\n      <div fxFlex=\\\"15\\\">\\r\\n\\r\\n        <!--<button class=\\\"custom-button\\\" (click)=\\\"next()\\\" color=\\\"warn\\\" type=\\\"button\\\">-->\\r\\n        <!--Next-->\\r\\n        <!--</button>-->\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n</mat-card>\\r\\n\\r\\n<mat-card class=\\\"margin-2\\\" style=\\\"box-shadow: none;border: 1px solid #dddddd\\\" *ngIf=\\\"isSol\\\">\\r\\n  <!--<mat-card-subtitle class=\\\"sub-title\\\">-->\\r\\n  <!--<mat-icon color=\\\"primary\\\" class=\\\"mat-18\\\">add</mat-icon>-->\\r\\n  <!--Add Share-->\\r\\n  <!--<mat-divider></mat-divider>-->\\r\\n  <!--</mat-card-subtitle>-->\\r\\n  <mat-card-content>\\r\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" fxLayoutGap=\\\"2em\\\">\\r\\n      <div class=\\\"block\\\" fxFlex=\\\"\\\">\\r\\n        <span style=\\\"font-weight: bolder;font-size: 14px;\\\">Full Name : </span>{{InvestorDetial?.InvestorNameEng}}\\r\\n      </div>\\r\\n      <div class=\\\"block\\\" fxFlex=\\\"\\\">\\r\\n        <span style=\\\"font-size: 14px;font-weight: bolder;\\\">Share Percent </span>100 %\\r\\n      </div>\\r\\n\\r\\n\\r\\n    </div>\\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n\"","import {AfterContentChecked, Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {ProjectNationalityCompositionService} from '../../../Services/project-nationality-composition.service';\r\nimport {MatSnackBar} from '@angular/material/snack-bar';\r\nimport {AddressService} from '../../../Services/Address/address.service';\r\nimport {NationalityModel} from '../../../model/address/NationalityModel';\r\nimport {Subscription} from 'rxjs/Subscription';\r\nimport {DataSharingService} from '../../../Services/data-sharing.service';\r\nimport {ProjectNationalityCompositionModel} from '../../../model/ProjectNationalityComposition.model.';\r\nimport {MatTableDataSource} from '@angular/material';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {ErrorMessage} from '@custor/services/errMessageService';\r\nimport {FormService} from '@custor/validation/custom/form';\r\nimport {ActivatedRoute, Params} from '@angular/router';\r\nimport {ProjectProfileService} from '../../../Services/project-profile.service';\r\nimport {InvestorService} from '../../investor/investor.service';\r\nimport {Investor} from '../../../model/investor';\r\n\r\n@Component({\r\n  selector: 'app-project-share',\r\n  templateUrl: './project-share.component.html',\r\n  styleUrls: ['./project-share.component.css']\r\n})\r\nexport class ProjectShareComponent implements OnInit, OnDestroy, AfterContentChecked {\r\n  projectShareForm: FormGroup;\r\n  projectId: number;\r\n  public formErrors = {\r\n    Nationality: '',\r\n    Qty: '',\r\n    SharePercent: ''\r\n  };\r\n  dataSource: any;\r\n  nationList: NationalityModel[] = [];\r\n  editMode = false;\r\n  loading = false;\r\n  shareEditIndex: number;\r\n  ProjectNationalityCompositionId: number;\r\n  nationalityCompositionData: ProjectNationalityCompositionModel[] = [];\r\n  private productShare: ProjectNationalityCompositionModel;\r\n\r\n  subscription: Subscription;\r\n  displayedColumns = ['No', 'Nationality', 'Qty', 'SharePercent', 'Description', 'Action'];\r\n  public steeperIndex: number;\r\n  public isSol: boolean;\r\n  public InvestorDetial: Investor;\r\n  private ServiceId: any;\r\n  private InvestorId: any;\r\n  private workFlowId: any;\r\n  private ServiceApplicationId: any;\r\n\r\n  constructor(private formBuilder: FormBuilder,\r\n              private snackbar: MatSnackBar,\r\n              public route: ActivatedRoute,\r\n              public invService: InvestorService,\r\n              public projectProfileService: ProjectProfileService,\r\n              private errMsg: ErrorMessage,\r\n              private toastr: ToastrService,\r\n              private dataSharing: DataSharingService,\r\n              private formService: FormService,\r\n              private addressService: AddressService,\r\n              private nationalityCompositionService: ProjectNationalityCompositionService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.ServiceId = this.route.snapshot.params['ServiceId'];\r\n    this.InvestorId = this.route.snapshot.params['InvestorId'];\r\n    this.workFlowId = this.route.snapshot.params['workFlowId'];\r\n    this.ServiceApplicationId = this.route.snapshot.params['ServiceApplicationId'];\r\n    this.projectId = this.route.snapshot.params['ProjectId']\r\n\r\n    this.getAllNation();\r\n    this.getInvestorType();\r\n\r\n    if (this.projectId > 1) {\r\n      this.getNationalityCompositionsByProject();\r\n    }\r\n    this.formBuild();\r\n\r\n  }\r\n\r\n  getNationalityCompositionsByProject() {\r\n    this.nationalityCompositionService.NationalityCompositionsByProject(this.projectId).subscribe(result => {\r\n      if (result.length > 0) {\r\n        this.nationalityCompositionData = result;\r\n        this.dataSource = new MatTableDataSource<ProjectNationalityCompositionModel>(this.nationalityCompositionData);\r\n        this.loading = false;\r\n      }\r\n    }, error => this.errMsg.getError(error));\r\n  }\r\n\r\n  onSubmit() {\r\n    this.formService.markFormGroupTouched(this.projectShareForm);\r\n    this.projectShareForm.removeControl('ProjectNationalityCompositionId');\r\n    if (this.projectShareForm.valid) {\r\n      if (!this.editMode) {\r\n        this.nationalityCompositionService.create(this.projectShareForm.value)\r\n          .subscribe(result => {\r\n            if (this.nationalityCompositionData.length < 1) {\r\n              setTimeout(() => this.dataSharing.currentIndex.next(7), 0);\r\n            }\r\n            this.projectShareForm.addControl('ProjectNationalityCompositionId', new FormControl(''));\r\n            this.nationalityCompositionData.push(result);\r\n            this.dataSource = new MatTableDataSource<ProjectNationalityCompositionModel>(this.nationalityCompositionData);\r\n            this.notification('saved');\r\n            this.onClear();\r\n          });\r\n      } else {\r\n        this.nationalityCompositionService.update(this.projectShareForm.value, this.ProjectNationalityCompositionId)\r\n          .subscribe(result => {\r\n            this.notification('updated');\r\n            this.nationalityCompositionData[this.shareEditIndex] = result;\r\n            this.dataSource = new MatTableDataSource<ProjectNationalityCompositionModel>(this.nationalityCompositionData);\r\n            this.onClear();\r\n          }, error => this.toastr.error(this.errMsg.getError(error)));\r\n      }\r\n    } else {\r\n      this.formErrors = this.formService.validateForm(this.projectShareForm, this.formErrors, false);\r\n    }\r\n  }\r\n\r\n  formBuild() {\r\n    this.projectShareForm = this.formBuilder.group({\r\n      ProjectId: new FormControl(this.projectId),\r\n      ProjectNationalityCompositionId: new FormControl(''),\r\n      workFlowId: new FormControl(this.workFlowId),\r\n      Nationality: new FormControl(null, [Validators.required, this.checkNationality.bind(this)]),\r\n      Qty: new FormControl('', [Validators.required]),\r\n      SharePercent: new FormControl(null, [Validators.required, this.validateTotal.bind(this)]),\r\n      Description: new FormControl(null, Validators.minLength(2))\r\n    });\r\n\r\n    this.projectShareForm.valueChanges.subscribe((data) => {\r\n      this.formErrors = this.formService.validateForm(this.projectShareForm, this.formErrors, true);\r\n    });\r\n  }\r\n\r\n  deleteShare(index: number, id: number) {\r\n    this.nationalityCompositionService.delete(id)\r\n      .subscribe(() => {\r\n        this.notification('Deleted');\r\n        this.nationalityCompositionData.splice(index, 1);\r\n        this.dataSource = new MatTableDataSource<ProjectNationalityCompositionModel>(this.nationalityCompositionData);\r\n      });\r\n  }\r\n\r\n  private getAllNation() {\r\n    this.addressService.getNationality()\r\n      .subscribe(result => {\r\n        this.nationList = result;\r\n      });\r\n  }\r\n\r\n  onClear() {\r\n    this.editMode = false;\r\n    this.projectShareForm.reset();\r\n    this.projectShareForm.patchValue({\r\n      ProjectId: this.projectId\r\n    });\r\n    this.projectShareForm.patchValue({\r\n      workFlowId: this.workFlowId\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    // this.subscription.unsubscribe();\r\n  }\r\n\r\n  notification(message: string) {\r\n    this.toastr.success(` Succesfully ${message} Data.!`, 'Success');\r\n\r\n    this.loading = false;\r\n    this.snackbar.open(`Succesfully ${message} Data.!`, 'Close', {\r\n      duration: 3000,\r\n    });\r\n  }\r\n\r\n  onEditShare(index: number, id: number) {\r\n    this.editMode = true;\r\n    this.ProjectNationalityCompositionId = id;\r\n    this.shareEditIndex = index;\r\n    this.productShare = this.nationalityCompositionData[index];\r\n    this.projectShareForm.patchValue(this.productShare);\r\n  }\r\n\r\n\r\n  checkNationality(input: FormControl): { [message: string]: boolean } {\r\n    if (typeof (this.nationalityCompositionData) !== 'undefined' && !this.editMode) {\r\n      for (const nation of this.nationalityCompositionData) {\r\n        if (input.value === nation.Nationality) {\r\n          return {value: true};\r\n        }\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  validateTotal(input: FormControl): { [message: string]: boolean } {\r\n    let total = 0;\r\n    if (typeof (this.nationalityCompositionData) !== 'undefined') {\r\n      for (const nation of this.nationalityCompositionData) {\r\n        total = total + nation.SharePercent + input.value;\r\n      }\r\n      if (total > 100) {\r\n        return {value: true};\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  private getInvestorType() {\r\n    this.invService.getInvestor(localStorage.getItem('InvestorId'))\r\n      .subscribe((result: Investor) => {\r\n        this.InvestorDetial = result;\r\n        if (result.LegalStatus === 1) {\r\n          this.isSol = true;\r\n        } else {\r\n          this.isSol = false;\r\n        }\r\n        if (!this.isSol && this.projectId < 1) {\r\n          setTimeout(() => this.dataSharing.currentIndex.next(7), 0);\r\n        }\r\n      });\r\n  }\r\n\r\n  ngAfterContentChecked(): void {\r\n    // this.projectShareForm.patchValue({\r\n    //   ProjectId: localStorage.getItem('ProjectId')\r\n    // });\r\n    // this.projectShareForm.patchValue({\r\n    //   workFlowId: localStorage.getItem('workFlowId')\r\n    // });\r\n  }\r\n\r\n  next() {\r\n    this.dataSharing.steeperIndex.next(6);\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {ProjectShareListComponent} from './project-share-list/project-share-list.component';\r\nimport {ProjectShareComponent} from './project-share.component';\r\n\r\nconst shareRoutes: Routes = [\r\n  {path: '', component: ProjectShareListComponent},\r\n  {path: ':id', component: ProjectShareComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(shareRoutes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ShareRoutingModule {\r\n\r\n}\r\n"],"sourceRoot":""}