{"version":3,"sources":["webpack:///./src/app/Services/project-status-history.service.ts","webpack:///./src/app/components/project-profile/aftercare/aftercare-routing.module.ts","webpack:///./src/app/components/project-profile/aftercare/aftercare.component.html","webpack:///./src/app/components/project-profile/aftercare/aftercare.component.scss","webpack:///./src/app/components/project-profile/aftercare/aftercare.component.ts","webpack:///./src/app/components/project-profile/aftercare/aftercare.module.ts","webpack:///./src/app/components/project-profile/aftercare/project-status/project-status.component.html","webpack:///./src/app/components/project-profile/aftercare/project-status/project-status.component.scss","webpack:///./src/app/components/project-profile/aftercare/project-status/project-status.component.ts","webpack:///./src/app/components/setting/services-tabs/servicestepper/servicestepper.service.ts","webpack:///./src/app/model/ServiceStep.model.ts"],"names":[],"mappings":"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","file":"app-components-project-profile-aftercare-aftercare-module.js","sourcesContent":["import {Injectable} from '@angular/core';\r\nimport {BaseService} from './Base.service';\r\nimport {ProjectStatusHistoryModel} from '../model/ProjectStatusHistory.Model';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {AppConfiguration} from '../config/appconfig';\r\nimport {ErrorMessage} from '@custor/services/errMessageService';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProjectStatusHistoryService extends BaseService<ProjectStatusHistoryModel> {\r\n\r\n constructor(\r\n     protected http: HttpClient,\r\n     protected appConfig: AppConfiguration,\r\n     protected  errMsg: ErrorMessage) {\r\n     super(http, appConfig.urls.url('ProjectStatusHistory'), errMsg);\r\n   }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {AftercareComponent} from './aftercare.component';\r\nimport {ProjectStatusComponent} from './project-status/project-status.component';\r\n\r\nconst route: Routes = [\r\n  // {path: '', redirectTo: '/after-care/0'},\r\n  {\r\n    path: '', component: AftercareComponent, children: [\r\n      {path: '/:ProjectId', component: AftercareComponent},\r\n      {\r\n        path: 'cost-list/:ProjectId',\r\n        loadChildren: 'app/components/project-profile/project-cost/ProjectCost.module#ProjectCostModule'\r\n      },\r\n      {\r\n        path: 'employment/:ProjectId',\r\n        loadChildren: 'app/components/project-profile/project-employment/employment.module#EmploymentModule'\r\n      },\r\n      {\r\n        path: 'share/:ProjectId',\r\n        loadChildren: 'app/components/project-profile/project-share/Share.module#ShareModule'\r\n      },\r\n      {\r\n        path: 'product/:ProjectId',\r\n        loadChildren: 'app/components/project-profile/project-product/product.module#ProductModule'\r\n      },\r\n      {\r\n        path: 'utility/:ProjectId',\r\n        loadChildren: 'app/components/project-profile/project-input/utility.module#UtilityModule'\r\n      },\r\n      {\r\n        path: 'raw-material/:ProjectId',\r\n        loadChildren: 'app/components/project-profile/project-input/raw-material-list/rawMaterial.Module#RawMaterialModule'\r\n      },\r\n      {\r\n        path: 'project-status/:ProjectId', component: ProjectStatusComponent\r\n      },\r\n\r\n    ]\r\n  }\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(route)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AftercareRoutingModule {\r\n}\r\n","module.exports = \"<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" fxLayoutGap=\\\"0\\\">\\r\\n  <div class=\\\"block\\\" fxFlex=\\\"\\\">\\r\\n    <app-page-header title=\\\"aftercare\\\" icon=\\\"view_list\\\"></app-page-header>\\r\\n\\r\\n  </div>\\r\\n  <div id=\\\"title1\\\" class=\\\"block\\\" fxFlex=\\\"50\\\">\\r\\n    <span class=\\\"page-title\\\">{{title}}</span>\\r\\n    <span class=\\\"slideBorder\\\">/</span>\\r\\n    <span class=\\\"page-title\\\">{{investorName}}</span>\\r\\n    <span class=\\\"slideBorder\\\">/</span>\\r\\n    <span class=\\\"page-title\\\">{{projectName}}</span>\\r\\n\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n<mat-card>\\r\\n  <mat-card-header>\\r\\n    <mat-card-subtitle>\\r\\n\\r\\n\\r\\n      <!--<span>Investor Name : Name /</span> <span>   Project Name: p name / </span>-->\\r\\n      <span class=\\\"sub-title\\\">{{title}}</span>\\r\\n\\r\\n\\r\\n      <mat-divider></mat-divider>\\r\\n    </mat-card-subtitle>\\r\\n\\r\\n  </mat-card-header>\\r\\n  <mat-card-content>\\r\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start start\\\" fxLayoutGap=\\\"2em\\\">\\r\\n\\r\\n      <div class=\\\"block\\\" fxFlex=\\\"21%\\\">\\r\\n        <table style=\\\"height: 320px;display: block;overflow: auto;\\\" class=\\\"scrollbar table full-width\\\">\\r\\n          <thead style=\\\"padding-bottom: 14px;\\\">\\r\\n          <th>Select One <br>\\r\\n            <div style=\\\"color: #fafafa;\\\">white</div>\\r\\n          </th>\\r\\n          </thead>\\r\\n\\r\\n          <tbody style=\\\"overflow: auto;\\\">\\r\\n          <tr *ngFor=\\\"let item of serviceSteps\\\">\\r\\n            <td *ngIf=\\\"item.NameEnglish!=='Project Profile' &&\\r\\n           item.NameEnglish!=='Documnet' &&\\r\\n           item.NameEnglish!=='Project Share' &&\\r\\n           item.NameEnglish!=='View'\\\"\\r\\n                (click)=\\\"view(item.NameEnglish,item.ServiceStepId)\\\">\\r\\n              <a class=\\\"pointer\\\">\\r\\n                <mat-icon style=\\\"float: left;\\\" color=\\\"primary\\\" class=\\\"mat-18\\\">add_box</mat-icon>\\r\\n                <span style=\\\"float: left;\\\"> {{item.NameEnglish}}</span>\\r\\n              </a>\\r\\n            </td>\\r\\n          </tr>\\r\\n          <tr>\\r\\n            <td>\\r\\n              <a class=\\\"pointer\\\"\\r\\n                 (click)=\\\"view('projectStatus',12)\\\">\\r\\n                <mat-icon style=\\\"float: left;\\\" color=\\\"primary\\\" class=\\\"mat-18\\\">add_box</mat-icon>\\r\\n                <span style=\\\"float: left;\\\">Project Status</span>\\r\\n              </a>\\r\\n\\r\\n            </td>\\r\\n\\r\\n          </tr>\\r\\n\\r\\n          <tr>\\r\\n            <td>\\r\\n              <a class=\\\"pointer\\\"\\r\\n                 (click)=\\\"view('ProjectAddress',12)\\\">\\r\\n                <mat-icon style=\\\"float: left;\\\" color=\\\"primary\\\" class=\\\"mat-18\\\">add_box</mat-icon>\\r\\n                <span style=\\\"float: left;\\\">Project Address</span>\\r\\n              </a>\\r\\n            </td>\\r\\n\\r\\n\\r\\n          </tr>\\r\\n          </tbody>\\r\\n        </table>\\r\\n\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"block\\\" fxFlex=\\\"75%\\\">\\r\\n        <router-outlet></router-outlet>\\r\\n      </div>\\r\\n    </div>\\r\\n  </mat-card-content>\\r\\n\\r\\n  <mat-card-footer>\\r\\n    <mat-divider></mat-divider>\\r\\n\\r\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" fxLayoutGap=\\\"2em\\\">\\r\\n      <div fxFlex=\\\"80\\\">\\r\\n        <button class=\\\"custom-button margin-10\\\" (click)=\\\"back()\\\">\\r\\n          <mat-icon class=\\\"mat-18\\\">arrow_back</mat-icon>\\r\\n          Back\\r\\n        </button>\\r\\n      </div>\\r\\n      <div fxFlex=\\\"15\\\">\\r\\n        <button class=\\\"custom-button margin-10\\\" (click)=\\\"gotStep()\\\">\\r\\n          <mat-icon class=\\\"mat-18\\\">add_circle_outline</mat-icon>\\r\\n          Add\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </mat-card-footer>\\r\\n</mat-card>\\r\\n\"","module.exports = \".table td {\\n  padding: 4px 2.9rem 4px 1.3rem;\\n  font-size: 13px;\\n  border-top: 1px solid #FAFAFA; }\\n\\n.table th {\\n  padding: 4px 2.9rem 4px 1.3rem;\\n  font-size: 13px;\\n  border-top: 1px solid #FAFAFA; }\\n\"","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {ServicestepperService} from '../../setting/services-tabs/servicestepper/servicestepper.service';\r\nimport {ServiceStepModel} from '../../../model/ServiceStep.model';\r\nimport {DataSharingService} from '../../../Services/data-sharing.service';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {ProjectModel} from '../../../model/project.model';\r\nimport {ProjectProfileService} from '../../../Services/project-profile.service';\r\nimport {ErrorMessage} from '@custor/services/errMessageService';\r\nimport {MatPaginator, MatTableDataSource} from '@angular/material';\r\nimport {BaseComponent} from '../../base-components/base.component';\r\nimport {ToastrService} from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-aftercare',\r\n  templateUrl: './aftercare.component.html',\r\n  styleUrls: ['./aftercare.component.scss']\r\n})\r\nexport class AftercareComponent extends BaseComponent implements OnInit {\r\n  serviceSteps: ServiceStepModel[];\r\n  loading = true;\r\n  projectList: ProjectModel[];\r\n  dataSource: any;\r\n  step = 0;\r\n\r\n  displayedColumns = ['No', 'ProjectName', 'Status'];\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  public title: any;\r\n  public projectName: string | null;\r\n  public investorName: string | null;\r\n  private ProjectId: any;\r\n\r\n  constructor(public servicestepperService: ServicestepperService,\r\n              public router: Router,\r\n              public route: ActivatedRoute,\r\n              public errMsg: ErrorMessage,\r\n              public alert: ToastrService,\r\n              public projectProfileService: ProjectProfileService,\r\n              public dataSharing: DataSharingService) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.ProjectId = this.route.snapshot.params['ProjectId'];\r\n    console.log(this.ProjectId)\r\n    this.getSteps();\r\n    // this.getAllProject();\r\n    this.title = localStorage.getItem('title');\r\n    this.projectName = localStorage.getItem('projectName');\r\n    this.investorName = localStorage.getItem('investorName');\r\n  }\r\n\r\n  getSteps() {\r\n    this.servicestepperService.getServiceSteps()\r\n      .subscribe(result => {\r\n        // console.log(result);\r\n        this.serviceSteps = result;\r\n      });\r\n  }\r\n\r\n  gotStep() {\r\n    this.step = +localStorage.getItem('afterCareStep');\r\n    if (this.step === 0) {\r\n      this.alert.error('select One of them You want To Update');\r\n    } else {\r\n      let stepIndex;\r\n      switch (this.step) {\r\n        case 8:\r\n          stepIndex = 1;\r\n          setTimeout(() => this.dataSharing.steeperIndex.next(stepIndex), 0);\r\n          // this.router.navigate(['/pro', 0]);\r\n          this.router.navigate(['pro/' + this.ProjectId + '/' + 0 + '/' + 1234 + '/' + 0 + '/' + 0]);\r\n\r\n          break;\r\n        case 9:\r\n          stepIndex = 3;\r\n          this.router.navigate(['/project-cost/' + this.ProjectId + '/' + 1234 + '/' + 0]);\r\n\r\n          break;\r\n        case 10:\r\n          stepIndex = 4;\r\n          this.router.navigate(['/employment/' + this.ProjectId + '/' + 1234 + '/' + 0]);\r\n\r\n          break;\r\n        case 11:\r\n          stepIndex = 2;\r\n          setTimeout(() => this.dataSharing.steeperIndex.next(stepIndex), 0);\r\n          // this.router.navigate(['/pro', 0]);\r\n          this.router.navigate(['pro/' + this.ProjectId + '/' + 0 + '/' + 1234 + '/' + 0 + '/' + 0]);\r\n\r\n          break;\r\n        case 12:\r\n          stepIndex = 6;\r\n          this.router.navigate(['/product/' + this.ProjectId + '/' + 1234 + '/' + 0]);\r\n\r\n          break;\r\n        case 13:\r\n          stepIndex = 3;\r\n          setTimeout(() => this.dataSharing.steeperIndex.next(stepIndex), 0);\r\n          // this.router.navigate(['/pro', 0]);\r\n          this.router.navigate(['pro/' + this.ProjectId + '/' + 0 + '/' + 1234 + '/' + 0 + '/' + 0]);\r\n\r\n          break;\r\n        case 14:\r\n          stepIndex = 5;\r\n          this.router.navigate(['/share/' + this.ProjectId + '/' + 1234 + '/' + 0]);\r\n\r\n          break;\r\n        case 18:\r\n          stepIndex = 7;\r\n          setTimeout(() => this.dataSharing.steeperIndex.next(stepIndex), 0);\r\n          // this.router.navigate(['/pro', 0]);\r\n          this.router.navigate(['pro/' + this.ProjectId + '/' + 0 + '/' + 1234 + '/' + 0 + '/' + 0]);\r\n\r\n          break;\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n\r\n\r\n  view(name: any, step: any) {\r\n    this.title = name;\r\n\r\n    localStorage.setItem('afterCareStep', step);\r\n    switch (name) {\r\n      case 'Project cost':\r\n        this.router.navigate(['cost-list/' + this.ProjectId], {relativeTo: this.route});\r\n        break;\r\n      case 'Project Employment':\r\n        this.router.navigate(['employment/' + this.ProjectId], {relativeTo: this.route});\r\n        break;\r\n      case 'project Utility':\r\n        this.router.navigate(['utility/' + this.ProjectId], {relativeTo: this.route});\r\n        break;\r\n      case 'Project OutPut':\r\n        this.router.navigate(['product/' + this.ProjectId], {relativeTo: this.route});\r\n        break;\r\n      case 'Projec Input':\r\n        this.router.navigate(['raw-material/' + this.ProjectId], {relativeTo: this.route});\r\n        break;\r\n\r\n      case 'Project Share':\r\n        this.router.navigate(['share/' + this.ProjectId], {relativeTo: this.route});\r\n        break;\r\n\r\n      case 'projectStatus':\r\n        this.router.navigate(['project-status/' + this.ProjectId], {relativeTo: this.route});\r\n        break;\r\n      case 'ProjectAddress':\r\n        this.router.navigate(['address/', this.ProjectId]);\r\n\r\n        break;\r\n      default:\r\n        this.router.navigate(['notfound']);\r\n        break;\r\n    }\r\n\r\n  }\r\n\r\n  back() {\r\n    window.history.back();\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {SharedModule} from '@custor/modules/shared.module';\r\nimport {AftercareRoutingModule} from './aftercare-routing.module';\r\nimport {AftercareComponent} from './aftercare.component';\r\nimport {ProjectCostModule} from '../project-cost/ProjectCost.module';\r\nimport { ProjectStatusComponent } from './project-status/project-status.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    AftercareRoutingModule,\r\n    // ProjectCostModule\r\n  ],\r\n  declarations: [AftercareComponent, ProjectStatusComponent],\r\n  exports: [AftercareComponent]\r\n})\r\nexport class AftercareModule {\r\n}\r\n","module.exports = \"<mat-card style=\\\"margin-top: 10px;padding-bottom: 30px\\\" class=\\\"margin-2\\\">\\r\\n  <mat-card-header>\\r\\n    <mat-card-subtitle class=\\\"sub-title\\\">Project Status</mat-card-subtitle>\\r\\n  </mat-card-header>\\r\\n  <mat-divider></mat-divider>\\r\\n\\r\\n  <mat-card-content style=\\\"padding-bottom: 35px;    padding-top: 43px;\\\">\\r\\n    <form [formGroup]=\\\"projectStatusForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n      <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start start\\\" fxLayoutGap=\\\"2em\\\">\\r\\n        <div class=\\\"block\\\" fxFlex=\\\"\\\">\\r\\n          <mat-form-field>\\r\\n            <mat-label>Project Stage *:</mat-label>\\r\\n            <mat-select formControlName=\\\"ProjectStage\\\" required>\\r\\n              <option value=\\\"0\\\">--Select--</option>\\r\\n              <mat-option *ngFor=\\\"let status of projectStage\\\" [value]=\\\"status.Id\\\">\\r\\n                <span>{{status.DescriptionEnglish}}</span>\\r\\n\\r\\n              </mat-option>\\r\\n            </mat-select>\\r\\n            <!--<input formControlName=\\\"ProjectStatus\\\" matInput placeholder=\\\"Other Source Description  :\\\">-->\\r\\n            <!--<mat-error align=\\\"start\\\" *ngIf=\\\"formErrors.ProjectStatus\\\" class=\\\"form__error\\\">-->\\r\\n            <!--{{ formErrors.ProjectStatus }}-->\\r\\n            <!--</mat-error>-->\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n        <div class=\\\"block\\\" fxFlex=\\\"\\\">\\r\\n          <mat-form-field>\\r\\n            <mat-label>Project Status *:</mat-label>\\r\\n            <mat-select formControlName=\\\"ProjectStatus\\\" required>\\r\\n              <option value=\\\"0\\\">--Select--</option>\\r\\n              <mat-option *ngFor=\\\"let status of projectStatus\\\" [value]=\\\"status.Id\\\">\\r\\n                <span>{{status.DescriptionEnglish}}</span>\\r\\n\\r\\n              </mat-option>\\r\\n            </mat-select>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n        <div class=\\\"block\\\" fxFlex=\\\"20\\\">\\r\\n          <mat-form-field class=\\\"full-width\\\">\\r\\n            <mat-label>Quarter</mat-label>\\r\\n            <mat-select formControlName=\\\"Quarter\\\" required>\\r\\n              <mat-option *ngFor=\\\"let row of Quarter\\\" [value]=\\\"row.Id\\\">\\r\\n                <span>{{row.DescriptionEnglish}}</span>\\r\\n              </mat-option>\\r\\n            </mat-select>\\r\\n          </mat-form-field>\\r\\n\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"block\\\" fxFlex=\\\"20\\\">\\r\\n          <mat-form-field class=\\\"full-width\\\">\\r\\n            <input placeholder=\\\"Registration Year* :\\\"\\r\\n                   matInput\\r\\n                   formControlName=\\\"RegistrationYear\\\"\\r\\n                   [matDatepicker]=\\\"RegistrationYear\\\">\\r\\n            <mat-datepicker-toggle matSuffix [for]=\\\"RegistrationYear\\\"></mat-datepicker-toggle>\\r\\n            <mat-datepicker #RegistrationYear></mat-datepicker>\\r\\n            <!--<mat-error align=\\\"start\\\" *ngIf=\\\"formErrors.RegistrationYear\\\" class=\\\"form__error\\\">-->\\r\\n            <!--{{ formErrors.RegistrationYear }}-->\\r\\n            <!--</mat-error>-->\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n      <div style=\\\"margin-top: 30px\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"center center\\\" fxLayoutGap=\\\"2em\\\">\\r\\n        <div class=\\\"block\\\" >\\r\\n          <button\\r\\n            [disabled]=\\\"!projectStatusForm.valid\\\"\\r\\n            mat-raised-button=\\\"\\\"\\r\\n            type=\\\"submit\\\"\\r\\n            color=\\\"primary\\\">\\r\\n            <mat-icon class=\\\"mat-18\\\">done</mat-icon>\\r\\n            <span class=\\\"agree\\\">Update</span>\\r\\n\\r\\n          </button>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n    </form>\\r\\n\\r\\n\\r\\n  </mat-card-content>\\r\\n\\r\\n\\r\\n</mat-card>\\r\\n\"","module.exports = \"\"","import {AfterContentChecked, Component, OnInit} from '@angular/core';\r\nimport {ProjectStageModel, ProjectStatusModel, QuarterModel} from '../../../../model/lookupData';\r\nimport {ProjectStage, ProjectStatus, Quarter} from '@custor/const/consts';\r\nimport {FormBuilder, FormGroup} from '@angular/forms';\r\nimport {ProjectProfileService} from '../../../../Services/project-profile.service';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {ProjectStatusHistoryService} from '../../../../Services/project-status-history.service';\r\nimport {ActivatedRoute} from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-project-status',\r\n  templateUrl: './project-status.component.html',\r\n  styleUrls: ['./project-status.component.scss']\r\n})\r\nexport class ProjectStatusComponent implements OnInit, AfterContentChecked {\r\n\r\n  projectStatus: ProjectStatusModel[] = [];\r\n  projectStage: ProjectStageModel[] = [];\r\n  projectStatusForm: FormGroup;\r\n  public Quarter: QuarterModel[] = [];\r\n  private projectId: any;\r\n\r\n  constructor(public fb: FormBuilder,\r\n              private toast: ToastrService,\r\n              private route: ActivatedRoute,\r\n              private projectStatusHistoryService: ProjectStatusHistoryService,\r\n              private projectService: ProjectProfileService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.projectId = this.route.snapshot.params['ProjectId']\r\n    this.formBuild();\r\n    this.initStaticData('en');\r\n  }\r\n\r\n  private formBuild() {\r\n    this.projectStatusForm = this.fb.group({\r\n      ProjectId: this.projectId,\r\n      ProjectStatus: '',\r\n      ProjectStage: '',\r\n      RegistrationYear: '',\r\n      Quarter: ''\r\n    });\r\n  }\r\n\r\n  initStaticData(currentLang) {\r\n\r\n    let projectStatus1: ProjectStatusModel = new ProjectStatusModel();\r\n    ProjectStatus.forEach(pair => {\r\n      projectStatus1 = {\r\n        'Id': pair.Id.toString(), 'DescriptionEnglish': pair.DescriptionEnglish,\r\n        'Description': pair.Description\r\n      };\r\n      this.projectStatus.push(projectStatus1);\r\n    });\r\n\r\n    let projectSage: ProjectStageModel = new ProjectStageModel();\r\n    ProjectStage.forEach(pair => {\r\n      projectSage = {\r\n        'Id': pair.Id.toString(), 'DescriptionEnglish': pair.DescriptionEnglish,\r\n        'Description': pair.Description\r\n      };\r\n      this.projectStage.push(projectSage);\r\n    });\r\n\r\n    let Quarter1: QuarterModel = new QuarterModel();\r\n    Quarter.forEach(pair => {\r\n      Quarter1 = {\r\n        'Id': pair.Id.toString(),\r\n        'DescriptionEnglish': pair.DescriptionEnglish,\r\n        'Description': pair.Description\r\n      };\r\n      this.Quarter.push(Quarter1);\r\n    });\r\n\r\n  }\r\n\r\n  onSubmit() {\r\n\r\n    this.projectStatusHistoryService.create(this.projectStatusForm.value)\r\n      .subscribe(result => {\r\n        this.toast.success('Project Status', 'Success');\r\n\r\n      });\r\n\r\n  }\r\n\r\n  ngAfterContentChecked(): void {\r\n    // this.projectStatusForm.patchValue({\r\n    //   ProjectId: localStorage.getItem('ProjectId')\r\n    // });\r\n  }\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { AppConfiguration } from '../../../../config/appconfig';\r\nimport { ErrorMessage } from '../../../../../@custor/services/errMessageService';\r\nimport { ServiceStepModel } from '../../../../model/ServiceStep.model';\r\nimport { ServiceModel } from '../../../../model/Service.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ServicestepperService {\r\n  constructor(public httpClient: HttpClient,\r\n    public config: AppConfiguration, public errMsg: ErrorMessage) {\r\n    // super(httpClient, config.urls.url('servicestepper'), errMsg);\r\n  }\r\n\r\n  serviceStepModelList: ServiceStepModel[] = [];\r\n  serviceStepModel: ServiceStepModel = new ServiceStepModel();\r\n  serviceList: ServiceModel[];\r\n\r\n  getServiceSteps(): Observable<ServiceStepModel[]> {\r\n    return this.httpClient.get<ServiceStepModel[]>(this.config.urls.url('servicesteppers')).pipe(\r\n      map(serviceStepModelList => this.serviceStepModelList = serviceStepModelList),\r\n      catchError(this.errMsg.parseObservableResponseError));\r\n  }\r\n\r\n  getServiceStep(id): Observable<ServiceStepModel> {\r\n    return this.httpClient.get<ServiceStepModel>(this.config.urls.url('servicestepper', id)).pipe(\r\n      map(servicePrereq => {\r\n        this.serviceStepModel = servicePrereq;\r\n        return this.serviceStepModel;\r\n      }),\r\n      catchError(this.errMsg.parseObservableResponseError));\r\n  }\r\n\r\n  getService(): Observable<ServiceModel[]> {\r\n    return this.httpClient.get<ServiceModel[]>(this.config.urls.url('services')).pipe(\r\n      map(serviceList => this.serviceList = serviceList),\r\n      catchError(this.errMsg.parseObservableResponseError));\r\n  }\r\n\r\n  saveServiceStep(serviceStepModel: ServiceStepModel): Observable<ServiceStepModel> {\r\n\r\n    return this.httpClient.post<ServiceStepModel>(this.config.urls.url('servicestepper'), serviceStepModel).pipe(\r\n      map(ServicePrereq => {\r\n        this.serviceStepModel = ServicePrereq;\r\n        return this.serviceStepModel;\r\n      }),\r\n      catchError(this.errMsg.parseObservableResponseError), );\r\n  }\r\n\r\n  deleteServiceStep(serviceStepModel: ServiceStepModel): Observable<any> {\r\n    return this.httpClient.delete<boolean>(this.config.urls.url('servicestepper', serviceStepModel.ServiceStepId)).pipe(\r\n      map(result => {\r\n        return result;\r\n      }),\r\n      catchError(this.errMsg.parsePromiseResponseError), );\r\n  }\r\n}\r\n","import { ServicePrerequisiteModel } from './service';\r\n\r\nexport class ServiceStepModel {\r\n  public ServiceStepId: number;\r\n  public Name: string;\r\n  public NameEnglish: string;\r\n  public LegalStatusId: number;\r\n  public ServiceId: string;\r\n  public IsActive: boolean;\r\n  public Service?: ServicePrerequisiteModel;\r\n}"],"sourceRoot":""}